{
    "pipes": [],
    "interfaces": [
        {
            "name": "DateInputParts",
            "id": "interface-DateInputParts-cc268e7369171d2d037d8cd27c5a1c67093f6070e78e5d791b193f58665d4f9413f09b30c28632aa2d9e4651e23041d4d587d382532e6894cb3e418b47ab083d",
            "file": "libs/ngx-govuk-frontend/date-input/src/lib/date-input.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { NgClass } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  inject,\r\n  input,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  GovUKCommonFormInputDirective,\r\n  ValueAccessorDirective,\r\n  injectNgControl,\r\n  inputCommonInputs,\r\n} from 'ngx-govuk-frontend/form-utils';\r\n\r\ninterface DateInputParts {\r\n  day?: string;\r\n  month?: string;\r\n  year?: string;\r\n}\r\n\r\n/**\r\n * A form component for date input that follows the GOV.UK Design System styling and behavior.\r\n *\r\n * This component provides a set of input fields for day, month, and year with proper validation and styling.\r\n * It integrates with Angular's form controls and supports accessibility features.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-date-input\r\n *   formControlName=\"dateOfBirth\"\r\n *   inputId=\"date-of-birth\"\r\n *   min=\"1900-01-01\"\r\n *   max=\"2050-12-31\"\r\n * ></ngx-govuk-date-input>\r\n * ```\r\n *\r\n * @property {string} inputId - Optional. The ID prefix for the input elements.\r\n * @property {string} extraClasses - Optional. Additional CSS classes to apply to the input elements.\r\n * @property {string} min - Optional. The minimum valid date in ISO format (YYYY-MM-DD).\r\n * @property {string} max - Optional. The maximum valid date in ISO format (YYYY-MM-DD).\r\n */\r\n@Component({\n    selector: 'ngx-govuk-date-input',\n    imports: [NgClass, ReactiveFormsModule],\n    templateUrl: './date-input.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\r\nexport class GovUKDateInputComponent {\r\n  readonly ngControl = injectNgControl();\r\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\r\n\r\n  /**\r\n   * The minimum valid date in ISO format (YYYY-MM-DD).\r\n   * Default is 1900-01-01.\r\n   */\r\n  readonly min = input('1900-01-01');\r\n\r\n  /**\r\n   * The maximum valid date in ISO format (YYYY-MM-DD).\r\n   * Default is 100 years from now.\r\n   */\r\n  readonly max = input(\r\n    new Date(new Date().getFullYear() + 100, 11, 31)\r\n      .toISOString()\r\n      .split('T')[0],\r\n  );\r\n\r\n  private readonly minDate = computed(() => {\r\n    try {\r\n      return new Date(this.min());\r\n    } catch (e) {\r\n      return new Date(1900, 0, 1); // January 1, 1900\r\n    }\r\n  });\r\n\r\n  private readonly maxDate = computed(() => {\r\n    try {\r\n      return new Date(this.max());\r\n    } catch (e) {\r\n      // Default to 100 years from now\r\n      return new Date(new Date().getFullYear() + 100, 11, 31); // December 31, current year + 100\r\n    }\r\n  });\r\n\r\n  protected dateForm = new FormGroup(\r\n    {\r\n      day: new FormControl<string>('', [\r\n        Validators.pattern(/^([1-9]|0[1-9]|[12]\\d|3[01])$/),\r\n      ]),\r\n      month: new FormControl<string>('', [\r\n        Validators.pattern(/^([1-9]|0[1-9]|1[012])$/),\r\n      ]),\r\n      year: new FormControl<string>('', [Validators.pattern(/^\\d{4}$/)]),\r\n    },\r\n    { validators: this.dateValidator() },\r\n  );\r\n\r\n  constructor() {\r\n    this.dateForm.valueChanges.subscribe((value) => {\r\n      const day = value.day ?? '';\r\n      const month = value.month ?? '';\r\n      const year = value.year ?? '';\r\n      this.onDateFormChange({ day, month, year });\r\n\r\n      // Collect all errors from the form and individual controls\r\n      const errors: Record<string, unknown> = {};\r\n\r\n      // Add form-level errors (like invalidDate)\r\n      if (this.dateForm.errors) {\r\n        Object.assign(errors, this.dateForm.errors);\r\n      }\r\n\r\n      // Add field-level errors with prefixes\r\n      const dayControl = this.dateForm.get('day');\r\n      const monthControl = this.dateForm.get('month');\r\n      const yearControl = this.dateForm.get('year');\r\n\r\n      if (dayControl?.errors) {\r\n        Object.entries(dayControl.errors).forEach(([key, value]) => {\r\n          errors[`day_${key}`] = value;\r\n        });\r\n      }\r\n\r\n      if (monthControl?.errors) {\r\n        Object.entries(monthControl.errors).forEach(([key, value]) => {\r\n          errors[`month_${key}`] = value;\r\n        });\r\n      }\r\n\r\n      if (yearControl?.errors) {\r\n        Object.entries(yearControl.errors).forEach(([key, value]) => {\r\n          errors[`year_${key}`] = value;\r\n        });\r\n      }\r\n\r\n      // Set errors on the parent control if there are any\r\n      if (Object.keys(errors).length > 0) {\r\n        this.ngControl.control?.setErrors(errors);\r\n      } else {\r\n        // Clear errors if all fields are valid\r\n        this.ngControl.control?.setErrors(null);\r\n      }\r\n    });\r\n\r\n    // Handle changes from the parent form control\r\n    this.ngControl.valueChanges?.subscribe((value) => {\r\n      this.updateDateForm(value);\r\n    });\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.dateForm.disable();\r\n    } else {\r\n      this.dateForm.enable();\r\n    }\r\n  }\r\n\r\n  // Expose date parts for testing\r\n  getDateParts(): DateInputParts {\r\n    return {\r\n      day: this.dateForm.get('day')?.value || '',\r\n      month: this.dateForm.get('month')?.value || '',\r\n      year: this.dateForm.get('year')?.value || '',\r\n    };\r\n  }\r\n\r\n  // Custom validator to check if a date is valid\r\n  private dateValidator(): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formGroup = control as FormGroup;\r\n      const day = formGroup.get('day')?.value;\r\n      const month = formGroup.get('month')?.value;\r\n      const year = formGroup.get('year')?.value;\r\n\r\n      // If any field is empty, don't perform validation yet\r\n      if (!day || !month || !year) {\r\n        return null;\r\n      }\r\n\r\n      // Convert string values to numbers\r\n      const dayNum = parseInt(day, 10);\r\n      const monthNum = parseInt(month, 10);\r\n      const yearNum = parseInt(year, 10);\r\n\r\n      // Create a date object - note months are 0-indexed in JS\r\n      const date = new Date(yearNum, monthNum - 1, dayNum);\r\n\r\n      // Check if the date is valid\r\n      // For example, 31/04/2020 (April 31st) is not valid\r\n      if (\r\n        date.getFullYear() !== yearNum ||\r\n        date.getMonth() !== monthNum - 1 ||\r\n        date.getDate() !== dayNum\r\n      ) {\r\n        return { invalidDate: true };\r\n      }\r\n\r\n      // Check min date\r\n      if (this.minDate() && date < this.minDate()) {\r\n        return { dateTooEarly: true, minDate: this.min() };\r\n      }\r\n\r\n      // Check max date\r\n      if (this.maxDate() && date > this.maxDate()) {\r\n        return { dateTooLate: true, maxDate: this.max() };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  private onDateFormChange(value: {\r\n    day: string;\r\n    month: string;\r\n    year: string;\r\n  }): void {\r\n    const { day, month, year } = value;\r\n\r\n    if (!day && !month && !year) {\r\n      this.ngControl.control?.setValue(null);\r\n      return;\r\n    }\r\n\r\n    const paddedDay = day.padStart(2, '0');\r\n    const paddedMonth = month.padStart(2, '0');\r\n\r\n    if (day && month && year) {\r\n      // Full date is available, use ISO format\r\n      this.ngControl.control?.setValue(`${year}-${paddedMonth}-${paddedDay}`);\r\n    } else {\r\n      // Partial date, pass as object\r\n      this.ngControl.control?.setValue({\r\n        day: paddedDay,\r\n        month: paddedMonth,\r\n        year,\r\n      });\r\n    }\r\n\r\n    this.ngControl.control.markAsTouched();\r\n  }\r\n\r\n  // Update internal date form based on parent value\r\n  private updateDateForm(value: string | DateInputParts | null): void {\r\n    if (!value) {\r\n      this.dateForm.reset(\r\n        { day: '', month: '', year: '' },\r\n        { emitEvent: false },\r\n      );\r\n      return;\r\n    }\r\n\r\n    let day = '';\r\n    let month = '';\r\n    let year = '';\r\n\r\n    if (typeof value === 'string') {\r\n      // Handle ISO date format (YYYY-MM-DD)\r\n      const dateParts = value.split('-');\r\n      if (dateParts.length === 3) {\r\n        year = dateParts[0];\r\n        month = dateParts[1].replace(/^0/, ''); // Remove leading zero\r\n        day = dateParts[2].replace(/^0/, ''); // Remove leading zero\r\n      }\r\n    } else {\r\n      // Handle object format { day, month, year }\r\n      day = value.day?.replace(/^0/, '') || '';\r\n      month = value.month?.replace(/^0/, '') || '';\r\n      year = value.year || '';\r\n    }\r\n\r\n    this.dateForm.setValue({ day, month, year }, { emitEvent: false });\r\n  }\r\n\r\n  protected getInputId(part: string): string | null {\r\n    return this.commonFormInput.inputId()\r\n      ? `${this.commonFormInput.inputId()}-${part}`\r\n      : null;\r\n  }\r\n\r\n  protected hasFieldError(field: string): boolean {\r\n    const control = this.dateForm.get(field);\r\n    return !!control && control.touched && !!control.errors;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "GovUKSelectOption",
            "id": "interface-GovUKSelectOption-21a282000d71b7f2a731c9a3a2b48349c7c8cd4ce6f713650bc112209f1eabef61d0ef95b25ef03b26db92b1b23c450f6ce3424cfa4a5d4f47bf00d5e44d5c14",
            "file": "libs/ngx-govuk-frontend/select/src/lib/select.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  GovUKCommonFormInputDirective,\n  ValueAccessorDirective,\n  injectNgControl,\n  inputCommonInputs,\n} from 'ngx-govuk-frontend/form-utils';\n\nexport interface GovUKSelectOption {\n  label: string;\n  value: string;\n}\n\n@Component({\n    selector: 'ngx-govuk-select',\n    imports: [ReactiveFormsModule],\n    templateUrl: './select.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\nexport class GovUKSelectComponent {\n  readonly ngControl = injectNgControl();\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\n\n  readonly options = input.required<GovUKSelectOption[]>();\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PageItem",
            "id": "interface-PageItem-25ae9721d84fca91c2f545e02d7d35f739f1ada452c9e9656b3b07729739beeb9af4e01de85b0f631510fbf7578b2770ba72eba7a954f0ce01bf0c620c474ba8",
            "file": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n  output,\n} from '@angular/core';\n\n/**\n * Internal interface for pagination items\n */\ninterface PageItem {\n  /** The number/text to display for the item */\n  number: string;\n  /** Whether this is the current active page */\n  current?: boolean;\n  /** Whether to display this item as an ellipsis */\n  ellipsis?: boolean;\n  /** Actual page number for this item */\n  pageNumber?: number;\n  /** Unique identifier for tracking in loops */\n  id: string;\n}\n\n/**\n * Pagination mode - defines layout and behavior\n */\nexport type PaginationMode = 'block' | 'list';\n\n/**\n * A pagination component following the GovUK Design System\n * @component\n *\n * @example\n * <ngx-govuk-pagination\n *   [itemCount]=\"100\"\n *   [itemsPerPage]=\"10\"\n *   [currentPage]=\"1\"\n *   (pageChange)=\"onPageChange($event)\"\n * ></ngx-govuk-pagination>\n */\n@Component({\n  selector: 'ngx-govuk-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKPaginationComponent {\n  /** Total number of items */\n  itemCount = input<number>(0);\n\n  /** Number of items per page */\n  itemsPerPage = input<number>(10);\n\n  /** Current page number (1-based) */\n  currentPage = input<number>(1);\n\n  /** Pagination mode - 'block' or 'list' */\n  mode = input<PaginationMode>('list');\n\n  /** Title for the previous button */\n  previousTitle = input<string>('Previous');\n\n  /** Label for the previous button (additional context) */\n  previousLabel = input<string | null>(null);\n\n  /** Title for the next button */\n  nextTitle = input<string>('Next');\n\n  /** Label for the next button (additional context) */\n  nextLabel = input<string | null>(null);\n\n  /** Output event when a pagination item is clicked */\n  pageChange = output<number>();\n\n  /** Output event when the previous link is clicked */\n  previousClick = output<void>();\n\n  /** Output event when the next link is clicked */\n  nextClick = output<void>();\n\n  /** Counter for generating unique IDs */\n  private ellipsisCounter = 0;\n\n  /** Computed total number of pages */\n  totalPages = computed(() =>\n    Math.ceil(this.itemCount() / this.itemsPerPage()),\n  );\n\n  /** Computed flag for whether previous button should be shown */\n  hasPreviousPage = computed(() => this.currentPage() > 1);\n\n  /** Computed flag for whether next button should be shown */\n  hasNextPage = computed(() => this.currentPage() < this.totalPages());\n\n  /** Computed check if mode is block */\n  isBlockMode = computed(() => this.mode() === 'block');\n\n  /** Computed pagination items */\n  computedItems = computed(() => {\n    const totalPages = this.totalPages();\n    if (totalPages <= 0) {\n      return [];\n    }\n\n    // Simple case: 7 or fewer pages, show all\n    if (totalPages <= 7) {\n      return this.createSequentialItems(1, totalPages);\n    }\n\n    const currentPage = this.currentPage();\n    const items: PageItem[] = [];\n\n    // Always show first page\n    items.push(this.createPageItem(1));\n\n    // Complex case: more than 7 pages, show ellipses\n    if (currentPage <= 4) {\n      // Near the start: show 1 2 3 4 5 ... 100\n      items.push(...this.createSequentialItems(2, 5));\n      items.push(this.createEllipsisItem());\n      items.push(this.createPageItem(totalPages));\n    } else if (currentPage >= totalPages - 3) {\n      // Near the end: show 1 ... 96 97 98 99 100\n      items.push(this.createEllipsisItem());\n      items.push(...this.createSequentialItems(totalPages - 4, totalPages));\n    } else {\n      // In the middle: show 1 ... 49 50 51 ... 100\n      items.push(this.createEllipsisItem());\n      items.push(\n        ...this.createSequentialItems(currentPage - 1, currentPage + 1),\n      );\n      items.push(this.createEllipsisItem());\n      items.push(this.createPageItem(totalPages));\n    }\n\n    return items;\n  });\n\n  /**\n   * Handle page number click\n   */\n  onPageClick(item: PageItem): void {\n    if (!item.ellipsis && item.pageNumber) {\n      this.pageChange.emit(item.pageNumber);\n    }\n  }\n\n  /**\n   * Creates a page item for the specified page number\n   */\n  private createPageItem(pageNumber: number): PageItem {\n    return {\n      number: String(pageNumber),\n      current: pageNumber === this.currentPage(),\n      pageNumber: pageNumber,\n      id: `page-${pageNumber}`,\n    };\n  }\n\n  /**\n   * Creates an ellipsis item\n   */\n  private createEllipsisItem(): PageItem {\n    return {\n      number: '',\n      ellipsis: true,\n      id: `ellipsis-${++this.ellipsisCounter}`,\n    };\n  }\n\n  /**\n   * Creates an array of sequential page items\n   */\n  private createSequentialItems(start: number, end: number): PageItem[] {\n    const items: PageItem[] = [];\n    for (let i = start; i <= end; i++) {\n      items.push(this.createPageItem(i));\n    }\n    return items;\n  }\n}\n",
            "properties": [
                {
                    "name": "current",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Whether this is the current active page</p>\n",
                    "line": 16,
                    "rawdescription": "\nWhether this is the current active page"
                },
                {
                    "name": "ellipsis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Whether to display this item as an ellipsis</p>\n",
                    "line": 18,
                    "rawdescription": "\nWhether to display this item as an ellipsis"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Unique identifier for tracking in loops</p>\n",
                    "line": 22,
                    "rawdescription": "\nUnique identifier for tracking in loops"
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The number/text to display for the item</p>\n",
                    "line": 14,
                    "rawdescription": "\nThe number/text to display for the item"
                },
                {
                    "name": "pageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Actual page number for this item</p>\n",
                    "line": 20,
                    "rawdescription": "\nActual page number for this item"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Internal interface for pagination items</p>\n",
            "rawdescription": "\n\nInternal interface for pagination items\n",
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "GovUKBreadcrumbDirective",
            "id": "directive-GovUKBreadcrumbDirective-7087a0f83f2d60f1a295c3c4a69bde92854d3aeb0f3d5482dfded993e9cf957035707dff7212c76c6a3858a7604988fd80af74f50a12f97231e5d3cbed6edb12",
            "file": "libs/ngx-govuk-frontend/breadcrumbs/src/lib/breadcrumb/breadcrumb.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Directive({\n  selector: 'ngx-govuk-breadcrumb',\n})\nexport class GovUKBreadcrumbDirective {\n  readonly label = input.required<string>();\n  readonly link = input<RouterLink['routerLink']>();\n}\n",
            "selector": "ngx-govuk-breadcrumb",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "link",
                    "defaultValue": "input<RouterLink['routerLink']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "GovUKCommonFormInputDirective",
            "id": "directive-GovUKCommonFormInputDirective-84cf9134a500b16959948a6978da7c0fe168c152fb918572de3d3932ca73136ace50dbcd3e4fb4c6b78531c318433a8734daf84a2b5f38b41ce16d5232fb5fd1",
            "file": "libs/ngx-govuk-frontend/form-utils/src/lib/common-input.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, input } from '@angular/core';\n\nexport const inputCommonInputs = ['autocomplete', 'extraClasses', 'inputId'];\n\n@Directive({\n  })\nexport class GovUKCommonFormInputDirective {\n  readonly autocomplete = input<AutoFill>();\n  readonly extraClasses = input<string>();\n  readonly inputId = input<string>();\n}\n",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "extraClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "extraClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "GovUKErrorSummaryItemDirective",
            "id": "directive-GovUKErrorSummaryItemDirective-919e0750cef85ee8ca1350e568a8f02b3f9c3eb5b69082bcd925652d05bde0f7b093bab52d0270b485db3a094907ae834f39f5abc3e4f046dadb260e827a6beb",
            "file": "libs/ngx-govuk-frontend/error-summary/src/lib/error-summary-item.directive.ts",
            "type": "directive",
            "description": "<p>Directive for an individual error summary item</p>\n<p>This directive is used declaratively and rendered by the parent error summary component.\nIt doesn&#39;t render anything itself - it just provides a declarative API for the error summary.</p>\n<p>The component uses Angular Router&#39;s fragment navigation to enable scrolling to the target element.\nFor proper scrolling behavior, you must enable anchor scrolling in your application&#39;s router\nconfiguration using either:</p>\n<ul>\n<li>RouterModule.forRoot(routes, { anchorScrolling: &#39;enabled&#39; })</li>\n<li>withInMemoryScrolling({ anchorScrolling: &#39;enabled&#39; })</li>\n</ul>\n",
            "rawdescription": "\n\nDirective for an individual error summary item\n\nThis directive is used declaratively and rendered by the parent error summary component.\nIt doesn't render anything itself - it just provides a declarative API for the error summary.\n\nThe component uses Angular Router's fragment navigation to enable scrolling to the target element.\nFor proper scrolling behavior, you must enable anchor scrolling in your application's router\nconfiguration using either:\n\n- RouterModule.forRoot(routes, { anchorScrolling: 'enabled' })\n- withInMemoryScrolling({ anchorScrolling: 'enabled' })\n",
            "sourceCode": "import { Directive, input } from '@angular/core';\n\n/**\n * Directive for an individual error summary item\n *\n * This directive is used declaratively and rendered by the parent error summary component.\n * It doesn't render anything itself - it just provides a declarative API for the error summary.\n *\n * The component uses Angular Router's fragment navigation to enable scrolling to the target element.\n * For proper scrolling behavior, you must enable anchor scrolling in your application's router\n * configuration using either:\n *\n * - RouterModule.forRoot(routes, { anchorScrolling: 'enabled' })\n * - withInMemoryScrolling({ anchorScrolling: 'enabled' })\n */\n@Directive({\n  selector: 'ngx-govuk-error-summary-item',\n  })\nexport class GovUKErrorSummaryItemDirective {\n  /**\n   * The text of the error message to display\n   * Required field that will be displayed as the error message\n   */\n  readonly text = input.required<string>();\n\n  /**\n   * Required targetId attribute for the error link\n   * This should reference the id of the form field with the error.\n   * The component will use Angular Router's fragment navigation to create a link to this element.\n   *\n   * Note: For proper scrolling behavior, anchor scrolling must be enabled in your router configuration.\n   */\n  readonly targetId = input.required<string>();\n}\n",
            "selector": "ngx-govuk-error-summary-item",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "targetId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Required targetId attribute for the error link\nThis should reference the id of the form field with the error.\nThe component will use Angular Router&#39;s fragment navigation to create a link to this element.</p>\n<p>Note: For proper scrolling behavior, anchor scrolling must be enabled in your router configuration.</p>\n",
                    "line": 34,
                    "rawdescription": "\n\nRequired targetId attribute for the error link\nThis should reference the id of the form field with the error.\nThe component will use Angular Router's fragment navigation to create a link to this element.\n\nNote: For proper scrolling behavior, anchor scrolling must be enabled in your router configuration.\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The text of the error message to display\nRequired field that will be displayed as the error message</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nThe text of the error message to display\nRequired field that will be displayed as the error message\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "targetId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Required targetId attribute for the error link\nThis should reference the id of the form field with the error.\nThe component will use Angular Router&#39;s fragment navigation to create a link to this element.</p>\n<p>Note: For proper scrolling behavior, anchor scrolling must be enabled in your router configuration.</p>\n",
                    "line": 34,
                    "rawdescription": "\n\nRequired targetId attribute for the error link\nThis should reference the id of the form field with the error.\nThe component will use Angular Router's fragment navigation to create a link to this element.\n\nNote: For proper scrolling behavior, anchor scrolling must be enabled in your router configuration.\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The text of the error message to display\nRequired field that will be displayed as the error message</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nThe text of the error message to display\nRequired field that will be displayed as the error message\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "GovUKRadioOptionDirective",
            "id": "directive-GovUKRadioOptionDirective-61d89e9523e97e7c81e3f00e76a655116072d057568ad8b852b895598c9d01bd6b680a4655f4a9970384592bc211fba58893a6e516851965172e691a473062b8",
            "file": "libs/ngx-govuk-frontend/radio/src/lib/radio-option.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { booleanAttribute, Directive, input } from '@angular/core';\n\n@Directive({\n  selector: 'ngx-govuk-radio-option',\n  })\nexport class GovUKRadioOptionDirective {\n  readonly label = input.required<string>();\n  readonly value = input.required<string>();\n\n  readonly hint = input<string>();\n  readonly isDivided = input(false, { transform: booleanAttribute });\n}\n",
            "selector": "ngx-govuk-radio-option",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "isDivided",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "GovUKServiceNavigationItemDirective",
            "id": "directive-GovUKServiceNavigationItemDirective-e6e2bc7b76beb46d928694e8fa9042485c673f7fbc4cdf9e2c9b05ea5aed0e6adbce8e0208904dcf0b1e012525bc1d60157e50a86b63ecd7c4d2164f9298ba5f",
            "file": "libs/ngx-govuk-frontend/service-navigation/src/lib/item/navigation-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Directive({\n  selector: 'ngx-govuk-service-navigaiton-item',\n  })\nexport class GovUKServiceNavigationItemDirective {\n  readonly label = input.required<string>();\n  readonly link = input<RouterLink['routerLink']>();\n}\n",
            "selector": "ngx-govuk-service-navigaiton-item",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "link",
                    "defaultValue": "input<RouterLink['routerLink']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "GovUKSummaryListValueDirective",
            "id": "directive-GovUKSummaryListValueDirective-ad7d9e28129c31860b4c7e9b24e8ac929ff63ba0eb656d5207749cfe95245df5b83cecc170a0bc75af26929aa36af06b5d2c24c57c35443a7ca1daf037616622",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-value.directive.ts",
            "type": "directive",
            "description": "<p>Directive for the value content of a summary list item</p>\n<p>This directive allows you to define the value content as a template\nwhich can include complex HTML.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ng-template ngxGovUkSummaryListValue&gt;\n  &lt;p&gt;72 Guild Street&lt;br&gt;London&lt;br&gt;SE23 6FH&lt;/p&gt;\n&lt;/ng-template&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nDirective for the value content of a summary list item\n\nThis directive allows you to define the value content as a template\nwhich can include complex HTML.\n\n```html\n```html\n<ng-template ngxGovUkSummaryListValue>\n  <p>72 Guild Street<br>London<br>SE23 6FH</p>\n</ng-template>\n```\n```",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * Directive for the value content of a summary list item\r\n *\r\n * This directive allows you to define the value content as a template\r\n * which can include complex HTML.\r\n *\r\n * @example\r\n * ```html\r\n * <ng-template ngxGovUkSummaryListValue>\r\n *   <p>72 Guild Street<br>London<br>SE23 6FH</p>\r\n * </ng-template>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[ngxGovUkSummaryListValue]',\r\n  })\r\nexport class GovUKSummaryListValueDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) {}\r\n}\r\n",
            "selector": "[ngxGovUkSummaryListValue]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "GovUKTaskListItemDirective",
            "id": "directive-GovUKTaskListItemDirective-d5364569c4dc33ffe1b25b4457b94189ae710c7e776ec468775f2d939d0580393f3c2f44a2fba9574c552664338c51519fe12adcdc3708ca93c6d1ee8055111f",
            "file": "libs/ngx-govuk-frontend/task-list/src/lib/task-list-item.directive.ts",
            "type": "directive",
            "description": "<p>Directive for an individual task list item</p>\n<p>This directive is used declaratively and rendered by the parent task list component.\nIt doesn&#39;t render anything itself - it just provides a declarative API for the task list.</p>\n",
            "rawdescription": "\n\nDirective for an individual task list item\n\nThis directive is used declaratively and rendered by the parent task list component.\nIt doesn't render anything itself - it just provides a declarative API for the task list.\n",
            "sourceCode": "import { booleanAttribute, Directive, input } from '@angular/core';\r\nimport { GovUKTagColor } from 'ngx-govuk-frontend/tag';\r\n\r\n/**\r\n * Directive for an individual task list item\r\n *\r\n * This directive is used declaratively and rendered by the parent task list component.\r\n * It doesn't render anything itself - it just provides a declarative API for the task list.\r\n */\r\n@Directive({\r\n  selector: 'ngx-govuk-task-list-item',\r\n})\r\nexport class GovUKTaskListItemDirective {\r\n  /**\r\n   * The title of the task to display\r\n   * Required field that will be displayed as the main text for the task\r\n   */\r\n  readonly title = input.required<string>();\r\n\r\n  /**\r\n   * Text to display as the status of the task\r\n   * This will be shown either as plain text or within a tag depending on whether tagColor is provided\r\n   */\r\n  readonly statusText = input.required<string>();\r\n\r\n  /**\r\n   * Optional hint text to display below the task title\r\n   * Provides additional context or guidance for the task\r\n   */\r\n  readonly hint = input<string>();\r\n\r\n  /**\r\n   * Optional URL for the task link\r\n   * If provided and noLink is false, the task title will be rendered as a link to this URL\r\n   */\r\n  readonly href = input<string>();\r\n\r\n  /**\r\n   * Optional Angular router link for the task\r\n   * If provided and noLink is false, the task title will be rendered as a link to this URL\r\n   */\r\n  readonly routerLink = input<string>();\r\n\r\n  /**\r\n   * Color of the tag to use for the status\r\n   * If provided, the status will be shown as a tag with this color\r\n   * If not provided, the status will be shown as plain text\r\n   */\r\n  readonly tagColor = input<GovUKTagColor>();\r\n\r\n  /**\r\n   * When true, the task item will not be rendered as a link\r\n   * This is useful for tasks that are not yet available or accessible\r\n   * @default false\r\n   */\r\n  readonly noLink = input(false, { transform: booleanAttribute });\r\n}\r\n",
            "selector": "ngx-govuk-task-list-item",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional hint text to display below the task title\nProvides additional context or guidance for the task</p>\n",
                    "line": 31,
                    "rawdescription": "\n\nOptional hint text to display below the task title\nProvides additional context or guidance for the task\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional URL for the task link\nIf provided and noLink is false, the task title will be rendered as a link to this URL</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nOptional URL for the task link\nIf provided and noLink is false, the task title will be rendered as a link to this URL\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional Angular router link for the task\nIf provided and noLink is false, the task title will be rendered as a link to this URL</p>\n",
                    "line": 43,
                    "rawdescription": "\n\nOptional Angular router link for the task\nIf provided and noLink is false, the task title will be rendered as a link to this URL\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "statusText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Text to display as the status of the task\nThis will be shown either as plain text or within a tag depending on whether tagColor is provided</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nText to display as the status of the task\nThis will be shown either as plain text or within a tag depending on whether tagColor is provided\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "tagColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Color of the tag to use for the status\nIf provided, the status will be shown as a tag with this color\nIf not provided, the status will be shown as plain text</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nColor of the tag to use for the status\nIf provided, the status will be shown as a tag with this color\nIf not provided, the status will be shown as plain text\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The title of the task to display\nRequired field that will be displayed as the main text for the task</p>\n",
                    "line": 19,
                    "rawdescription": "\n\nThe title of the task to display\nRequired field that will be displayed as the main text for the task\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional hint text to display below the task title\nProvides additional context or guidance for the task</p>\n",
                    "line": 31,
                    "rawdescription": "\n\nOptional hint text to display below the task title\nProvides additional context or guidance for the task\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional URL for the task link\nIf provided and noLink is false, the task title will be rendered as a link to this URL</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nOptional URL for the task link\nIf provided and noLink is false, the task title will be rendered as a link to this URL\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "noLink",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>When true, the task item will not be rendered as a link\nThis is useful for tasks that are not yet available or accessible</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nWhen true, the task item will not be rendered as a link\nThis is useful for tasks that are not yet available or accessible\n",
                    "modifierKind": [
                        148
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1859,
                            "end": 1878,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1860,
                                "end": 1867,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "default"
                            },
                            "comment": "<p>false</p>\n"
                        }
                    ]
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional Angular router link for the task\nIf provided and noLink is false, the task title will be rendered as a link to this URL</p>\n",
                    "line": 43,
                    "rawdescription": "\n\nOptional Angular router link for the task\nIf provided and noLink is false, the task title will be rendered as a link to this URL\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "statusText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Text to display as the status of the task\nThis will be shown either as plain text or within a tag depending on whether tagColor is provided</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nText to display as the status of the task\nThis will be shown either as plain text or within a tag depending on whether tagColor is provided\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "tagColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Color of the tag to use for the status\nIf provided, the status will be shown as a tag with this color\nIf not provided, the status will be shown as plain text</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nColor of the tag to use for the status\nIf provided, the status will be shown as a tag with this color\nIf not provided, the status will be shown as plain text\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The title of the task to display\nRequired field that will be displayed as the main text for the task</p>\n",
                    "line": 19,
                    "rawdescription": "\n\nThe title of the task to display\nRequired field that will be displayed as the main text for the task\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "ValueAccessorDirective",
            "id": "directive-ValueAccessorDirective-91b2c1c5689c27db5f69ef6bcf9d5ed79703398b2db973c175c609b2b2c889ebeef3ea50ae6bd04c68af6a4aff0c709d1484a0ff5a6e2e9c18c29637a10658d2",
            "file": "libs/ngx-govuk-frontend/form-utils/src/lib/value-accessor.directive.ts",
            "type": "directive",
            "description": "<p>A standalone directive that implements ControlValueAccessor.\nThis directive is used to create custom form controls that work seamlessly with Angular&#39;s forms.</p>\n<p>It provides itself as a NG_VALUE_ACCESSOR, allowing it to be used in form controls.\nThe multi: true option allows multiple value accessors to be registered for a single form control.</p>\n",
            "rawdescription": "\n\nA standalone directive that implements ControlValueAccessor.\nThis directive is used to create custom form controls that work seamlessly with Angular's forms.\n\nIt provides itself as a NG_VALUE_ACCESSOR, allowing it to be used in form controls.\nThe multi: true option allows multiple value accessors to be registered for a single form control.\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * A standalone directive that implements ControlValueAccessor.\n * This directive is used to create custom form controls that work seamlessly with Angular's forms.\n *\n * It provides itself as a NG_VALUE_ACCESSOR, allowing it to be used in form controls.\n * The multi: true option allows multiple value accessors to be registered for a single form control.\n */\n@Directive({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: ValueAccessorDirective,\n    },\n  ],\n})\nexport class ValueAccessorDirective implements ControlValueAccessor {\n  writeValue(value: unknown): void {}\n  registerOnChange(fn: (value: unknown) => void): void {}\n  registerOnTouched(fn: () => void): void {}\n}\n",
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ValueAccessorDirective,\n}",
                    "type": "directive"
                }
            ],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        }
    ],
    "components": [
        {
            "name": "GovUKAccordionComponent",
            "id": "component-GovUKAccordionComponent-4523b0e525a1f30daea5f0191cd660bda3951ecf99134ff9e6921010ab8199ba08d886712eea295a50b346324104112595d91ed01771718ea602031ddf609886",
            "file": "libs/ngx-govuk-frontend/accordion/src/lib/accordion/accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "CdkAccordion"
                }
            ],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allExpanded",
                    "defaultValue": "computed(() => {\r\n    const allItems = this.items();\r\n    const expandedItems = this.expandedItems();\r\n    return (\r\n      allItems.length > 0 &&\r\n      allItems.every((item) => expandedItems.includes(item.itemId()))\r\n    );\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "expandedItems",
                    "defaultValue": "model<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "initialExpanded",
                    "defaultValue": "input<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "items",
                    "defaultValue": "contentChildren(GovUKAccordionItemComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isExpanded",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleItem",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkAccordion } from '@angular/cdk/accordion';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  contentChildren,\r\n  effect,\r\n  input,\r\n  model,\r\n} from '@angular/core';\r\nimport { GovUKAccordionItemComponent } from '../accordion-item/accordion-item.component';\r\n\r\n@Component({\r\n  imports: [NgTemplateOutlet],\r\n  selector: 'ngx-govuk-accordion',\r\n  templateUrl: './accordion.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  hostDirectives: [CdkAccordion],\r\n})\r\nexport class GovUKAccordionComponent {\r\n  readonly id = input.required<string>();\r\n  readonly initialExpanded = input<string[]>([]);\r\n\r\n  readonly expandedItems = model<string[]>([]);\r\n\r\n  readonly items = contentChildren(GovUKAccordionItemComponent);\r\n\r\n  readonly allExpanded = computed(() => {\r\n    const allItems = this.items();\r\n    const expandedItems = this.expandedItems();\r\n    return (\r\n      allItems.length > 0 &&\r\n      allItems.every((item) => expandedItems.includes(item.itemId()))\r\n    );\r\n  });\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      const initialExpandedItems = this.expandedItems();\r\n      const initialExpanded = this.initialExpanded();\r\n\r\n      if (initialExpandedItems.length === 0 && initialExpanded.length > 0) {\r\n        this.expandedItems.set([...initialExpanded]);\r\n      }\r\n    });\r\n  }\r\n\r\n  isExpanded(itemId: string): boolean {\r\n    return this.expandedItems().includes(itemId);\r\n  }\r\n\r\n  toggleItem(itemId: string): void {\r\n    const currentExpanded = this.expandedItems();\r\n    const index = currentExpanded.indexOf(itemId);\r\n\r\n    if (index === -1) {\r\n      this.expandedItems.set([...currentExpanded, itemId]);\r\n    } else {\r\n      const newExpanded = [...currentExpanded];\r\n      newExpanded.splice(index, 1);\r\n      this.expandedItems.set(newExpanded);\r\n    }\r\n  }\r\n\r\n  toggleAll(): void {\r\n    if (this.allExpanded()) {\r\n      this.expandedItems.set([]);\r\n    } else {\r\n      this.expandedItems.set(this.items().map((item) => item.itemId()));\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "extends": [],
            "templateData": "<div class=\"govuk-accordion\" [attr.id]=\"id()\">\n  <div class=\"govuk-accordion__controls\">\n    <button\n      type=\"button\"\n      class=\"govuk-accordion__show-all\"\n      [attr.aria-expanded]=\"allExpanded()\"\n      (click)=\"toggleAll()\"\n    >\n      <span\n        class=\"govuk-accordion-nav__chevron\"\n        [class.govuk-accordion-nav__chevron--down]=\"!allExpanded()\"\n      ></span>\n      <span class=\"govuk-accordion__show-all-text\">\n        {{ allExpanded() ? 'Hide all sections' : 'Show all sections' }}\n      </span>\n    </button>\n  </div>\n  @for (item of items(); track item.itemId()) {\n    <div\n      class=\"govuk-accordion__section\"\n      [class.govuk-accordion__section--expanded]=\"isExpanded(item.itemId())\"\n    >\n      <div class=\"govuk-accordion__section-header\">\n        <h2 class=\"govuk-accordion__section-heading\">\n          <button\n            type=\"button\"\n            class=\"govuk-accordion__section-button\"\n            [attr.aria-expanded]=\"isExpanded(item.itemId())\"\n            [attr.aria-controls]=\"id() + '-content-' + item.itemId()\"\n            [attr.aria-label]=\"\n              item.heading() +\n              (item.summary() ? ', ' + item.summary() + ', ' : ', ') +\n              (isExpanded(item.itemId()) ? 'Hide' : 'Show') +\n              ' this section'\n            \"\n            (click)=\"toggleItem(item.itemId())\"\n          >\n            <span\n              class=\"govuk-accordion__section-heading-text\"\n              [attr.id]=\"id() + '-heading-' + item.itemId()\"\n            >\n              <span class=\"govuk-accordion__section-heading-text-focus\">\n                {{ item.heading() }}\n              </span>\n            </span>\n\n            @if (item.summary()) {\n              <span\n                class=\"govuk-visually-hidden govuk-accordion__section-heading-divider\"\n                >,\n              </span>\n              <span\n                class=\"govuk-accordion__section-summary govuk-body\"\n                [attr.id]=\"id() + '-summary-' + item.itemId()\"\n              >\n                <span class=\"govuk-accordion__section-summary-focus\">\n                  {{ item.summary() }}\n                </span>\n              </span>\n            }\n\n            <span\n              class=\"govuk-visually-hidden govuk-accordion__section-heading-divider\"\n              >,\n            </span>\n            <span class=\"govuk-accordion__section-toggle\" data-nosnippet=\"\">\n              <span class=\"govuk-accordion__section-toggle-focus\">\n                <span\n                  class=\"govuk-accordion-nav__chevron\"\n                  [class.govuk-accordion-nav__chevron--down]=\"\n                    !isExpanded(item.itemId())\n                  \"\n                ></span>\n                <span class=\"govuk-accordion__section-toggle-text\">{{\n                  isExpanded(item.itemId()) ? 'Hide' : 'Show'\n                }}</span>\n              </span>\n            </span>\n          </button>\n        </h2>\n      </div>\n      <div\n        [attr.id]=\"id() + '-content-' + item.itemId()\"\n        class=\"govuk-accordion__section-content\"\n        [attr.aria-labelledby]=\"id() + '-heading-' + item.itemId()\"\n        [hidden]=\"!isExpanded(item.itemId())\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content()\"></ng-container>\n      </div>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "GovUKAccordionItemComponent",
            "id": "component-GovUKAccordionItemComponent-3aeb6e95c0b87aefc9a4d5e7147e1292e043b6fc7a139393884dd20aa4e589e6cad281ca705c1e67bcdaf31682389df942525a5d888d03e73acc344deff1ab7f",
            "file": "libs/ngx-govuk-frontend/accordion/src/lib/accordion-item/accordion-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-accordion-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "heading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "itemId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "viewChild.required<TemplateRef<unknown>>('content')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "heading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "itemId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  TemplateRef,\n  viewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-accordion-item',\n  templateUrl: './accordion-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKAccordionItemComponent {\n  readonly itemId = input.required<string>();\n  readonly heading = input.required<string>();\n  readonly summary = input<string>();\n  readonly expanded = input(false);\n\n  readonly content = viewChild.required<TemplateRef<unknown>>('content');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-template #content>\n  <ng-content />\n</ng-template>\n"
        },
        {
            "name": "GovUKBackLinkComponent",
            "id": "component-GovUKBackLinkComponent-32f3c53e026c827d7390220f25bf90030197f1d9845f7713c9cec381996f2ca7ff8a26113fee79aeba001c6d16613885e17506065e6159ff6702fb4ff6e3472e",
            "file": "libs/ngx-govuk-frontend/back-link/src/lib/back-link.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-back-link",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./back-link.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inverse",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "link",
                    "defaultValue": "input.required<RouterLink['routerLink']>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "<p>A component that renders a GOV.UK back link.</p>\n<p>This component implements the GOV.UK Design System back link component.\nIt provides a consistent way to help users navigate back to the previous page.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-back-link&gt;&lt;/ngx-govuk-back-link&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">```html\n```html\n&lt;ngx-govuk-back-link [inverse]=&quot;true&quot;&gt;&lt;/ngx-govuk-back-link&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">                             for use on darker backgrounds. Defaults to false.\n\nSee {&#64;link https://design-system.service.gov.uk/components/back-link/ GOV.UK Back link}</code></pre></div>",
            "rawdescription": "\n\nA component that renders a GOV.UK back link.\n\nThis component implements the GOV.UK Design System back link component.\nIt provides a consistent way to help users navigate back to the previous page.\n\n```html\n```html\n<ngx-govuk-back-link></ngx-govuk-back-link>\n```\n```\n```html\n```html\n<ngx-govuk-back-link [inverse]=\"true\"></ngx-govuk-back-link>\n```\n```\n                             for use on darker backgrounds. Defaults to false.\n\nSee {@link https://design-system.service.gov.uk/components/back-link/ GOV.UK Back link}\n",
            "type": "component",
            "sourceCode": "import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  input,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * A component that renders a GOV.UK back link.\n *\n * This component implements the GOV.UK Design System back link component.\n * It provides a consistent way to help users navigate back to the previous page.\n *\n * @example\n * ```html\n * <ngx-govuk-back-link></ngx-govuk-back-link>\n * ```\n *\n * @example With inverse color scheme\n * ```html\n * <ngx-govuk-back-link [inverse]=\"true\"></ngx-govuk-back-link>\n * ```\n *\n * @property {boolean} inverse - When true, displays the back link in inverse colors\n *                              for use on darker backgrounds. Defaults to false.\n *\n * @see {@link https://design-system.service.gov.uk/components/back-link/ GOV.UK Back link}\n */\n@Component({\n    selector: 'ngx-govuk-back-link',\n    imports: [RouterLink],\n    templateUrl: './back-link.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKBackLinkComponent {\n  readonly link = input.required<RouterLink['routerLink']>();\n\n  readonly inverse = input(false, { transform: booleanAttribute });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<a\n  class=\"govuk-back-link\"\n  [class.govuk-back-link--inverse]=\"inverse()\"\n  [routerLink]=\"link()\"\n  ><ng-content>Back</ng-content>\n</a>\n"
        },
        {
            "name": "GovUKBreadcrumbsComponent",
            "id": "component-GovUKBreadcrumbsComponent-bc4b3d05d3fe4c1e36c6ee71f235329ad77e5449f75c18e2e9b45d597915f8f5f74062a5878e24e82807b69c88697a8c4fae27fda3d08b3886e5afe156bb8cd9",
            "file": "libs/ngx-govuk-frontend/breadcrumbs/src/lib/breadcrumbs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-breadcrumbs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "contentChildren(GovUKBreadcrumbDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { GovUKBreadcrumbDirective } from './breadcrumb/breadcrumb.directive';\n\n@Component({\n    selector: 'ngx-govuk-breadcrumbs',\n    imports: [RouterLink],\n    templateUrl: './breadcrumbs.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKBreadcrumbsComponent {\n  readonly items = contentChildren(GovUKBreadcrumbDirective);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav class=\"govuk-breadcrumbs\" aria-label=\"Breadcrumb\">\n  <ol class=\"govuk-breadcrumbs__list\">\n    @for (item of items(); track $index) {\n      <li class=\"govuk-breadcrumbs__list-item\">\n        <a class=\"govuk-breadcrumbs__link\" [routerLink]=\"item.link()\"\n          >{{ item.label() }}<ng-content\n        /></a>\n      </li>\n    }\n  </ol>\n</nav>\n"
        },
        {
            "name": "GovUKButtonComponent",
            "id": "component-GovUKButtonComponent-6c236eb3e128432ac2ef720454744c490e2aea508cd74e94bf9607f738d2587c626eb1828b41e43060760b394e60e56a41bbe8f08172c918e93f51bcef7ded61",
            "file": "libs/ngx-govuk-frontend/button/src/lib/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "required": false
                },
                {
                    "name": "start",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "input<GovUKButtonColorType>('primary')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "required": false
                },
                {
                    "name": "start",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "<p>A button component following the GovUK Design System</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;ngx-govuk-button color=&quot;primary&quot;&gt;Save and continue&lt;/ngx-govuk-button&gt;</code></pre></div><ul>\n<li>&#39;primary&#39; (default) - Blue button for primary actions</li>\n<li>&#39;secondary&#39; - Grey button for secondary actions</li>\n<li>&#39;warning&#39; - Red button for destructive actions</li>\n<li>&#39;inverse&#39; - White button for use on dark backgrounds</li>\n</ul>\n",
            "rawdescription": "\n\nA button component following the GovUK Design System\n\n```html\n<ngx-govuk-button color=\"primary\">Save and continue</ngx-govuk-button>\n```\n  - 'primary' (default) - Blue button for primary actions\n  - 'secondary' - Grey button for secondary actions\n  - 'warning' - Red button for destructive actions\n  - 'inverse' - White button for use on dark backgrounds\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n/**\n * The color type for GovUK buttons\n * @typedef {('primary'|'secondary'|'warning'|'inverse')} GovUKButtonColorType\n * - 'primary' - Default blue button\n * - 'secondary' - Grey button for secondary actions\n * - 'warning' - Red warning button\n * - 'inverse' - White button on dark background\n */\nexport type GovUKButtonColorType =\n  | 'primary'\n  | 'secondary'\n  | 'warning'\n  | 'inverse';\n\n/**\n * A button component following the GovUK Design System\n * @component\n *\n * @example\n * <ngx-govuk-button color=\"primary\">Save and continue</ngx-govuk-button>\n *\n * @property {boolean} disabled - Whether the button is disabled\n * @property {boolean} start - Whether to show the start icon (forward arrow)\n * @property {GovUKButtonColorType} color - The color variant of the button\n *   - 'primary' (default) - Blue button for primary actions\n *   - 'secondary' - Grey button for secondary actions\n *   - 'warning' - Red button for destructive actions\n *   - 'inverse' - White button for use on dark backgrounds\n */\n@Component({\n    selector: 'ngx-govuk-button',\n    imports: [NgClass],\n    templateUrl: './button.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKButtonComponent {\n  disabled = input(false);\n  start = input(false);\n  color = input<GovUKButtonColorType>('primary');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button\n  class=\"govuk-button\"\n  [ngClass]=\"{\n    'govuk-button--secondary': color() === 'secondary',\n    'govuk-button--warning': color() === 'warning',\n    'govuk-button--inverse': color() === 'inverse',\n  }\"\n  [disabled]=\"disabled()\"\n>\n  <ng-content></ng-content>\n  @if (start()) {\n    <svg\n      class=\"govuk-button__start-icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"17.5\"\n      height=\"19\"\n      viewBox=\"0 0 33 40\"\n      aria-hidden=\"true\"\n      focusable=\"false\"\n    >\n      <path fill=\"currentColor\" d=\"M0 0h13l20 20-20 20H0l20-20z\" />\n    </svg>\n  }\n</button>\n"
        },
        {
            "name": "GovUKButtonGroupComponent",
            "id": "component-GovUKButtonGroupComponent-a59ba652ed89ea6a4b256423ed76c2a68df5a1671352935661d08ea8e508248198210a0a7bb6d9e35af15f30868c738c3c842d2533ace4f72c158fd35ebab6db",
            "file": "libs/ngx-govuk-frontend/button/src/lib/button-group/button-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-button-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>A component that groups GOV.UK buttons together with consistent spacing.</p>\n<p>This component implements the GOV.UK Design System button group pattern.\nIt provides consistent spacing between multiple buttons or links that are grouped together.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-button-group&gt;\n  &lt;ngx-govuk-button&gt;Save and continue&lt;/ngx-govuk-button&gt;\n  &lt;ngx-govuk-button color=&quot;secondary&quot;&gt;Cancel&lt;/ngx-govuk-button&gt;\n&lt;/ngx-govuk-button-group&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">The component accepts `ngx-govuk-button` components and elements with the `govuk-link` class\nas content through content projection.\n\nSee {&#64;link https://design-system.service.gov.uk/components/button/#button-group GOV.UK Button group}</code></pre></div>",
            "rawdescription": "\n\nA component that groups GOV.UK buttons together with consistent spacing.\n\nThis component implements the GOV.UK Design System button group pattern.\nIt provides consistent spacing between multiple buttons or links that are grouped together.\n\n```html\n```html\n<ngx-govuk-button-group>\n  <ngx-govuk-button>Save and continue</ngx-govuk-button>\n  <ngx-govuk-button color=\"secondary\">Cancel</ngx-govuk-button>\n</ngx-govuk-button-group>\n```\n```\nThe component accepts `ngx-govuk-button` components and elements with the `govuk-link` class\nas content through content projection.\n\nSee {@link https://design-system.service.gov.uk/components/button/#button-group GOV.UK Button group}\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * A component that groups GOV.UK buttons together with consistent spacing.\n *\n * This component implements the GOV.UK Design System button group pattern.\n * It provides consistent spacing between multiple buttons or links that are grouped together.\n *\n * @example\n * ```html\n * <ngx-govuk-button-group>\n *   <ngx-govuk-button>Save and continue</ngx-govuk-button>\n *   <ngx-govuk-button color=\"secondary\">Cancel</ngx-govuk-button>\n * </ngx-govuk-button-group>\n * ```\n *\n * The component accepts `ngx-govuk-button` components and elements with the `govuk-link` class\n * as content through content projection.\n *\n * @see {@link https://design-system.service.gov.uk/components/button/#button-group GOV.UK Button group}\n */\n@Component({\n  selector: 'ngx-govuk-button-group',\n  templateUrl: './button-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKButtonGroupComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-button-group\">\n  <ng-content select=\"ngx-govuk-button, .govuk-link\" />\n</div>\n"
        },
        {
            "name": "GovUKCheckboxComponent",
            "id": "component-GovUKCheckboxComponent-6068c27bd7c930388e6af918e736fa84272c8a13d864887e95a35e3b3c64b98ef70dcc4043c169a1ab50c13552314fa6a0f80f45a9591bdd3e40a8dde578b2ec",
            "file": "libs/ngx-govuk-frontend/checkbox/src/lib/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                }
            ],
            "inputsClass": [
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  ValueAccessorDirective,\n  injectNgControl,\n} from 'ngx-govuk-frontend/form-utils';\n\n@Component({\n    selector: 'ngx-govuk-checkbox',\n    imports: [ReactiveFormsModule],\n    templateUrl: './checkbox.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [ValueAccessorDirective]\n})\nexport class GovUKCheckboxComponent {\n  readonly ngControl = injectNgControl();\n\n  readonly inputId = input.required<string>();\n  readonly label = input.required<string>();\n\n  toggle() {\n    this.ngControl.control?.setValue(!this.ngControl.control?.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-checkboxes__item\" (click)=\"toggle()\">\n  <input\n    class=\"govuk-checkboxes__input\"\n    type=\"checkbox\"\n    [attr.id]=\"inputId()\"\n    [checked]=\"ngControl.control.value\"\n  />\n  <label\n    class=\"govuk-label govuk-checkboxes__label\"\n    [attr.for]=\"inputId()\"\n    (click)=\"toggle()\"\n  >\n    {{ label() }}\n  </label>\n</div>\n"
        },
        {
            "name": "GovUKCookieBannerComponent",
            "id": "component-GovUKCookieBannerComponent-7f244b55642e84cf9ae000eaa199f5534106c06315389e86ade6f0f1d57aad265ad6a3ce6283911e54baf9c74ab476a1048c5b096137e3e3f4ea46451b50a526",
            "file": "libs/ngx-govuk-frontend/cookie-banner/src/lib/cookie-banner/cookie-banner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-cookie-banner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cookie-banner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "reject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "view",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": true
                },
                {
                    "name": "reject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "view",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "GovUKButtonComponent",
                    "type": "component"
                },
                {
                    "name": "GovUKButtonGroupComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n} from '@angular/core';\nimport {\n  GovUKButtonComponent,\n  GovUKButtonGroupComponent,\n} from 'ngx-govuk-frontend/button';\n\n@Component({\n    selector: 'ngx-govuk-cookie-banner',\n    imports: [GovUKButtonComponent, GovUKButtonGroupComponent],\n    templateUrl: './cookie-banner.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKCookieBannerComponent {\n  appName = input.required<string>();\n\n  accept = output<void>();\n  reject = output<void>();\n  view = output<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"govuk-cookie-banner\"\n  role=\"region\"\n  [attr.aria-label]=\"'Cookies on ' + appName()\"\n>\n  <div class=\"govuk-cookie-banner__message govuk-width-container\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-two-thirds\">\n        <h2 class=\"govuk-cookie-banner__heading govuk-heading-m\">\n          Cookies on {{ appName() }}\n        </h2>\n        <div class=\"govuk-cookie-banner__content\">\n          <p class=\"govuk-body\">\n            We use some essential cookies to make this service work.\n          </p>\n          <p class=\"govuk-body\">\n            We'd also like to use analytics cookies so we can understand how you\n            use the service and make improvements.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <ngx-govuk-button-group>\n      <ngx-govuk-button (click)=\"accept.emit()\"\n        >Accept analytics cookies</ngx-govuk-button\n      >\n      <ngx-govuk-button (click)=\"reject.emit()\"\n        >Reject analytics cookies</ngx-govuk-button\n      >\n      <a class=\"govuk-link\" (click)=\"view.emit()\">View cookies</a>\n    </ngx-govuk-button-group>\n  </div>\n</div>\n"
        },
        {
            "name": "GovUKCookieConfirmationComponent",
            "id": "component-GovUKCookieConfirmationComponent-0dada0030515d560ec069a1b1887671f9e1019379351f9115f02f33758d19a2727aa3970723f349e5d999779be917fa2561c7e91ff901fc147888b8ae30f07fc",
            "file": "libs/ngx-govuk-frontend/cookie-banner/src/lib/cookie-confirmation/cookie-confirmation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-cookie-confirmation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cookie-confirmation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "changeSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "required": false
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "changeSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "required": false
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "GovUKButtonComponent",
                    "type": "component"
                },
                {
                    "name": "GovUKButtonGroupComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, output } from '@angular/core';\nimport {\n  GovUKButtonComponent,\n  GovUKButtonGroupComponent,\n} from 'ngx-govuk-frontend/button';\n\n@Component({\n    selector: 'ngx-govuk-cookie-confirmation',\n    imports: [GovUKButtonComponent, GovUKButtonGroupComponent],\n    templateUrl: './cookie-confirmation.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKCookieConfirmationComponent {\n  changeSettings = output<void>();\n  hide = output<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"govuk-cookie-banner\"\n  data-nosnippet\n  role=\"region\"\n  aria-label=\"Cookies on [name of service]\"\n>\n  <div class=\"govuk-cookie-banner__message govuk-width-container\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-two-thirds\">\n        <div class=\"govuk-cookie-banner__content\">\n          <p class=\"govuk-body\">\n            You've accepted additional cookies. You can\n            <a class=\"govuk-link\" (click)=\"changeSettings.emit()\"\n              >change your cookie settings</a\n            >\n            at any time.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <ngx-govuk-button-group>\n      <ngx-govuk-button (click)=\"hide.emit()\"\n        >Hide cookie message</ngx-govuk-button\n      >\n    </ngx-govuk-button-group>\n  </div>\n</div>\n"
        },
        {
            "name": "GovUKDateInputComponent",
            "id": "component-GovUKDateInputComponent-cc268e7369171d2d037d8cd27c5a1c67093f6070e78e5d791b193f58665d4f9413f09b30c28632aa2d9e4651e23041d4d587d382532e6894cb3e418b47ab083d",
            "file": "libs/ngx-govuk-frontend/date-input/src/lib/date-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-date-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./date-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                },
                {
                    "name": "GovUKCommonFormInputDirective",
                    "inputs": [],
                    "outputs": []
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonFormInput",
                    "defaultValue": "inject(GovUKCommonFormInputDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dateForm",
                    "defaultValue": "new FormGroup(\r\n    {\r\n      day: new FormControl<string>('', [\r\n        Validators.pattern(/^([1-9]|0[1-9]|[12]\\d|3[01])$/),\r\n      ]),\r\n      month: new FormControl<string>('', [\r\n        Validators.pattern(/^([1-9]|0[1-9]|1[012])$/),\r\n      ]),\r\n      year: new FormControl<string>('', [Validators.pattern(/^\\d{4}$/)]),\r\n    },\r\n    { validators: this.dateValidator() },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "max",
                    "defaultValue": "input(\r\n    new Date(new Date().getFullYear() + 100, 11, 31)\r\n      .toISOString()\r\n      .split('T')[0],\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The maximum valid date in ISO format (YYYY-MM-DD).\nDefault is 100 years from now.</p>\n",
                    "line": 75,
                    "rawdescription": "\n\nThe maximum valid date in ISO format (YYYY-MM-DD).\nDefault is 100 years from now.\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "maxDate",
                    "defaultValue": "computed(() => {\r\n    try {\r\n      return new Date(this.max());\r\n    } catch (e) {\r\n      // Default to 100 years from now\r\n      return new Date(new Date().getFullYear() + 100, 11, 31); // December 31, current year + 100\r\n    }\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "min",
                    "defaultValue": "input('1900-01-01')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The minimum valid date in ISO format (YYYY-MM-DD).\nDefault is 1900-01-01.</p>\n",
                    "line": 69,
                    "rawdescription": "\n\nThe minimum valid date in ISO format (YYYY-MM-DD).\nDefault is 1900-01-01.\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "minDate",
                    "defaultValue": "computed(() => {\r\n    try {\r\n      return new Date(this.min());\r\n    } catch (e) {\r\n      return new Date(1900, 0, 1); // January 1, 1900\r\n    }\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "dateValidator",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getDateParts",
                    "args": [],
                    "optional": false,
                    "returnType": "DateInputParts",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getInputId",
                    "args": [
                        {
                            "name": "part",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "part",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasFieldError",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 294,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDateFormChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDateForm",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | DateInputParts | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | DateInputParts | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "<p>A form component for date input that follows the GOV.UK Design System styling and behavior.</p>\n<p>This component provides a set of input fields for day, month, and year with proper validation and styling.\nIt integrates with Angular&#39;s form controls and supports accessibility features.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-date-input\n  formControlName=&quot;dateOfBirth&quot;\n  inputId=&quot;date-of-birth&quot;\n  min=&quot;1900-01-01&quot;\n  max=&quot;2050-12-31&quot;\n&gt;&lt;/ngx-govuk-date-input&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nA form component for date input that follows the GOV.UK Design System styling and behavior.\n\nThis component provides a set of input fields for day, month, and year with proper validation and styling.\nIt integrates with Angular's form controls and supports accessibility features.\n\n```html\n```html\n<ngx-govuk-date-input\n  formControlName=\"dateOfBirth\"\n  inputId=\"date-of-birth\"\n  min=\"1900-01-01\"\n  max=\"2050-12-31\"\n></ngx-govuk-date-input>\n```\n```\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  inject,\r\n  input,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  GovUKCommonFormInputDirective,\r\n  ValueAccessorDirective,\r\n  injectNgControl,\r\n  inputCommonInputs,\r\n} from 'ngx-govuk-frontend/form-utils';\r\n\r\ninterface DateInputParts {\r\n  day?: string;\r\n  month?: string;\r\n  year?: string;\r\n}\r\n\r\n/**\r\n * A form component for date input that follows the GOV.UK Design System styling and behavior.\r\n *\r\n * This component provides a set of input fields for day, month, and year with proper validation and styling.\r\n * It integrates with Angular's form controls and supports accessibility features.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-date-input\r\n *   formControlName=\"dateOfBirth\"\r\n *   inputId=\"date-of-birth\"\r\n *   min=\"1900-01-01\"\r\n *   max=\"2050-12-31\"\r\n * ></ngx-govuk-date-input>\r\n * ```\r\n *\r\n * @property {string} inputId - Optional. The ID prefix for the input elements.\r\n * @property {string} extraClasses - Optional. Additional CSS classes to apply to the input elements.\r\n * @property {string} min - Optional. The minimum valid date in ISO format (YYYY-MM-DD).\r\n * @property {string} max - Optional. The maximum valid date in ISO format (YYYY-MM-DD).\r\n */\r\n@Component({\n    selector: 'ngx-govuk-date-input',\n    imports: [NgClass, ReactiveFormsModule],\n    templateUrl: './date-input.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\r\nexport class GovUKDateInputComponent {\r\n  readonly ngControl = injectNgControl();\r\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\r\n\r\n  /**\r\n   * The minimum valid date in ISO format (YYYY-MM-DD).\r\n   * Default is 1900-01-01.\r\n   */\r\n  readonly min = input('1900-01-01');\r\n\r\n  /**\r\n   * The maximum valid date in ISO format (YYYY-MM-DD).\r\n   * Default is 100 years from now.\r\n   */\r\n  readonly max = input(\r\n    new Date(new Date().getFullYear() + 100, 11, 31)\r\n      .toISOString()\r\n      .split('T')[0],\r\n  );\r\n\r\n  private readonly minDate = computed(() => {\r\n    try {\r\n      return new Date(this.min());\r\n    } catch (e) {\r\n      return new Date(1900, 0, 1); // January 1, 1900\r\n    }\r\n  });\r\n\r\n  private readonly maxDate = computed(() => {\r\n    try {\r\n      return new Date(this.max());\r\n    } catch (e) {\r\n      // Default to 100 years from now\r\n      return new Date(new Date().getFullYear() + 100, 11, 31); // December 31, current year + 100\r\n    }\r\n  });\r\n\r\n  protected dateForm = new FormGroup(\r\n    {\r\n      day: new FormControl<string>('', [\r\n        Validators.pattern(/^([1-9]|0[1-9]|[12]\\d|3[01])$/),\r\n      ]),\r\n      month: new FormControl<string>('', [\r\n        Validators.pattern(/^([1-9]|0[1-9]|1[012])$/),\r\n      ]),\r\n      year: new FormControl<string>('', [Validators.pattern(/^\\d{4}$/)]),\r\n    },\r\n    { validators: this.dateValidator() },\r\n  );\r\n\r\n  constructor() {\r\n    this.dateForm.valueChanges.subscribe((value) => {\r\n      const day = value.day ?? '';\r\n      const month = value.month ?? '';\r\n      const year = value.year ?? '';\r\n      this.onDateFormChange({ day, month, year });\r\n\r\n      // Collect all errors from the form and individual controls\r\n      const errors: Record<string, unknown> = {};\r\n\r\n      // Add form-level errors (like invalidDate)\r\n      if (this.dateForm.errors) {\r\n        Object.assign(errors, this.dateForm.errors);\r\n      }\r\n\r\n      // Add field-level errors with prefixes\r\n      const dayControl = this.dateForm.get('day');\r\n      const monthControl = this.dateForm.get('month');\r\n      const yearControl = this.dateForm.get('year');\r\n\r\n      if (dayControl?.errors) {\r\n        Object.entries(dayControl.errors).forEach(([key, value]) => {\r\n          errors[`day_${key}`] = value;\r\n        });\r\n      }\r\n\r\n      if (monthControl?.errors) {\r\n        Object.entries(monthControl.errors).forEach(([key, value]) => {\r\n          errors[`month_${key}`] = value;\r\n        });\r\n      }\r\n\r\n      if (yearControl?.errors) {\r\n        Object.entries(yearControl.errors).forEach(([key, value]) => {\r\n          errors[`year_${key}`] = value;\r\n        });\r\n      }\r\n\r\n      // Set errors on the parent control if there are any\r\n      if (Object.keys(errors).length > 0) {\r\n        this.ngControl.control?.setErrors(errors);\r\n      } else {\r\n        // Clear errors if all fields are valid\r\n        this.ngControl.control?.setErrors(null);\r\n      }\r\n    });\r\n\r\n    // Handle changes from the parent form control\r\n    this.ngControl.valueChanges?.subscribe((value) => {\r\n      this.updateDateForm(value);\r\n    });\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.dateForm.disable();\r\n    } else {\r\n      this.dateForm.enable();\r\n    }\r\n  }\r\n\r\n  // Expose date parts for testing\r\n  getDateParts(): DateInputParts {\r\n    return {\r\n      day: this.dateForm.get('day')?.value || '',\r\n      month: this.dateForm.get('month')?.value || '',\r\n      year: this.dateForm.get('year')?.value || '',\r\n    };\r\n  }\r\n\r\n  // Custom validator to check if a date is valid\r\n  private dateValidator(): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formGroup = control as FormGroup;\r\n      const day = formGroup.get('day')?.value;\r\n      const month = formGroup.get('month')?.value;\r\n      const year = formGroup.get('year')?.value;\r\n\r\n      // If any field is empty, don't perform validation yet\r\n      if (!day || !month || !year) {\r\n        return null;\r\n      }\r\n\r\n      // Convert string values to numbers\r\n      const dayNum = parseInt(day, 10);\r\n      const monthNum = parseInt(month, 10);\r\n      const yearNum = parseInt(year, 10);\r\n\r\n      // Create a date object - note months are 0-indexed in JS\r\n      const date = new Date(yearNum, monthNum - 1, dayNum);\r\n\r\n      // Check if the date is valid\r\n      // For example, 31/04/2020 (April 31st) is not valid\r\n      if (\r\n        date.getFullYear() !== yearNum ||\r\n        date.getMonth() !== monthNum - 1 ||\r\n        date.getDate() !== dayNum\r\n      ) {\r\n        return { invalidDate: true };\r\n      }\r\n\r\n      // Check min date\r\n      if (this.minDate() && date < this.minDate()) {\r\n        return { dateTooEarly: true, minDate: this.min() };\r\n      }\r\n\r\n      // Check max date\r\n      if (this.maxDate() && date > this.maxDate()) {\r\n        return { dateTooLate: true, maxDate: this.max() };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  private onDateFormChange(value: {\r\n    day: string;\r\n    month: string;\r\n    year: string;\r\n  }): void {\r\n    const { day, month, year } = value;\r\n\r\n    if (!day && !month && !year) {\r\n      this.ngControl.control?.setValue(null);\r\n      return;\r\n    }\r\n\r\n    const paddedDay = day.padStart(2, '0');\r\n    const paddedMonth = month.padStart(2, '0');\r\n\r\n    if (day && month && year) {\r\n      // Full date is available, use ISO format\r\n      this.ngControl.control?.setValue(`${year}-${paddedMonth}-${paddedDay}`);\r\n    } else {\r\n      // Partial date, pass as object\r\n      this.ngControl.control?.setValue({\r\n        day: paddedDay,\r\n        month: paddedMonth,\r\n        year,\r\n      });\r\n    }\r\n\r\n    this.ngControl.control.markAsTouched();\r\n  }\r\n\r\n  // Update internal date form based on parent value\r\n  private updateDateForm(value: string | DateInputParts | null): void {\r\n    if (!value) {\r\n      this.dateForm.reset(\r\n        { day: '', month: '', year: '' },\r\n        { emitEvent: false },\r\n      );\r\n      return;\r\n    }\r\n\r\n    let day = '';\r\n    let month = '';\r\n    let year = '';\r\n\r\n    if (typeof value === 'string') {\r\n      // Handle ISO date format (YYYY-MM-DD)\r\n      const dateParts = value.split('-');\r\n      if (dateParts.length === 3) {\r\n        year = dateParts[0];\r\n        month = dateParts[1].replace(/^0/, ''); // Remove leading zero\r\n        day = dateParts[2].replace(/^0/, ''); // Remove leading zero\r\n      }\r\n    } else {\r\n      // Handle object format { day, month, year }\r\n      day = value.day?.replace(/^0/, '') || '';\r\n      month = value.month?.replace(/^0/, '') || '';\r\n      year = value.year || '';\r\n    }\r\n\r\n    this.dateForm.setValue({ day, month, year }, { emitEvent: false });\r\n  }\r\n\r\n  protected getInputId(part: string): string | null {\r\n    return this.commonFormInput.inputId()\r\n      ? `${this.commonFormInput.inputId()}-${part}`\r\n      : null;\r\n  }\r\n\r\n  protected hasFieldError(field: string): boolean {\r\n    const control = this.dateForm.get(field);\r\n    return !!control && control.touched && !!control.errors;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 109
            },
            "extends": [],
            "templateData": "<div class=\"govuk-date-input\" [id]=\"commonFormInput.inputId()\">\r\n  <div class=\"govuk-date-input__item\">\r\n    <div class=\"govuk-form-group\">\r\n      <label\r\n        class=\"govuk-label govuk-date-input__label\"\r\n        [attr.for]=\"getInputId('day')\"\r\n      >\r\n        Day\r\n      </label>\r\n      <input\r\n        class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\r\n        [ngClass]=\"commonFormInput.extraClasses()\"\r\n        [class.govuk-input--error]=\"hasFieldError('day')\"\r\n        [attr.id]=\"getInputId('day')\"\r\n        type=\"text\"\r\n        inputmode=\"numeric\"\r\n        [formControl]=\"dateForm.controls.day\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"govuk-date-input__item\">\r\n    <div class=\"govuk-form-group\">\r\n      <label\r\n        class=\"govuk-label govuk-date-input__label\"\r\n        [attr.for]=\"getInputId('month')\"\r\n      >\r\n        Month\r\n      </label>\r\n      <input\r\n        class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\r\n        [ngClass]=\"commonFormInput.extraClasses()\"\r\n        [class.govuk-input--error]=\"hasFieldError('month')\"\r\n        [attr.id]=\"getInputId('month')\"\r\n        type=\"text\"\r\n        inputmode=\"numeric\"\r\n        [formControl]=\"dateForm.controls.month\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"govuk-date-input__item\">\r\n    <div class=\"govuk-form-group\">\r\n      <label\r\n        class=\"govuk-label govuk-date-input__label\"\r\n        [attr.for]=\"getInputId('year')\"\r\n      >\r\n        Year\r\n      </label>\r\n      <input\r\n        class=\"govuk-input govuk-date-input__input govuk-input--width-4\"\r\n        [ngClass]=\"commonFormInput.extraClasses()\"\r\n        [class.govuk-input--error]=\"hasFieldError('year')\"\r\n        [attr.id]=\"getInputId('year')\"\r\n        type=\"text\"\r\n        inputmode=\"numeric\"\r\n        [formControl]=\"dateForm.controls.year\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "GovUKDetailsComponent",
            "id": "component-GovUKDetailsComponent-a6df75b9ff8465cada6f74ea98cb39266e9984f7191e7421047af76ad56c23f78b078dfaa2ca57964fb49f5f4798d850836fd3078da67b2c73db8f7fec5fdff2",
            "file": "libs/ngx-govuk-frontend/details/src/lib/details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-details',\n  templateUrl: './details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKDetailsComponent {\n  summary = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<details class=\"govuk-details\">\n  <summary class=\"govuk-details__summary\">\n    <span class=\"govuk-details__summary-text\">{{ summary() }}</span>\n  </summary>\n  <div class=\"govuk-details__text\">\n    <ng-content></ng-content>\n  </div>\n</details>\n"
        },
        {
            "name": "GovUKErrorSummaryComponent",
            "id": "component-GovUKErrorSummaryComponent-8231fbcb1eb2661977e8acb217527183c8d6e67d810321e236943ed3818ca5ecac47ecf6dd4158433a2db2331033107a03709779ced00ff1b6b40fcc0e043f50",
            "file": "libs/ngx-govuk-frontend/error-summary/src/lib/error-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-error-summary",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./error-summary.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorItems",
                    "defaultValue": "contentChildren(GovUKErrorSummaryItemDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all error summary item directives using signal-based query\nThis allows the component to iterate through the child error items</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nQuery for all error summary item directives using signal-based query\nThis allows the component to iterate through the child error items\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "input<string>('There is a problem')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Text to use for the heading of the error summary block</p>\n",
                    "line": 69,
                    "rawdescription": "\n\nText to use for the heading of the error summary block\n",
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "<p>Component for displaying a GOV.UK error summary</p>\n<p>Use this component at the top of a page to summarise any errors a user has made.\nWhen a user makes an error, you should show both an error summary and an error message\nnext to each answer that contains an error.</p>\n<p>This component implements the GOV.UK error summary component.</p>\n<h2>Router Configuration</h2>\n<p>The component uses Angular Router&#39;s fragment navigation for scrolling to error elements.\nYou must enable anchor scrolling in your application&#39;s router configuration for proper\nscrolling behavior when users click on error links.</p>\n<p>Configure your router using one of these methods:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">// Option 1: Using RouterModule (NgModule approach)\nRouterModule.forRoot(routes, { anchorScrolling: &#39;enabled&#39; })\n\n// Option 2: Using Standalone API\nprovideRouter(routes, withInMemoryScrolling({ anchorScrolling: &#39;enabled&#39; }))</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-error-summary\n  title=&quot;There is a problem&quot;\n&gt;\n  &lt;ngx-govuk-error-summary-item\n    text=&quot;Enter your full name&quot;\n    targetId=&quot;full-name&quot;\n  &gt;&lt;/ngx-govuk-error-summary-item&gt;\n  &lt;ngx-govuk-error-summary-item\n    text=&quot;The date your passport was issued must be in the past&quot;\n    targetId=&quot;passport-issued-year&quot;\n  &gt;&lt;/ngx-govuk-error-summary-item&gt;\n&lt;/ngx-govuk-error-summary&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nComponent for displaying a GOV.UK error summary\n\nUse this component at the top of a page to summarise any errors a user has made.\nWhen a user makes an error, you should show both an error summary and an error message\nnext to each answer that contains an error.\n\nThis component implements the GOV.UK error summary component.\n\n## Router Configuration\n\nThe component uses Angular Router's fragment navigation for scrolling to error elements.\nYou must enable anchor scrolling in your application's router configuration for proper\nscrolling behavior when users click on error links.\n\nConfigure your router using one of these methods:\n```typescript\n// Option 1: Using RouterModule (NgModule approach)\nRouterModule.forRoot(routes, { anchorScrolling: 'enabled' })\n\n// Option 2: Using Standalone API\nprovideRouter(routes, withInMemoryScrolling({ anchorScrolling: 'enabled' }))\n```\n\n```html\n```html\n<ngx-govuk-error-summary\n  title=\"There is a problem\"\n>\n  <ngx-govuk-error-summary-item\n    text=\"Enter your full name\"\n    targetId=\"full-name\"\n  ></ngx-govuk-error-summary-item>\n  <ngx-govuk-error-summary-item\n    text=\"The date your passport was issued must be in the past\"\n    targetId=\"passport-issued-year\"\n  ></ngx-govuk-error-summary-item>\n</ngx-govuk-error-summary>\n```\n```",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n  ElementRef,\n  input,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { GovUKErrorSummaryItemDirective } from './error-summary-item.directive';\n\n/**\n * Component for displaying a GOV.UK error summary\n *\n * Use this component at the top of a page to summarise any errors a user has made.\n * When a user makes an error, you should show both an error summary and an error message\n * next to each answer that contains an error.\n *\n * This component implements the GOV.UK error summary component.\n *\n * ## Router Configuration\n *\n * The component uses Angular Router's fragment navigation for scrolling to error elements.\n * You must enable anchor scrolling in your application's router configuration for proper\n * scrolling behavior when users click on error links.\n *\n * Configure your router using one of these methods:\n * ```typescript\n * // Option 1: Using RouterModule (NgModule approach)\n * RouterModule.forRoot(routes, { anchorScrolling: 'enabled' })\n *\n * // Option 2: Using Standalone API\n * provideRouter(routes, withInMemoryScrolling({ anchorScrolling: 'enabled' }))\n * ```\n *\n * @example\n * ```html\n * <ngx-govuk-error-summary\n *   title=\"There is a problem\"\n * >\n *   <ngx-govuk-error-summary-item\n *     text=\"Enter your full name\"\n *     targetId=\"full-name\"\n *   ></ngx-govuk-error-summary-item>\n *   <ngx-govuk-error-summary-item\n *     text=\"The date your passport was issued must be in the past\"\n *     targetId=\"passport-issued-year\"\n *   ></ngx-govuk-error-summary-item>\n * </ngx-govuk-error-summary>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-error-summary',\n  templateUrl: './error-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, RouterLink],\n})\nexport class GovUKErrorSummaryComponent {\n  /**\n   * Query for all error summary item directives using signal-based query\n   * This allows the component to iterate through the child error items\n   */\n  readonly errorItems = contentChildren(GovUKErrorSummaryItemDirective);\n\n  /**\n   * Text to use for the heading of the error summary block\n   */\n  readonly title = input<string>('There is a problem');\n\n  constructor(private elementRef: ElementRef) {\n    // Focus on the error summary when it's rendered\n    afterNextRender(() => {\n      const element = this.elementRef.nativeElement as HTMLElement;\n      element.focus();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div\n  class=\"govuk-error-summary\"\n  data-module=\"govuk-error-summary\"\n  [attr.tabindex]=\"-1\"\n>\n  <div role=\"alert\">\n    <h2 class=\"govuk-error-summary__title\">\n      {{ title() }}\n    </h2>\n    <div class=\"govuk-error-summary__body\">\n      <ul class=\"govuk-list govuk-error-summary__list\">\n        @for (item of errorItems(); track item) {\n          <li>\n            <a routerLink=\".\" [fragment]=\"item.targetId()\">\n              {{ item.text() }}\n            </a>\n          </li>\n        }\n      </ul>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "GovUKFieldsetComponent",
            "id": "component-GovUKFieldsetComponent-fed9f3585f784059e1e9f1a0a02da9f8ddbba3c1f044f7f6bf9a9cb20f3cf6024a562f460528284acc6b37e3565403ecf547d4140bb3efb1d8658a339c83f7f0",
            "file": "libs/ngx-govuk-frontend/fieldset/src/lib/fieldset.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-fieldset",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fieldset.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "legend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "isPageTitle",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "legend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  input,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-fieldset',\n  templateUrl: './fieldset.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFieldsetComponent {\n  readonly legend = input.required<string>();\n\n  readonly errorMessage = input<string>();\n  readonly hint = input<string>();\n  readonly isPageTitle = input(false, { transform: booleanAttribute });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-form-group\" [class.govuk-form-group--error]=\"errorMessage()\">\n  <fieldset class=\"govuk-fieldset\">\n    <legend\n      class=\"govuk-fieldset__legend\"\n      [class.govuk-fieldset__legend--l]=\"isPageTitle()\"\n    >\n      @if (isPageTitle()) {\n        <h1 class=\"govuk-fieldset__heading\">\n          {{ legend() }}\n        </h1>\n      } @else {\n        {{ legend() }}\n      }\n    </legend>\n\n    @if (hint()) {\n      <div class=\"govuk-hint\">\n        {{ hint() }}\n      </div>\n    }\n\n    @if (errorMessage()) {\n      <p class=\"govuk-error-message\">\n        <span class=\"govuk-visually-hidden\">Error:</span> {{ errorMessage() }}\n      </p>\n    }\n\n    <ng-content />\n  </fieldset>\n</div>\n"
        },
        {
            "name": "GovUKFileUploadComponent",
            "id": "component-GovUKFileUploadComponent-de5cd34c72222e04b2e15ecfccb89605a85ce07fa2c2c49efc7f58a0fc7201d0de34b9967b6fc6a51a30d2022c224334a832e568abfd77722bcc029b1239645d",
            "file": "libs/ngx-govuk-frontend/file-upload/src/lib/file-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                },
                {
                    "name": "GovUKCommonFormInputDirective",
                    "inputs": [],
                    "outputs": []
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonFormInput",
                    "defaultValue": "inject(GovUKCommonFormInputDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "<p>A form file upload input component that follows the GOV.UK Design System styling and behavior.</p>\n<p>This component provides a file upload input field.\nIt integrates with Angular&#39;s form controls.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-file-upload formControlName=&quot;photo&quot; inputId=&quot;photo-upload&quot; /&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nA form file upload input component that follows the GOV.UK Design System styling and behavior.\n\nThis component provides a file upload input field.\nIt integrates with Angular's form controls.\n\n```html\n```html\n<ngx-govuk-file-upload formControlName=\"photo\" inputId=\"photo-upload\" />\n```\n```\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  GovUKCommonFormInputDirective,\n  ValueAccessorDirective,\n  injectNgControl,\n  inputCommonInputs,\n} from 'ngx-govuk-frontend/form-utils';\n\n/**\n * A form file upload input component that follows the GOV.UK Design System styling and behavior.\n *\n * This component provides a file upload input field.\n * It integrates with Angular's form controls.\n *\n * @example\n * ```html\n * <ngx-govuk-file-upload formControlName=\"photo\" inputId=\"photo-upload\" />\n * ```\n *\n * @property {string} autocomplete - Optional. The HTML autocomplete attribute value. Defaults to 'off'.\n * @property {string} extraClasses - Optional. Additional CSS classes to apply to the input element.\n * @property {string} inputId - Optional. The ID attribute for the input element.\n */\n@Component({\n    selector: 'ngx-govuk-file-upload',\n    imports: [NgClass, ReactiveFormsModule],\n    templateUrl: './file-upload.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\nexport class GovUKFileUploadComponent {\n  readonly ngControl = injectNgControl();\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<input\n  class=\"govuk-file-upload\"\n  [ngClass]=\"commonFormInput.extraClasses()\"\n  [class.govuk-file-upload--error]=\"ngControl.touched && ngControl.errors\"\n  [attr.id]=\"commonFormInput.inputId() ? commonFormInput.inputId() : null\"\n  type=\"file\"\n/>\n"
        },
        {
            "name": "GovUKFooterComponent",
            "id": "component-GovUKFooterComponent-aa478ff6311e40f2313c59922cebc3b1ff63b2e116c6c231a262e9c57e9d57258a2cca078a9950c482eaff0d7c989dd05b8ca26bda1e3859cbdf4d56839994a8",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Footer component that displays standard GOV.UK footer</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-footer&gt;\n  &lt;ngx-govuk-footer-navigation&gt;\n    &lt;ngx-govuk-footer-navigation-section title=&quot;Services and information&quot; [columns]=&quot;2&quot; width=&quot;two-thirds&quot;&gt;\n      &lt;ngx-govuk-footer-navigation-item href=&quot;/benefits&quot;&gt;Benefits&lt;/ngx-govuk-footer-navigation-item&gt;\n      &lt;ngx-govuk-footer-navigation-item href=&quot;/business&quot;&gt;Business and self-employed&lt;/ngx-govuk-footer-navigation-item&gt;\n    &lt;/ngx-govuk-footer-navigation-section&gt;\n    &lt;ngx-govuk-footer-navigation-section title=&quot;Departments and policy&quot; width=&quot;one-third&quot;&gt;\n      &lt;ngx-govuk-footer-navigation-item href=&quot;/how-government-works&quot;&gt;How government works&lt;/ngx-govuk-footer-navigation-item&gt;\n      &lt;ngx-govuk-footer-navigation-item href=&quot;/departments&quot;&gt;Departments&lt;/ngx-govuk-footer-navigation-item&gt;\n    &lt;/ngx-govuk-footer-navigation-section&gt;\n  &lt;/ngx-govuk-footer-navigation&gt;\n  &lt;ngx-govuk-footer-links&gt;\n    &lt;ngx-govuk-footer-link href=&quot;/help&quot;&gt;Help&lt;/ngx-govuk-footer-link&gt;\n    &lt;ngx-govuk-footer-link href=&quot;/cookies&quot;&gt;Cookies&lt;/ngx-govuk-footer-link&gt;\n  &lt;/ngx-govuk-footer-links&gt;\n  &lt;ngx-govuk-footer-meta&gt;Built by the Government Digital Service&lt;/ngx-govuk-footer-meta&gt;\n&lt;/ngx-govuk-footer&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter component that displays standard GOV.UK footer\n\n```html\n```html\n<ngx-govuk-footer>\n  <ngx-govuk-footer-navigation>\n    <ngx-govuk-footer-navigation-section title=\"Services and information\" [columns]=\"2\" width=\"two-thirds\">\n      <ngx-govuk-footer-navigation-item href=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n      <ngx-govuk-footer-navigation-item href=\"/business\">Business and self-employed</ngx-govuk-footer-navigation-item>\n    </ngx-govuk-footer-navigation-section>\n    <ngx-govuk-footer-navigation-section title=\"Departments and policy\" width=\"one-third\">\n      <ngx-govuk-footer-navigation-item href=\"/how-government-works\">How government works</ngx-govuk-footer-navigation-item>\n      <ngx-govuk-footer-navigation-item href=\"/departments\">Departments</ngx-govuk-footer-navigation-item>\n    </ngx-govuk-footer-navigation-section>\n  </ngx-govuk-footer-navigation>\n  <ngx-govuk-footer-links>\n    <ngx-govuk-footer-link href=\"/help\">Help</ngx-govuk-footer-link>\n    <ngx-govuk-footer-link href=\"/cookies\">Cookies</ngx-govuk-footer-link>\n  </ngx-govuk-footer-links>\n  <ngx-govuk-footer-meta>Built by the Government Digital Service</ngx-govuk-footer-meta>\n</ngx-govuk-footer>\n```\n```",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Footer component that displays standard GOV.UK footer\n *\n * @example\n * ```html\n * <ngx-govuk-footer>\n *   <ngx-govuk-footer-navigation>\n *     <ngx-govuk-footer-navigation-section title=\"Services and information\" [columns]=\"2\" width=\"two-thirds\">\n *       <ngx-govuk-footer-navigation-item href=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n *       <ngx-govuk-footer-navigation-item href=\"/business\">Business and self-employed</ngx-govuk-footer-navigation-item>\n *     </ngx-govuk-footer-navigation-section>\n *     <ngx-govuk-footer-navigation-section title=\"Departments and policy\" width=\"one-third\">\n *       <ngx-govuk-footer-navigation-item href=\"/how-government-works\">How government works</ngx-govuk-footer-navigation-item>\n *       <ngx-govuk-footer-navigation-item href=\"/departments\">Departments</ngx-govuk-footer-navigation-item>\n *     </ngx-govuk-footer-navigation-section>\n *   </ngx-govuk-footer-navigation>\n *   <ngx-govuk-footer-links>\n *     <ngx-govuk-footer-link href=\"/help\">Help</ngx-govuk-footer-link>\n *     <ngx-govuk-footer-link href=\"/cookies\">Cookies</ngx-govuk-footer-link>\n *   </ngx-govuk-footer-links>\n *   <ngx-govuk-footer-meta>Built by the Government Digital Service</ngx-govuk-footer-meta>\n * </ngx-govuk-footer>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer',\n  templateUrl: './footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFooterComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer class=\"govuk-footer\">\n  <div class=\"govuk-width-container\">\n    <ng-content select=\"ngx-govuk-footer-navigation\" />\n    <div class=\"govuk-footer__meta\">\n      <div class=\"govuk-footer__meta-item govuk-footer__meta-item--grow\">\n        <ng-content select=\"ngx-govuk-footer-links\" />\n        <ng-content select=\"ngx-govuk-footer-meta\" />\n        <svg\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          class=\"govuk-footer__licence-logo\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 483.2 195.7\"\n          height=\"17\"\n          width=\"41\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145\"\n          />\n        </svg>\n        <span class=\"govuk-footer__licence-description\">\n          All content is available under the\n          <a\n            class=\"govuk-footer__link\"\n            href=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n            rel=\"license\"\n            >Open Government Licence v3.0</a\n          >, except where otherwise stated\n        </span>\n      </div>\n      <div class=\"govuk-footer__meta-item\">\n        <a\n          class=\"govuk-footer__link govuk-footer__copyright-logo\"\n          href=\"https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/\"\n        >\n          © Crown copyright\n        </a>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "GovUKFooterLinkComponent",
            "id": "component-GovUKFooterLinkComponent-d935676e18871a16cd0ada96836b0d8cfb1675222c80eb69017445c4f664c59f5683cb7ff83b54b0bd5f8587e222011f67ee74dce300aab03ef98fa31b6140e4",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer-link.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer-link",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        cursor: pointer;\n      }\n    "
            ],
            "template": "<li class=\"govuk-footer__inline-list-item\">    <a class=\"govuk-footer__link\" [attr.href]=\"href() ?? null\"\n      ><ng-content\n    /></a>\n  </li>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Footer link component for use within the GOV.UK footer\nRepresents a single link in the footer meta section</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;!-- With href --&gt;\n&lt;ngx-govuk-footer-link href=&quot;https://example.com&quot;&gt;Example Link&lt;/ngx-govuk-footer-link&gt;</code></pre></div><!-- With routerLink -->\n<p><ngx-govuk-footer-link routerLink=\"/help\">Help</ngx-govuk-footer-link></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter link component for use within the GOV.UK footer\nRepresents a single link in the footer meta section\n\n```html\n```html\n<!-- With href -->\n<ngx-govuk-footer-link href=\"https://example.com\">Example Link</ngx-govuk-footer-link>\n```\n<!-- With routerLink -->\n<ngx-govuk-footer-link routerLink=\"/help\">Help</ngx-govuk-footer-link>\n```\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n/**\n * Footer link component for use within the GOV.UK footer\n * Represents a single link in the footer meta section\n *\n * @example\n * ```html\n * <!-- With href -->\n * <ngx-govuk-footer-link href=\"https://example.com\">Example Link</ngx-govuk-footer-link>\n *\n * <!-- With routerLink -->\n * <ngx-govuk-footer-link routerLink=\"/help\">Help</ngx-govuk-footer-link>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer-link',\n  template: `<li class=\"govuk-footer__inline-list-item\">\n    <a class=\"govuk-footer__link\" [attr.href]=\"href() ?? null\"\n      ><ng-content\n    /></a>\n  </li>`,\n  styles: [\n    `\n      :host {\n        cursor: pointer;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  })\nexport class GovUKFooterLinkComponent {\n  href = input<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        cursor: pointer;\n      }\n    \n",
            "extends": []
        },
        {
            "name": "GovUKFooterLinksComponent",
            "id": "component-GovUKFooterLinksComponent-1c3e99c6e53ba342881669ee12068dd3cf7716a2bbb44485d0bf3813e621700e1dd738a750c53104659463f783f143a8e15e0175691f931fe92aebe2fa81336a",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer-links.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer-links",
            "styleUrls": [],
            "styles": [],
            "template": "<ul class=\"govuk-footer__inline-list\">    <ng-content />\n  </ul>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Footer links component for use within the GOV.UK footer\nProvides a container for footer link components</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-footer&gt;\n  &lt;ngx-govuk-footer-links&gt;\n    &lt;ngx-govuk-footer-link href=&quot;/help&quot;&gt;Help&lt;/ngx-govuk-footer-link&gt;\n    &lt;ngx-govuk-footer-link href=&quot;/cookies&quot;&gt;Cookies&lt;/ngx-govuk-footer-link&gt;\n  &lt;/ngx-govuk-footer-links&gt;\n  &lt;ngx-govuk-footer-meta&gt;Built by the Government Digital Service&lt;/ngx-govuk-footer-meta&gt;\n&lt;/ngx-govuk-footer&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter links component for use within the GOV.UK footer\nProvides a container for footer link components\n\n```html\n```html\n<ngx-govuk-footer>\n  <ngx-govuk-footer-links>\n    <ngx-govuk-footer-link href=\"/help\">Help</ngx-govuk-footer-link>\n    <ngx-govuk-footer-link href=\"/cookies\">Cookies</ngx-govuk-footer-link>\n  </ngx-govuk-footer-links>\n  <ngx-govuk-footer-meta>Built by the Government Digital Service</ngx-govuk-footer-meta>\n</ngx-govuk-footer>\n```\n```",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Footer links component for use within the GOV.UK footer\n * Provides a container for footer link components\n *\n * @example\n * ```html\n * <ngx-govuk-footer>\n *   <ngx-govuk-footer-links>\n *     <ngx-govuk-footer-link href=\"/help\">Help</ngx-govuk-footer-link>\n *     <ngx-govuk-footer-link href=\"/cookies\">Cookies</ngx-govuk-footer-link>\n *   </ngx-govuk-footer-links>\n *   <ngx-govuk-footer-meta>Built by the Government Digital Service</ngx-govuk-footer-meta>\n * </ngx-govuk-footer>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer-links',\n  template: `<ul class=\"govuk-footer__inline-list\">\n    <ng-content />\n  </ul>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFooterLinksComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GovUKFooterMetaComponent",
            "id": "component-GovUKFooterMetaComponent-c030daada449d619131fa4210c9ed1f6629c1f44db15badf543aad603183bf84d69440958b1fd8cbb6a89155c4673d451af304e2bd548999decdb4de86a4b3b6",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer-meta.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer-meta",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"govuk-footer__meta-custom\">    <ng-content />\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Footer meta component for use within the GOV.UK footer\nProvides a way to add custom content to the meta section</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-footer-meta&gt;Built by the Government Digital Service&lt;/ngx-govuk-footer-meta&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter meta component for use within the GOV.UK footer\nProvides a way to add custom content to the meta section\n\n```html\n```html\n<ngx-govuk-footer-meta>Built by the Government Digital Service</ngx-govuk-footer-meta>\n```\n```",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Footer meta component for use within the GOV.UK footer\n * Provides a way to add custom content to the meta section\n *\n * @example\n * ```html\n * <ngx-govuk-footer-meta>Built by the Government Digital Service</ngx-govuk-footer-meta>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer-meta',\n  template: `<div class=\"govuk-footer__meta-custom\">\n    <ng-content />\n  </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFooterMetaComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GovUKFooterNavigationComponent",
            "id": "component-GovUKFooterNavigationComponent-773651ae7c1df75c8959c6efb613eebc5dbfe52b365ce20fe3f6317fe11111401ddd4c86fe857fb4f861231624c6cd74d388b2fbdc0cd63dbd9c29d94aa273d6",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer-navigation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer-navigation",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"govuk-footer__navigation\">    <ng-content select=\"ngx-govuk-footer-navigation-section\" />\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navigationSections",
                    "defaultValue": "contentChildren(GovUKFooterNavigationSectionComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all navigation section components using signal-based query</p>\n",
                    "line": 33,
                    "rawdescription": "\n\nQuery for all navigation section components using signal-based query\n"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Footer navigation component for use within the GOV.UK footer\nProvides a container for navigation sections</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-footer-navigation&gt;\n  &lt;ngx-govuk-footer-navigation-section title=&quot;Services and information&quot; columns=&quot;2&quot; width=&quot;two-thirds&quot;&gt;\n    &lt;ngx-govuk-footer-navigation-item href=&quot;/benefits&quot;&gt;Benefits&lt;/ngx-govuk-footer-navigation-item&gt;\n    &lt;ngx-govuk-footer-navigation-item href=&quot;/business&quot;&gt;Business and self-employed&lt;/ngx-govuk-footer-navigation-item&gt;\n  &lt;/ngx-govuk-footer-navigation-section&gt;\n&lt;/ngx-govuk-footer-navigation&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter navigation component for use within the GOV.UK footer\nProvides a container for navigation sections\n\n```html\n```html\n<ngx-govuk-footer-navigation>\n  <ngx-govuk-footer-navigation-section title=\"Services and information\" columns=\"2\" width=\"two-thirds\">\n    <ngx-govuk-footer-navigation-item href=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n    <ngx-govuk-footer-navigation-item href=\"/business\">Business and self-employed</ngx-govuk-footer-navigation-item>\n  </ngx-govuk-footer-navigation-section>\n</ngx-govuk-footer-navigation>\n```\n```",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n} from '@angular/core';\nimport { GovUKFooterNavigationSectionComponent } from './footer-navigation-section.component';\n\n/**\n * Footer navigation component for use within the GOV.UK footer\n * Provides a container for navigation sections\n *\n * @example\n * ```html\n * <ngx-govuk-footer-navigation>\n *   <ngx-govuk-footer-navigation-section title=\"Services and information\" columns=\"2\" width=\"two-thirds\">\n *     <ngx-govuk-footer-navigation-item href=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n *     <ngx-govuk-footer-navigation-item href=\"/business\">Business and self-employed</ngx-govuk-footer-navigation-item>\n *   </ngx-govuk-footer-navigation-section>\n * </ngx-govuk-footer-navigation>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer-navigation',\n  template: `<div class=\"govuk-footer__navigation\">\n    <ng-content select=\"ngx-govuk-footer-navigation-section\" />\n  </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFooterNavigationComponent {\n  /**\n   * Query for all navigation section components using signal-based query\n   */\n  navigationSections = contentChildren(GovUKFooterNavigationSectionComponent);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GovUKFooterNavigationItemComponent",
            "id": "component-GovUKFooterNavigationItemComponent-45283b0161b998b2501a00e3c254b78a2a6e64242c2b04921600ed7bce1cfc49d5e372485e3928366bd72ba91f58e406877ba07415d0569318ce23fb16e16749",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer-navigation-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer-navigation-item",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-template #content><ng-content /></ng-template>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The URL of the navigation link</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nThe URL of the navigation link\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "viewChild.required<TemplateRef<unknown>>('content')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The content of the navigation item</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nThe content of the navigation item\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The URL of the navigation link</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nThe URL of the navigation link\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Footer navigation item component for use within the GOV.UK footer navigation section\nProvides a navigation link within a section</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-footer-navigation-item href=&quot;/benefits&quot;&gt;Benefits&lt;/ngx-govuk-footer-navigation-item&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter navigation item component for use within the GOV.UK footer navigation section\nProvides a navigation link within a section\n\n```html\n```html\n<ngx-govuk-footer-navigation-item href=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n```\n```",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  TemplateRef,\n  input,\n  viewChild,\n} from '@angular/core';\n\n/**\n * Footer navigation item component for use within the GOV.UK footer navigation section\n * Provides a navigation link within a section\n *\n * @example\n * ```html\n * <ngx-govuk-footer-navigation-item href=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer-navigation-item',\n  template: `<ng-template #content><ng-content /></ng-template>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFooterNavigationItemComponent {\n  /**\n   * The URL of the navigation link\n   */\n  readonly href = input<string>();\n\n  /**\n   * The content of the navigation item\n   */\n  readonly content = viewChild.required<TemplateRef<unknown>>('content');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GovUKFooterNavigationSectionComponent",
            "id": "component-GovUKFooterNavigationSectionComponent-cacd38480c2d4d250f7022d4efa0b129aa11e206a2d67adbc1e566148f970279d6bc56e873405e1c9012e05dc5c78e5744cd9f623fd70bd56256d75992ac6f39",
            "file": "libs/ngx-govuk-frontend/footer/src/lib/footer-navigation-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-footer-navigation-section",
            "styleUrls": [],
            "styles": [
                "\n      a {\n        cursor: pointer;\n      }\n    "
            ],
            "template": "<div [class]=\"sectionClasses()\">    <h2 class=\"govuk-footer__heading govuk-heading-m\">{{ title() }}</h2>\n    <ul [class]=\"listClasses()\">\n      @for (item of navigationItems(); track item) {\n        <li class=\"govuk-footer__list-item\">\n          <a\n            class=\"govuk-footer__link\"\n            [attr.href]=\"item.href() ? item.href() : null\"\n          >\n            <ng-container [ngTemplateOutlet]=\"item.content()\" />\n          </a>\n        </li>\n      }\n    </ul>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The number of columns to display navigation items in</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nThe number of columns to display navigation items in\n",
                    "modifierKind": [
                        148
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1744,
                            "end": 1758,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1745,
                                "end": 1752,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "default"
                            },
                            "comment": "<p>1</p>\n"
                        }
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The title of the navigation section</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nThe title of the navigation section\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The number of columns to display navigation items in</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nThe number of columns to display navigation items in\n",
                    "modifierKind": [
                        148
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1744,
                            "end": 1758,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1745,
                                "end": 1752,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "default"
                            },
                            "comment": "<p>1</p>\n"
                        }
                    ],
                    "required": false
                },
                {
                    "name": "listClasses",
                    "defaultValue": "computed(() => {\n    const columnsClass =\n      this.columns() > 1 ? `govuk-footer__list--columns-${this.columns()}` : '';\n    return `govuk-footer__list ${columnsClass}`.trim();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computes CSS classes for the navigation list</p>\n",
                    "line": 86,
                    "rawdescription": "\n\nComputes CSS classes for the navigation list\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "navigationItems",
                    "defaultValue": "contentChildren(\n    GovUKFooterNavigationItemComponent,\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all navigation item components using signal-based query</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nQuery for all navigation item components using signal-based query\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "sectionClasses",
                    "defaultValue": "computed(() => {\n    const widthClass = this.width() ? `govuk-grid-column-${this.width()}` : '';\n    return `govuk-footer__section ${widthClass}`.trim();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computes CSS classes for the navigation section</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nComputes CSS classes for the navigation section\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The title of the navigation section</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nThe title of the navigation section\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "width",
                    "defaultValue": "input<string>('full')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The width of the navigation section\nAvailable values: &#39;full&#39;, &#39;one-half&#39;, &#39;one-third&#39;, &#39;two-thirds&#39;, &#39;one-quarter&#39;, &#39;three-quarters&#39;</p>\n",
                    "line": 66,
                    "rawdescription": "\n\nThe width of the navigation section\nAvailable values: 'full', 'one-half', 'one-third', 'two-thirds', 'one-quarter', 'three-quarters'\n",
                    "modifierKind": [
                        148
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1955,
                            "end": 1974,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1956,
                                "end": 1963,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "default"
                            },
                            "comment": "<p>&#39;full&#39;</p>\n"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "<p>Footer navigation section component for use within the GOV.UK footer navigation\nProvides a section for navigation items with a title</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-footer-navigation-section title=&quot;Services and information&quot; columns=&quot;2&quot; width=&quot;two-thirds&quot;&gt;\n  &lt;ngx-govuk-footer-navigation-item routerLink=&quot;/benefits&quot;&gt;Benefits&lt;/ngx-govuk-footer-navigation-item&gt;\n  &lt;ngx-govuk-footer-navigation-item href=&quot;/business&quot;&gt;Business and self-employed&lt;/ngx-govuk-footer-navigation-item&gt;\n&lt;/ngx-govuk-footer-navigation-section&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nFooter navigation section component for use within the GOV.UK footer navigation\nProvides a section for navigation items with a title\n\n```html\n```html\n<ngx-govuk-footer-navigation-section title=\"Services and information\" columns=\"2\" width=\"two-thirds\">\n  <ngx-govuk-footer-navigation-item routerLink=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n  <ngx-govuk-footer-navigation-item href=\"/business\">Business and self-employed</ngx-govuk-footer-navigation-item>\n</ngx-govuk-footer-navigation-section>\n```\n```",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  contentChildren,\n  input,\n} from '@angular/core';\nimport { GovUKFooterNavigationItemComponent } from './footer-navigation-item.component';\n/**\n * Footer navigation section component for use within the GOV.UK footer navigation\n * Provides a section for navigation items with a title\n *\n * @example\n * ```html\n * <ngx-govuk-footer-navigation-section title=\"Services and information\" columns=\"2\" width=\"two-thirds\">\n *   <ngx-govuk-footer-navigation-item routerLink=\"/benefits\">Benefits</ngx-govuk-footer-navigation-item>\n *   <ngx-govuk-footer-navigation-item href=\"/business\">Business and self-employed</ngx-govuk-footer-navigation-item>\n * </ngx-govuk-footer-navigation-section>\n * ```\n */\n@Component({\n  selector: 'ngx-govuk-footer-navigation-section',\n  imports: [NgTemplateOutlet],\n  template: `<div [class]=\"sectionClasses()\">\n    <h2 class=\"govuk-footer__heading govuk-heading-m\">{{ title() }}</h2>\n    <ul [class]=\"listClasses()\">\n      @for (item of navigationItems(); track item) {\n        <li class=\"govuk-footer__list-item\">\n          <a\n            class=\"govuk-footer__link\"\n            [attr.href]=\"item.href() ? item.href() : null\"\n          >\n            <ng-container [ngTemplateOutlet]=\"item.content()\" />\n          </a>\n        </li>\n      }\n    </ul>\n  </div>`,\n  styles: [\n    `\n      a {\n        cursor: pointer;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFooterNavigationSectionComponent {\n  /**\n   * The title of the navigation section\n   */\n  readonly title = input.required<string>();\n\n  /**\n   * The number of columns to display navigation items in\n   * @default 1\n   */\n  readonly columns = input<number>(1);\n\n  /**\n   * The width of the navigation section\n   * Available values: 'full', 'one-half', 'one-third', 'two-thirds', 'one-quarter', 'three-quarters'\n   * @default 'full'\n   */\n  readonly width = input<string>('full');\n\n  /**\n   * Query for all navigation item components using signal-based query\n   */\n  readonly navigationItems = contentChildren(\n    GovUKFooterNavigationItemComponent,\n  );\n\n  /**\n   * Computes CSS classes for the navigation section\n   */\n  readonly sectionClasses = computed(() => {\n    const widthClass = this.width() ? `govuk-grid-column-${this.width()}` : '';\n    return `govuk-footer__section ${widthClass}`.trim();\n  });\n\n  /**\n   * Computes CSS classes for the navigation list\n   */\n  readonly listClasses = computed(() => {\n    const columnsClass =\n      this.columns() > 1 ? `govuk-footer__list--columns-${this.columns()}` : '';\n    return `govuk-footer__list ${columnsClass}`.trim();\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      a {\n        cursor: pointer;\n      }\n    \n",
            "extends": []
        },
        {
            "name": "GovUKFormGroupComponent",
            "id": "component-GovUKFormGroupComponent-73af9d1957fd61fb209f066ca14482c8232a39fe1de9e6514ed5ed4a96f2f951aa69c5246e70203eadfe21a9276adf1d66a5c571f47648ac228276a4161ecc43",
            "file": "libs/ngx-govuk-frontend/form-group/src/lib/form-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-form-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "labelFor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "isPageTitle",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "labelFor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>A form group component that wraps form controls with a label and optional hint text.\nFollows the GOV.UK Design System form group pattern.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-form-group\n  inputId=&quot;example-input&quot;\n  label=&quot;Enter your name&quot;\n  hint=&quot;As shown on your passport&quot;\n  [isPageTitle]=&quot;true&quot;\n&gt;\n  &lt;input type=&quot;text&quot; /&gt;\n&lt;/ngx-govuk-form-group&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nA form group component that wraps form controls with a label and optional hint text.\nFollows the GOV.UK Design System form group pattern.\n\n```html\n```html\n<ngx-govuk-form-group\n  inputId=\"example-input\"\n  label=\"Enter your name\"\n  hint=\"As shown on your passport\"\n  [isPageTitle]=\"true\"\n>\n  <input type=\"text\" />\n</ngx-govuk-form-group>\n```\n```\n",
            "type": "component",
            "sourceCode": "import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  input,\n} from '@angular/core';\n\n/**\n * A form group component that wraps form controls with a label and optional hint text.\n * Follows the GOV.UK Design System form group pattern.\n *\n * @example\n * ```html\n * <ngx-govuk-form-group\n *   inputId=\"example-input\"\n *   label=\"Enter your name\"\n *   hint=\"As shown on your passport\"\n *   [isPageTitle]=\"true\"\n * >\n *   <input type=\"text\" />\n * </ngx-govuk-form-group>\n * ```\n *\n * @property {string} inputId - Required. The ID attribute for the input element.\n * @property {string} label - Required. The label text for the input field.\n * @property {string} hint - Optional. Help text displayed below the label.\n * @property {boolean} isPageTitle - Optional. When true, renders the label as a page heading (h1). Defaults to false.\n */\n@Component({\n  selector: 'ngx-govuk-form-group',\n  templateUrl: './form-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKFormGroupComponent {\n  readonly label = input<string>();\n  readonly labelFor = input<string>();\n\n  readonly errorMessage = input<string>();\n  readonly hint = input<string>();\n  readonly isPageTitle = input(false, { transform: booleanAttribute });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-form-group\" [class.govuk-form-group--error]=\"errorMessage()\">\n  @if (label()) {\n    @if (isPageTitle()) {\n      <h1 class=\"govuk-label-wrapper\">\n        <label\n          class=\"govuk-label govuk-label--l\"\n          [attr.for]=\"labelFor() ? labelFor() : null\"\n        >\n          {{ label() }}\n        </label>\n      </h1>\n    } @else {\n      <label class=\"govuk-label\" [attr.for]=\"labelFor() ? labelFor() : null\">\n        {{ label() }}\n      </label>\n    }\n\n    @if (hint()) {\n      <div class=\"govuk-hint\">\n        {{ hint() }}\n      </div>\n    }\n\n    @if (errorMessage()) {\n      <p class=\"govuk-error-message\">\n        <span class=\"govuk-visually-hidden\">Error:</span> {{ errorMessage() }}\n      </p>\n    }\n  }\n\n  <ng-content />\n</div>\n"
        },
        {
            "name": "GovUKHeaderComponent",
            "id": "component-GovUKHeaderComponent-9309e8196b006e0e7b1c83251aaeaea3fadaf7b32a4287078ec5873d0fbfeb1380f642a44f9bdded2716b7ac9fa38deef96433d4a0930c238759f9ad45d412c9",
            "file": "libs/ngx-govuk-frontend/header/src/lib/header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "required": false
                },
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "required": false
                },
                {
                    "name": "logoLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "required": false
                },
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "required": false
                },
                {
                    "name": "logoLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n    selector: 'ngx-govuk-header',\n    imports: [RouterLink],\n    templateUrl: './header.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKHeaderComponent {\n  logoLink = input.required<string>();\n  appName = input<string>();\n  appLink = input<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header class=\"govuk-header\" data-module=\"govuk-header\">\n  <div class=\"govuk-header__container govuk-width-container\">\n    <div class=\"govuk-header__logo\">\n      <a href=\"#\" class=\"govuk-header__link govuk-header__link--homepage\">\n        <svg\n          focusable=\"false\"\n          role=\"img\"\n          class=\"govuk-header__logotype\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 148 30\"\n          height=\"30\"\n          width=\"148\"\n          aria-label=\"GOV.UK\"\n        >\n          <title>GOV.UK</title>\n          <path\n            d=\"M22.6 10.4c-1 .4-2-.1-2.4-1-.4-.9.1-2 1-2.4.9-.4 2 .1 2.4 1s-.1 2-1 2.4m-5.9 6.7c-.9.4-2-.1-2.4-1-.4-.9.1-2 1-2.4.9-.4 2 .1 2.4 1s-.1 2-1 2.4m10.8-3.7c-1 .4-2-.1-2.4-1-.4-.9.1-2 1-2.4.9-.4 2 .1 2.4 1s0 2-1 2.4m3.3 4.8c-1 .4-2-.1-2.4-1-.4-.9.1-2 1-2.4.9-.4 2 .1 2.4 1s-.1 2-1 2.4M17 4.7l2.3 1.2V2.5l-2.3.7-.2-.2.9-3h-3.4l.9 3-.2.2c-.1.1-2.3-.7-2.3-.7v3.4L15 4.7c.1.1.1.2.2.2l-1.3 4c-.1.2-.1.4-.1.6 0 1.1.8 2 1.9 2.2h.7c1-.2 1.9-1.1 1.9-2.1 0-.2 0-.4-.1-.6l-1.3-4c-.1-.2 0-.2.1-.3m-7.6 5.7c.9.4 2-.1 2.4-1 .4-.9-.1-2-1-2.4-.9-.4-2 .1-2.4 1s0 2 1 2.4m-5 3c.9.4 2-.1 2.4-1 .4-.9-.1-2-1-2.4-.9-.4-2 .1-2.4 1s.1 2 1 2.4m-3.2 4.8c.9.4 2-.1 2.4-1 .4-.9-.1-2-1-2.4-.9-.4-2 .1-2.4 1s0 2 1 2.4m14.8 11c4.4 0 8.6.3 12.3.8 1.1-4.5 2.4-7 3.7-8.8l-2.5-.9c.2 1.3.3 1.9 0 2.7-.4-.4-.8-1.1-1.1-2.3l-1.2 4c.7-.5 1.3-.8 2-.9-1.1 2.5-2.6 3.1-3.5 3-1.1-.2-1.7-1.2-1.5-2.1.3-1.2 1.5-1.5 2.1-.1 1.1-2.3-.8-3-2-2.3 1.9-1.9 2.1-3.5.6-5.6-2.1 1.6-2.1 3.2-1.2 5.5-1.2-1.4-3.2-.6-2.5 1.6.9-1.4 2.1-.5 1.9.8-.2 1.1-1.7 2.1-3.5 1.9-2.7-.2-2.9-2.1-2.9-3.6.7-.1 1.9.5 2.9 1.9l.4-4.3c-1.1 1.1-2.1 1.4-3.2 1.4.4-1.2 2.1-3 2.1-3h-5.4s1.7 1.9 2.1 3c-1.1 0-2.1-.2-3.2-1.4l.4 4.3c1-1.4 2.2-2 2.9-1.9-.1 1.5-.2 3.4-2.9 3.6-1.9.2-3.4-.8-3.5-1.9-.2-1.3 1-2.2 1.9-.8.7-2.3-1.2-3-2.5-1.6.9-2.2.9-3.9-1.2-5.5-1.5 2-1.3 3.7.6 5.6-1.2-.7-3.1 0-2 2.3.6-1.4 1.8-1.1 2.1.1.2.9-.3 1.9-1.5 2.1-.9.2-2.4-.5-3.5-3 .6 0 1.2.3 2 .9l-1.2-4c-.3 1.1-.7 1.9-1.1 2.3-.3-.8-.2-1.4 0-2.7l-2.9.9C1.3 23 2.6 25.5 3.7 30c3.7-.5 7.9-.8 12.3-.8m28.3-11.6c0 .9.1 1.7.3 2.5.2.8.6 1.5 1 2.2.5.6 1 1.1 1.7 1.5.7.4 1.5.6 2.5.6.9 0 1.7-.1 2.3-.4s1.1-.7 1.5-1.1c.4-.4.6-.9.8-1.5.1-.5.2-1 .2-1.5v-.2h-5.3v-3.2h9.4V28H55v-2.5c-.3.4-.6.8-1 1.1-.4.3-.8.6-1.3.9-.5.2-1 .4-1.6.6s-1.2.2-1.8.2c-1.5 0-2.9-.3-4-.8-1.2-.6-2.2-1.3-3-2.3-.8-1-1.4-2.1-1.8-3.4-.3-1.4-.5-2.8-.5-4.3s.2-2.9.7-4.2c.5-1.3 1.1-2.4 2-3.4.9-1 1.9-1.7 3.1-2.3 1.2-.6 2.6-.8 4.1-.8 1 0 1.9.1 2.8.3.9.2 1.7.6 2.4 1s1.4.9 1.9 1.5c.6.6 1 1.3 1.4 2l-3.7 2.1c-.2-.4-.5-.9-.8-1.2-.3-.4-.6-.7-1-1-.4-.3-.8-.5-1.3-.7-.5-.2-1.1-.2-1.7-.2-1 0-1.8.2-2.5.6-.7.4-1.3.9-1.7 1.5-.5.6-.8 1.4-1 2.2-.3.8-.4 1.9-.4 2.7zM71.5 6.8c1.5 0 2.9.3 4.2.8 1.2.6 2.3 1.3 3.1 2.3.9 1 1.5 2.1 2 3.4s.7 2.7.7 4.2-.2 2.9-.7 4.2c-.4 1.3-1.1 2.4-2 3.4-.9 1-1.9 1.7-3.1 2.3-1.2.6-2.6.8-4.2.8s-2.9-.3-4.2-.8c-1.2-.6-2.3-1.3-3.1-2.3-.9-1-1.5-2.1-2-3.4-.4-1.3-.7-2.7-.7-4.2s.2-2.9.7-4.2c.4-1.3 1.1-2.4 2-3.4.9-1 1.9-1.7 3.1-2.3 1.2-.5 2.6-.8 4.2-.8zm0 17.6c.9 0 1.7-.2 2.4-.5s1.3-.8 1.7-1.4c.5-.6.8-1.3 1.1-2.2.2-.8.4-1.7.4-2.7v-.1c0-1-.1-1.9-.4-2.7-.2-.8-.6-1.6-1.1-2.2-.5-.6-1.1-1.1-1.7-1.4-.7-.3-1.5-.5-2.4-.5s-1.7.2-2.4.5-1.3.8-1.7 1.4c-.5.6-.8 1.3-1.1 2.2-.2.8-.4 1.7-.4 2.7v.1c0 1 .1 1.9.4 2.7.2.8.6 1.6 1.1 2.2.5.6 1.1 1.1 1.7 1.4.6.3 1.4.5 2.4.5zM88.9 28 83 7h4.7l4 15.7h.1l4-15.7h4.7l-5.9 21h-5.7zm28.8-3.6c.6 0 1.2-.1 1.7-.3.5-.2 1-.4 1.4-.8.4-.4.7-.8.9-1.4.2-.6.3-1.2.3-2v-13h4.1v13.6c0 1.2-.2 2.2-.6 3.1s-1 1.7-1.8 2.4c-.7.7-1.6 1.2-2.7 1.5-1 .4-2.2.5-3.4.5-1.2 0-2.4-.2-3.4-.5-1-.4-1.9-.9-2.7-1.5-.8-.7-1.3-1.5-1.8-2.4-.4-.9-.6-2-.6-3.1V6.9h4.2v13c0 .8.1 1.4.3 2 .2.6.5 1 .9 1.4.4.4.8.6 1.4.8.6.2 1.1.3 1.8.3zm13-17.4h4.2v9.1l7.4-9.1h5.2l-7.2 8.4L148 28h-4.9l-5.5-9.4-2.7 3V28h-4.2V7zm-27.6 16.1c-1.5 0-2.7 1.2-2.7 2.7s1.2 2.7 2.7 2.7 2.7-1.2 2.7-2.7-1.2-2.7-2.7-2.7z\"\n          ></path>\n        </svg>\n      </a>\n    </div>\n    @if(appName()) {\n    <div class=\"govuk-header__content\">\n      <a\n        [routerLink]=\"appLink() ? [appLink()] : []\"\n        class=\"govuk-header__link govuk-header__service-name\"\n      >\n        {{ appName() }}\n      </a>\n    </div>\n    }\n  </div>\n</header>\n"
        },
        {
            "name": "GovUKInsetTextComponent",
            "id": "component-GovUKInsetTextComponent-46f89391a89cd9ce25a1d7fd55a6e6eb68964614db0574bf0bff322e33b9cd0e18b80bf64f99e6d6fc108ad21f8b58dc4522480db9a133273d69fec3ac6103ba",
            "file": "libs/ngx-govuk-frontend/inset-text/src/lib/inset-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-inset-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./inset-text.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-inset-text',\n  templateUrl: './inset-text.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKInsetTextComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-inset-text\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "GovUKNotificationBannerComponent",
            "id": "component-GovUKNotificationBannerComponent-2e93bbcf70926ce17f1cb8ca94277b5119a0c8bd655a1f4f77a495d669e04eef26232c233c00a45a652f8c289c0716642e2add9babf395a546132d5e25478384",
            "file": "libs/ngx-govuk-frontend/notification-banner/src/lib/notification-banner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-notification-banner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification-banner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-notification-banner',\n  templateUrl: './notification-banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKNotificationBannerComponent {\n  title = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"govuk-notification-banner\"\n  role=\"region\"\n  aria-labelledby=\"govuk-notification-banner-title\"\n  data-module=\"govuk-notification-banner\"\n>\n  <div class=\"govuk-notification-banner__header\">\n    <h2\n      class=\"govuk-notification-banner__title\"\n      id=\"govuk-notification-banner-title\"\n    >\n      {{ title() }}\n    </h2>\n  </div>\n  <div class=\"govuk-notification-banner__content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "GovUKPaginationComponent",
            "id": "component-GovUKPaginationComponent-25ae9721d84fca91c2f545e02d7d35f739f1ada452c9e9656b3b07729739beeb9af4e01de85b0f631510fbf7578b2770ba72eba7a954f0ce01bf0c620c474ba8",
            "file": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current page number (1-based)</p>\n",
                    "line": 55,
                    "rawdescription": "\nCurrent page number (1-based)",
                    "required": false
                },
                {
                    "name": "itemCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Total number of items</p>\n",
                    "line": 49,
                    "rawdescription": "\nTotal number of items",
                    "required": false
                },
                {
                    "name": "itemsPerPage",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Number of items per page</p>\n",
                    "line": 52,
                    "rawdescription": "\nNumber of items per page",
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "nextClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Output event when the next link is clicked</p>\n",
                    "line": 79,
                    "rawdescription": "\nOutput event when the next link is clicked",
                    "required": false
                },
                {
                    "name": "pageChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Output event when a pagination item is clicked</p>\n",
                    "line": 73,
                    "rawdescription": "\nOutput event when a pagination item is clicked",
                    "required": false
                },
                {
                    "name": "previousClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Output event when the previous link is clicked</p>\n",
                    "line": 76,
                    "rawdescription": "\nOutput event when the previous link is clicked",
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "computedItems",
                    "defaultValue": "computed(() => {\n    const totalPages = this.totalPages();\n    if (totalPages <= 0) {\n      return [];\n    }\n\n    // Simple case: 7 or fewer pages, show all\n    if (totalPages <= 7) {\n      return this.createSequentialItems(1, totalPages);\n    }\n\n    const currentPage = this.currentPage();\n    const items: PageItem[] = [];\n\n    // Always show first page\n    items.push(this.createPageItem(1));\n\n    // Complex case: more than 7 pages, show ellipses\n    if (currentPage <= 4) {\n      // Near the start: show 1 2 3 4 5 ... 100\n      items.push(...this.createSequentialItems(2, 5));\n      items.push(this.createEllipsisItem());\n      items.push(this.createPageItem(totalPages));\n    } else if (currentPage >= totalPages - 3) {\n      // Near the end: show 1 ... 96 97 98 99 100\n      items.push(this.createEllipsisItem());\n      items.push(...this.createSequentialItems(totalPages - 4, totalPages));\n    } else {\n      // In the middle: show 1 ... 49 50 51 ... 100\n      items.push(this.createEllipsisItem());\n      items.push(\n        ...this.createSequentialItems(currentPage - 1, currentPage + 1),\n      );\n      items.push(this.createEllipsisItem());\n      items.push(this.createPageItem(totalPages));\n    }\n\n    return items;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computed pagination items</p>\n",
                    "line": 99,
                    "rawdescription": "\nComputed pagination items"
                },
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current page number (1-based)</p>\n",
                    "line": 55,
                    "rawdescription": "\nCurrent page number (1-based)",
                    "required": false
                },
                {
                    "name": "ellipsisCounter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Counter for generating unique IDs</p>\n",
                    "line": 82,
                    "rawdescription": "\nCounter for generating unique IDs",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasNextPage",
                    "defaultValue": "computed(() => this.currentPage() < this.totalPages())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computed flag for whether next button should be shown</p>\n",
                    "line": 93,
                    "rawdescription": "\nComputed flag for whether next button should be shown"
                },
                {
                    "name": "hasPreviousPage",
                    "defaultValue": "computed(() => this.currentPage() > 1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computed flag for whether previous button should be shown</p>\n",
                    "line": 90,
                    "rawdescription": "\nComputed flag for whether previous button should be shown"
                },
                {
                    "name": "isBlockMode",
                    "defaultValue": "computed(() => this.mode() === 'block')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computed check if mode is block</p>\n",
                    "line": 96,
                    "rawdescription": "\nComputed check if mode is block"
                },
                {
                    "name": "itemCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Total number of items</p>\n",
                    "line": 49,
                    "rawdescription": "\nTotal number of items",
                    "required": false
                },
                {
                    "name": "itemsPerPage",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Number of items per page</p>\n",
                    "line": 52,
                    "rawdescription": "\nNumber of items per page",
                    "required": false
                },
                {
                    "name": "mode",
                    "defaultValue": "input<PaginationMode>('list')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Pagination mode - &#39;block&#39; or &#39;list&#39;</p>\n",
                    "line": 58,
                    "rawdescription": "\nPagination mode - 'block' or 'list'"
                },
                {
                    "name": "nextClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Output event when the next link is clicked</p>\n",
                    "line": 79,
                    "rawdescription": "\nOutput event when the next link is clicked",
                    "required": false
                },
                {
                    "name": "nextLabel",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Label for the next button (additional context)</p>\n",
                    "line": 70,
                    "rawdescription": "\nLabel for the next button (additional context)"
                },
                {
                    "name": "nextTitle",
                    "defaultValue": "input<string>('Next')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Title for the next button</p>\n",
                    "line": 67,
                    "rawdescription": "\nTitle for the next button"
                },
                {
                    "name": "pageChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Output event when a pagination item is clicked</p>\n",
                    "line": 73,
                    "rawdescription": "\nOutput event when a pagination item is clicked",
                    "required": false
                },
                {
                    "name": "previousClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Output event when the previous link is clicked</p>\n",
                    "line": 76,
                    "rawdescription": "\nOutput event when the previous link is clicked",
                    "required": false
                },
                {
                    "name": "previousLabel",
                    "defaultValue": "input<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Label for the previous button (additional context)</p>\n",
                    "line": 64,
                    "rawdescription": "\nLabel for the previous button (additional context)"
                },
                {
                    "name": "previousTitle",
                    "defaultValue": "input<string>('Previous')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Title for the previous button</p>\n",
                    "line": 61,
                    "rawdescription": "\nTitle for the previous button"
                },
                {
                    "name": "totalPages",
                    "defaultValue": "computed(() =>\n    Math.ceil(this.itemCount() / this.itemsPerPage()),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Computed total number of pages</p>\n",
                    "line": 85,
                    "rawdescription": "\nComputed total number of pages"
                }
            ],
            "methodsClass": [
                {
                    "name": "createEllipsisItem",
                    "args": [],
                    "optional": false,
                    "returnType": "PageItem",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates an ellipsis item\n",
                    "description": "<p>Creates an ellipsis item</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "createPageItem",
                    "args": [
                        {
                            "name": "pageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "PageItem",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a page item for the specified page number\n",
                    "description": "<p>Creates a page item for the specified page number</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createSequentialItems",
                    "args": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "PageItem[]",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates an array of sequential page items\n",
                    "description": "<p>Creates an array of sequential page items</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "PageItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandle page number click\n",
                    "description": "<p>Handle page number click</p>\n",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "PageItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>A pagination component following the GovUK Design System</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;ngx-govuk-pagination\n  [itemCount]=&quot;100&quot;\n  [itemsPerPage]=&quot;10&quot;\n  [currentPage]=&quot;1&quot;\n  (pageChange)=&quot;onPageChange($event)&quot;\n&gt;&lt;/ngx-govuk-pagination&gt;</code></pre></div>",
            "rawdescription": "\n\nA pagination component following the GovUK Design System\n\n```html\n<ngx-govuk-pagination\n  [itemCount]=\"100\"\n  [itemsPerPage]=\"10\"\n  [currentPage]=\"1\"\n  (pageChange)=\"onPageChange($event)\"\n></ngx-govuk-pagination>\n```",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n  output,\n} from '@angular/core';\n\n/**\n * Internal interface for pagination items\n */\ninterface PageItem {\n  /** The number/text to display for the item */\n  number: string;\n  /** Whether this is the current active page */\n  current?: boolean;\n  /** Whether to display this item as an ellipsis */\n  ellipsis?: boolean;\n  /** Actual page number for this item */\n  pageNumber?: number;\n  /** Unique identifier for tracking in loops */\n  id: string;\n}\n\n/**\n * Pagination mode - defines layout and behavior\n */\nexport type PaginationMode = 'block' | 'list';\n\n/**\n * A pagination component following the GovUK Design System\n * @component\n *\n * @example\n * <ngx-govuk-pagination\n *   [itemCount]=\"100\"\n *   [itemsPerPage]=\"10\"\n *   [currentPage]=\"1\"\n *   (pageChange)=\"onPageChange($event)\"\n * ></ngx-govuk-pagination>\n */\n@Component({\n  selector: 'ngx-govuk-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKPaginationComponent {\n  /** Total number of items */\n  itemCount = input<number>(0);\n\n  /** Number of items per page */\n  itemsPerPage = input<number>(10);\n\n  /** Current page number (1-based) */\n  currentPage = input<number>(1);\n\n  /** Pagination mode - 'block' or 'list' */\n  mode = input<PaginationMode>('list');\n\n  /** Title for the previous button */\n  previousTitle = input<string>('Previous');\n\n  /** Label for the previous button (additional context) */\n  previousLabel = input<string | null>(null);\n\n  /** Title for the next button */\n  nextTitle = input<string>('Next');\n\n  /** Label for the next button (additional context) */\n  nextLabel = input<string | null>(null);\n\n  /** Output event when a pagination item is clicked */\n  pageChange = output<number>();\n\n  /** Output event when the previous link is clicked */\n  previousClick = output<void>();\n\n  /** Output event when the next link is clicked */\n  nextClick = output<void>();\n\n  /** Counter for generating unique IDs */\n  private ellipsisCounter = 0;\n\n  /** Computed total number of pages */\n  totalPages = computed(() =>\n    Math.ceil(this.itemCount() / this.itemsPerPage()),\n  );\n\n  /** Computed flag for whether previous button should be shown */\n  hasPreviousPage = computed(() => this.currentPage() > 1);\n\n  /** Computed flag for whether next button should be shown */\n  hasNextPage = computed(() => this.currentPage() < this.totalPages());\n\n  /** Computed check if mode is block */\n  isBlockMode = computed(() => this.mode() === 'block');\n\n  /** Computed pagination items */\n  computedItems = computed(() => {\n    const totalPages = this.totalPages();\n    if (totalPages <= 0) {\n      return [];\n    }\n\n    // Simple case: 7 or fewer pages, show all\n    if (totalPages <= 7) {\n      return this.createSequentialItems(1, totalPages);\n    }\n\n    const currentPage = this.currentPage();\n    const items: PageItem[] = [];\n\n    // Always show first page\n    items.push(this.createPageItem(1));\n\n    // Complex case: more than 7 pages, show ellipses\n    if (currentPage <= 4) {\n      // Near the start: show 1 2 3 4 5 ... 100\n      items.push(...this.createSequentialItems(2, 5));\n      items.push(this.createEllipsisItem());\n      items.push(this.createPageItem(totalPages));\n    } else if (currentPage >= totalPages - 3) {\n      // Near the end: show 1 ... 96 97 98 99 100\n      items.push(this.createEllipsisItem());\n      items.push(...this.createSequentialItems(totalPages - 4, totalPages));\n    } else {\n      // In the middle: show 1 ... 49 50 51 ... 100\n      items.push(this.createEllipsisItem());\n      items.push(\n        ...this.createSequentialItems(currentPage - 1, currentPage + 1),\n      );\n      items.push(this.createEllipsisItem());\n      items.push(this.createPageItem(totalPages));\n    }\n\n    return items;\n  });\n\n  /**\n   * Handle page number click\n   */\n  onPageClick(item: PageItem): void {\n    if (!item.ellipsis && item.pageNumber) {\n      this.pageChange.emit(item.pageNumber);\n    }\n  }\n\n  /**\n   * Creates a page item for the specified page number\n   */\n  private createPageItem(pageNumber: number): PageItem {\n    return {\n      number: String(pageNumber),\n      current: pageNumber === this.currentPage(),\n      pageNumber: pageNumber,\n      id: `page-${pageNumber}`,\n    };\n  }\n\n  /**\n   * Creates an ellipsis item\n   */\n  private createEllipsisItem(): PageItem {\n    return {\n      number: '',\n      ellipsis: true,\n      id: `ellipsis-${++this.ellipsisCounter}`,\n    };\n  }\n\n  /**\n   * Creates an array of sequential page items\n   */\n  private createSequentialItems(start: number, end: number): PageItem[] {\n    const items: PageItem[] = [];\n    for (let i = start; i <= end; i++) {\n      items.push(this.createPageItem(i));\n    }\n    return items;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav class=\"govuk-pagination\" [class.govuk-pagination--block]=\"isBlockMode()\">\n  @if (hasPreviousPage()) {\n    <div class=\"govuk-pagination__prev\">\n      <a\n        class=\"govuk-link govuk-pagination__link\"\n        href=\"javascript:void(0)\"\n        rel=\"prev\"\n        (click)=\"$event.preventDefault(); previousClick.emit()\"\n      >\n        <svg\n          class=\"govuk-pagination__icon govuk-pagination__icon--prev\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          height=\"13\"\n          width=\"15\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          viewBox=\"0 0 15 13\"\n        >\n          <path\n            d=\"m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z\"\n          ></path>\n        </svg>\n        <span class=\"govuk-pagination__link-title\">\n          {{ previousTitle() }}<span class=\"govuk-visually-hidden\"> page</span>\n        </span>\n        @if (isBlockMode() && previousLabel()) {\n          <span class=\"govuk-pagination__link-label\">\n            {{ previousLabel() }}\n          </span>\n        }\n      </a>\n    </div>\n  }\n\n  @if (!isBlockMode()) {\n    @let items = computedItems();\n    @if (items && items.length > 0) {\n      <ul class=\"govuk-pagination__list\">\n        @for (item of items; track item.id) {\n          <li\n            class=\"govuk-pagination__item\"\n            [class.govuk-pagination__item--current]=\"item.current\"\n          >\n            @if (!item.ellipsis) {\n              <a\n                class=\"govuk-link govuk-pagination__link\"\n                href=\"javascript:void(0)\"\n                [attr.aria-label]=\"'Page ' + item.number\"\n                [attr.aria-current]=\"item.current ? 'page' : null\"\n                (click)=\"$event.preventDefault(); onPageClick(item)\"\n              >\n                {{ item.number }}\n              </a>\n            } @else {\n              <span class=\"govuk-pagination__ellipsis\">&hellip;</span>\n            }\n          </li>\n        }\n      </ul>\n    }\n  }\n\n  @if (hasNextPage()) {\n    <div class=\"govuk-pagination__next\">\n      <a\n        class=\"govuk-link govuk-pagination__link\"\n        href=\"javascript:void(0)\"\n        rel=\"next\"\n        (click)=\"$event.preventDefault(); nextClick.emit()\"\n      >\n        <span class=\"govuk-pagination__link-title\">\n          {{ nextTitle() }}<span class=\"govuk-visually-hidden\"> page</span>\n        </span>\n        @if (isBlockMode() && nextLabel()) {\n          <span class=\"govuk-pagination__link-label\">\n            {{ nextLabel() }}\n          </span>\n        }\n        <svg\n          class=\"govuk-pagination__icon govuk-pagination__icon--next\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          height=\"13\"\n          width=\"15\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          viewBox=\"0 0 15 13\"\n        >\n          <path\n            d=\"m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z\"\n          ></path>\n        </svg>\n      </a>\n    </div>\n  }\n</nav>\n"
        },
        {
            "name": "GovUKPanelComponent",
            "id": "component-GovUKPanelComponent-a3e9552d38bc49a7b2a2ab07ade3c1c0f1906002bedcd2be25bd37e551e03b33d1cffdca82161d05e56e328f70a748071ab35b612f52660405ec75ac0696fe67",
            "file": "libs/ngx-govuk-frontend/panel/src/lib/panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./panel.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-panel',\n  templateUrl: './panel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKPanelComponent {\n  title = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-panel govuk-panel--confirmation\">\n  <h1 class=\"govuk-panel__title\">\n    {{ title() }}\n  </h1>\n  <div class=\"govuk-panel__body\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "GovUKPasswordInputComponent",
            "id": "component-GovUKPasswordInputComponent-2f70af851bc2aaba8776e02ce44e06d6e43a0d493b0b026eda1fc247425ebb0455abacdb73c31a4ef8fd1d9549dfcff130540537b36a22ca9e64b3a2f307285e",
            "file": "libs/ngx-govuk-frontend/password-input/src/lib/password-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-password-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./password-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                },
                {
                    "name": "GovUKCommonFormInputDirective",
                    "inputs": [],
                    "outputs": []
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonFormInput",
                    "defaultValue": "inject(GovUKCommonFormInputDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isVisible",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "<p>Password input component implementing the GOV.UK Design System password input pattern.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-password-input inputId=&quot;password&quot; /&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nPassword input component implementing the GOV.UK Design System password input pattern.\n\n```html\n```html\n<ngx-govuk-password-input inputId=\"password\" />\n```\n```\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  GovUKCommonFormInputDirective,\n  ValueAccessorDirective,\n  injectNgControl,\n  inputCommonInputs,\n} from 'ngx-govuk-frontend/form-utils';\n\n/**\n * Password input component implementing the GOV.UK Design System password input pattern.\n *\n * @example\n * ```html\n * <ngx-govuk-password-input inputId=\"password\" />\n * ```\n *\n * @property {string} autocomplete - Optional. The HTML autocomplete attribute value. Defaults to 'off'.\n * @property {string} extraClasses - Optional. Additional CSS classes to apply to the input element.\n * @property {string} inputId - The ID attribute for the input element.\n */\n@Component({\n    selector: 'ngx-govuk-password-input',\n    imports: [NgClass, ReactiveFormsModule],\n    templateUrl: './password-input.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\nexport class GovUKPasswordInputComponent {\n  readonly ngControl = injectNgControl();\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\n\n  readonly isVisible = signal(false);\n\n  toggleVisibility() {\n    this.isVisible.set(!this.isVisible());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-input__wrapper govuk-password-input__wrapper\">\n  <input\n    class=\"govuk-input govuk-password-input__input\"\n    [class.govuk-input--error]=\"ngControl.touched && ngControl.errors\"\n    [ngClass]=\"commonFormInput.extraClasses()\"\n    [attr.type]=\"isVisible() ? 'text' : 'password'\"\n    [attr.id]=\"commonFormInput.inputId() ? commonFormInput.inputId() : null\"\n    [attr.autocomplete]=\"\n      commonFormInput.autocomplete() ? commonFormInput.autocomplete() : null\n    \"\n    [formControl]=\"ngControl.control\"\n  />\n  <button\n    type=\"button\"\n    class=\"govuk-button govuk-button--secondary govuk-password-input__toggle\"\n    (click)=\"toggleVisibility()\"\n  >\n    {{ isVisible() ? 'Hide' : 'Show' }}\n  </button>\n</div>\n"
        },
        {
            "name": "GovUKPhaseBannerComponent",
            "id": "component-GovUKPhaseBannerComponent-f2c86be3b845fea494754d87e5f378e5162050637759e9bc3a310d9d9abdcaadb775f67f95abb4743a631a3707973eed151250c5cf5a8da1ace893984fa1ad01",
            "file": "libs/ngx-govuk-frontend/phase-banner/src/lib/phase-banner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-phase-banner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./phase-banner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "phase",
                    "defaultValue": "input<GovUKPhase>('beta')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "TitleCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "GovUKTagComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { TitleCasePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { GovUKTagComponent } from 'ngx-govuk-frontend/tag';\n\nexport type GovUKPhase = 'alpha' | 'beta';\n\n@Component({\n    selector: 'ngx-govuk-phase-banner',\n    imports: [TitleCasePipe, GovUKTagComponent],\n    templateUrl: './phase-banner.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKPhaseBannerComponent {\n  phase = input<GovUKPhase>('beta');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-phase-banner\">\n  <p class=\"govuk-phase-banner__content\">\n    <ngx-govuk-tag extraClasses=\"govuk-phase-banner__content__tag\">{{\n      phase() | titlecase\n    }}</ngx-govuk-tag>\n    <span class=\"govuk-phase-banner__text\">\n      <ng-content></ng-content>\n    </span>\n  </p>\n</div>\n"
        },
        {
            "name": "GovUKRadioGroupComponent",
            "id": "component-GovUKRadioGroupComponent-0052f65864b0ce68db4c051167fcc567f95af2ed2a4ec98f849a43d1c7a4447c998b0479e4d86d3a110b0115b7c0ceb3976045c6267ec98d1286795824e01012",
            "file": "libs/ngx-govuk-frontend/radio/src/lib/radio-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-radio-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inline",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "options",
                    "defaultValue": "contentChildren(GovUKRadioOptionDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "small",
                    "defaultValue": "input(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n  input,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  injectNgControl,\n  ValueAccessorDirective,\n} from 'ngx-govuk-frontend/form-utils';\nimport { GovUKRadioOptionDirective } from './radio-option.directive';\n\n@Component({\n    selector: 'ngx-govuk-radio-group',\n    imports: [ReactiveFormsModule],\n    templateUrl: './radio-group.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [ValueAccessorDirective]\n})\nexport class GovUKRadioGroupComponent {\n  readonly ngControl = injectNgControl();\n  readonly options = contentChildren(GovUKRadioOptionDirective);\n\n  readonly small = input(false, { transform: booleanAttribute });\n  readonly inline = input(false, { transform: booleanAttribute });\n\n  setValue(value: string) {\n    if (this.ngControl.control.value !== value) {\n      this.ngControl.control.setValue(value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"govuk-radios\"\n  [class.govuk-radios--small]=\"small()\"\n  [class.govuk-radios--inline]=\"inline()\"\n>\n  @for (option of options(); track option.value) {\n    @if ($index > 0 && option.isDivided()) {\n      <div class=\"govuk-radios__divider\">Or</div>\n    }\n    <div class=\"govuk-radios__item\" (click)=\"setValue(option.value())\">\n      <input\n        class=\"govuk-radios__input\"\n        type=\"radio\"\n        [formControl]=\"ngControl.control\"\n        [value]=\"option.value()\"\n      />\n      <label class=\"govuk-label govuk-radios__label\">\n        {{ option.label() }}\n      </label>\n      @if (option.hint()) {\n        <div class=\"govuk-hint govuk-radios__hint\">\n          {{ option.hint() }}\n        </div>\n      }\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "GovUKSelectComponent",
            "id": "component-GovUKSelectComponent-21a282000d71b7f2a731c9a3a2b48349c7c8cd4ce6f713650bc112209f1eabef61d0ef95b25ef03b26db92b1b23c450f6ce3424cfa4a5d4f47bf00d5e44d5c14",
            "file": "libs/ngx-govuk-frontend/select/src/lib/select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                },
                {
                    "name": "GovUKCommonFormInputDirective",
                    "inputs": [],
                    "outputs": []
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonFormInput",
                    "defaultValue": "inject(GovUKCommonFormInputDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "options",
                    "defaultValue": "input.required<GovUKSelectOption[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  GovUKCommonFormInputDirective,\n  ValueAccessorDirective,\n  injectNgControl,\n  inputCommonInputs,\n} from 'ngx-govuk-frontend/form-utils';\n\nexport interface GovUKSelectOption {\n  label: string;\n  value: string;\n}\n\n@Component({\n    selector: 'ngx-govuk-select',\n    imports: [ReactiveFormsModule],\n    templateUrl: './select.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\nexport class GovUKSelectComponent {\n  readonly ngControl = injectNgControl();\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\n\n  readonly options = input.required<GovUKSelectOption[]>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<select\n  class=\"govuk-select\"\n  [class.govuk-select--error]=\"ngControl.touched && ngControl.errors\"\n  [formControl]=\"ngControl.control\"\n  [attr.id]=\"commonFormInput.inputId() ? commonFormInput.inputId() : null\"\n>\n  @for (option of options(); track option.value) {\n    <option [value]=\"option.value\">\n      {{ option.label }}\n    </option>\n  }\n</select>\n"
        },
        {
            "name": "GovUKServiceNavigationComponent",
            "id": "component-GovUKServiceNavigationComponent-d4f1acba8e772f961ac49b0dd4db3fff8a1a48a9205c4e429d6241e4811a8813e826a62d376fcae671bf39b8b64e2421fc5b9626c62e5f83ff1c84127dfd7a41",
            "file": "libs/ngx-govuk-frontend/service-navigation/src/lib/navigation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-service-navigation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "contentChildren(GovUKServiceNavigationItemDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n} from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { GovUKServiceNavigationItemDirective } from './item/navigation-item.directive';\n\n@Component({\n    selector: 'ngx-govuk-service-navigation',\n    imports: [RouterLink, RouterLinkActive],\n    templateUrl: './navigation.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKServiceNavigationComponent {\n  readonly items = contentChildren(GovUKServiceNavigationItemDirective);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-service-navigation\" data-module=\"govuk-service-navigation\">\n  <div class=\"govuk-width-container\">\n    <div class=\"govuk-service-navigation__container\">\n      <nav aria-label=\"Menu\" class=\"govuk-service-navigation__wrapper\">\n        <ul class=\"govuk-service-navigation__list\">\n          @for (item of items(); track $index) {\n            <li\n              class=\"govuk-service-navigation__item\"\n              routerLinkActive=\"govuk-service-navigation__item--active\"\n              [routerLinkActiveOptions]=\"{ exact: true }\"\n              #rla=\"routerLinkActive\"\n            >\n              <a\n                class=\"govuk-service-navigation__link\"\n                [attr.aria-current]=\"rla.isActive ? true : null\"\n                [routerLink]=\"item.link()\"\n              >\n                @if (rla.isActive) {\n                  <strong class=\"govuk-service-navigation__active-fallback\">{{\n                    item.label()\n                  }}</strong>\n                } @else {\n                  {{ item.label() }}\n                }\n              </a>\n            </li>\n          }\n        </ul>\n      </nav>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "GovUKSkipLinkComponent",
            "id": "component-GovUKSkipLinkComponent-492139ca743ac7be5cd61b58fd9ec21f51d3058d53141181f5b74943dc35e6a17fe728dddb2992be6f29c5a27d48d8dda5b070b991dd49b3b68b5a68f0c2c895",
            "file": "libs/ngx-govuk-frontend/skip-link/src/lib/skip-link.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-skip-link",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./skip-link.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "href",
                    "defaultValue": "input<string>('#content')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>A component that renders a GOV.UK skip link.</p>\n<p>This component implements the GOV.UK Design System skip link component.\nIt provides a way for keyboard users to bypass the top-level navigation links\nand jump to the main content on a page.</p>\n<p>The skip link component is visually hidden until a keyboard press activates it.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-skip-link href=&quot;#main-content&quot;&gt;Skip to main content&lt;/ngx-govuk-skip-link&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">\nSee {&#64;link https://design-system.service.gov.uk/components/skip-link/ GOV.UK Skip link}</code></pre></div>",
            "rawdescription": "\n\nA component that renders a GOV.UK skip link.\n\nThis component implements the GOV.UK Design System skip link component.\nIt provides a way for keyboard users to bypass the top-level navigation links\nand jump to the main content on a page.\n\nThe skip link component is visually hidden until a keyboard press activates it.\n\n```html\n```html\n<ngx-govuk-skip-link href=\"#main-content\">Skip to main content</ngx-govuk-skip-link>\n```\n```\n\nSee {@link https://design-system.service.gov.uk/components/skip-link/ GOV.UK Skip link}\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\r\n\r\n/**\r\n * A component that renders a GOV.UK skip link.\r\n *\r\n * This component implements the GOV.UK Design System skip link component.\r\n * It provides a way for keyboard users to bypass the top-level navigation links\r\n * and jump to the main content on a page.\r\n *\r\n * The skip link component is visually hidden until a keyboard press activates it.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-skip-link href=\"#main-content\">Skip to main content</ngx-govuk-skip-link>\r\n * ```\r\n *\r\n * @property {string} href - The target ID to skip to. Defaults to \"#content\" if not provided.\r\n *\r\n * @see {@link https://design-system.service.gov.uk/components/skip-link/ GOV.UK Skip link}\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-skip-link',\r\n  templateUrl: './skip-link.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSkipLinkComponent {\r\n  readonly href = input<string>('#content');\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<a class=\"govuk-skip-link\" [attr.href]=\"href()\" data-module=\"govuk-skip-link\"\r\n  ><ng-content>Skip to main content</ng-content></a\r\n>\r\n"
        },
        {
            "name": "GovUKSummaryListActionComponent",
            "id": "component-GovUKSummaryListActionComponent-d917a8d9db7be9037d2b73d05b997ea3f68a8b1b5091b49a1c8c2b1d26724cb8b11832af06b0dc6f4ab21526fd97e918643d93a9d4a63e62b0a54d72563e8fd4",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-action.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-summary-list-action",
            "styleUrls": [],
            "styles": [
                "\n      a {\n        cursor: pointer;\n      }\n    "
            ],
            "templateUrl": [
                "./summary-list-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The URL for the action link\nUse either href or routerLink</p>\n",
                    "line": 51,
                    "rawdescription": "\n\nThe URL for the action link\nUse either href or routerLink\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The Angular router link for the action\nUse either href or routerLink</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nThe Angular router link for the action\nUse either href or routerLink\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "visuallyHiddenText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional visually hidden text for improved accessibility\nThis is used to provide context for screen readers, e.g. &quot;Change name&quot;</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nOptional visually hidden text for improved accessibility\nThis is used to provide context for screen readers, e.g. \"Change name\"\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actionTemplate",
                    "defaultValue": "viewChild.required<TemplateRef<unknown>>('actionTemplate')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Template reference for the action\nThis is used by parent components to render the action link in the appropriate context\n(either directly or as part of a list)</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nTemplate reference for the action\nThis is used by parent components to render the action link in the appropriate context\n(either directly or as part of a list)\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The URL for the action link\nUse either href or routerLink</p>\n",
                    "line": 51,
                    "rawdescription": "\n\nThe URL for the action link\nUse either href or routerLink\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The Angular router link for the action\nUse either href or routerLink</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nThe Angular router link for the action\nUse either href or routerLink\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "visuallyHiddenText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional visually hidden text for improved accessibility\nThis is used to provide context for screen readers, e.g. &quot;Change name&quot;</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nOptional visually hidden text for improved accessibility\nThis is used to provide context for screen readers, e.g. \"Change name\"\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "<p>Component for an action link in a summary list item</p>\n<p>This component renders a link that can be used for actions like &quot;Change&quot; or &quot;Remove&quot;\nin a summary list item. The text for the action is provided via content projection.</p>\n<p>The component uses a view child to expose its template for use by parent components,\nallowing for flexible rendering in different contexts.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;name&quot;&gt;\n  Change\n&lt;/ngx-govuk-summary-list-action&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">With RouterLink:\n```html\n&lt;ngx-govuk-summary-list-action routerLink=&quot;/edit&quot; visuallyHiddenText=&quot;name&quot;&gt;\n  Change\n&lt;/ngx-govuk-summary-list-action&gt;</code></pre></div>",
            "rawdescription": "\n\nComponent for an action link in a summary list item\n\nThis component renders a link that can be used for actions like \"Change\" or \"Remove\"\nin a summary list item. The text for the action is provided via content projection.\n\nThe component uses a view child to expose its template for use by parent components,\nallowing for flexible rendering in different contexts.\n\n```html\n```html\n<ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"name\">\n  Change\n</ngx-govuk-summary-list-action>\n```\n```\nWith RouterLink:\n```html\n<ngx-govuk-summary-list-action routerLink=\"/edit\" visuallyHiddenText=\"name\">\n  Change\n</ngx-govuk-summary-list-action>\n```\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  TemplateRef,\r\n  input,\r\n  viewChild,\r\n} from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n/**\r\n * Component for an action link in a summary list item\r\n *\r\n * This component renders a link that can be used for actions like \"Change\" or \"Remove\"\r\n * in a summary list item. The text for the action is provided via content projection.\r\n *\r\n * The component uses a view child to expose its template for use by parent components,\r\n * allowing for flexible rendering in different contexts.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"name\">\r\n *   Change\r\n * </ngx-govuk-summary-list-action>\r\n * ```\r\n *\r\n * With RouterLink:\r\n * ```html\r\n * <ngx-govuk-summary-list-action routerLink=\"/edit\" visuallyHiddenText=\"name\">\r\n *   Change\r\n * </ngx-govuk-summary-list-action>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-summary-list-action',\r\n  templateUrl: './summary-list-action.component.html',\r\n  imports: [RouterLink],\r\n  styles: [\r\n    `\r\n      a {\r\n        cursor: pointer;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSummaryListActionComponent {\r\n  /**\r\n   * The URL for the action link\r\n   * Use either href or routerLink\r\n   */\r\n  readonly href = input<string>();\r\n\r\n  /**\r\n   * The Angular router link for the action\r\n   * Use either href or routerLink\r\n   */\r\n  readonly routerLink = input<string>();\r\n\r\n  /**\r\n   * Optional visually hidden text for improved accessibility\r\n   * This is used to provide context for screen readers, e.g. \"Change name\"\r\n   */\r\n  readonly visuallyHiddenText = input<string>();\r\n\r\n  /**\r\n   * Template reference for the action\r\n   * This is used by parent components to render the action link in the appropriate context\r\n   * (either directly or as part of a list)\r\n   */\r\n  readonly actionTemplate =\r\n    viewChild.required<TemplateRef<unknown>>('actionTemplate');\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      a {\n        cursor: pointer;\n      }\n    \n",
            "extends": [],
            "templateData": "<ng-template #actionTemplate>\r\n  <a\r\n    class=\"govuk-link\"\r\n    [attr.href]=\"href() ? href() : null\"\r\n    [routerLink]=\"routerLink()\"\r\n  >\r\n    <ng-content />\r\n    @if (visuallyHiddenText()) {\r\n      <span class=\"govuk-visually-hidden\"> {{ visuallyHiddenText() }}</span>\r\n    }\r\n  </a>\r\n</ng-template>\r\n"
        },
        {
            "name": "GovUKSummaryListActionsComponent",
            "id": "component-GovUKSummaryListActionsComponent-b809b496b268eb1590bc68da3a102dcd901d8e00df9fdd50db2811b1d51586d2e1aff61c639b34aa57138159689bac42a88be54e65d7f41af7d159aa791a9705",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-actions.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-summary-list-actions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./summary-list-actions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actions",
                    "defaultValue": "contentChildren(GovUKSummaryListActionComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all actions using signal-based query\nThis allows the component to collect all the action components and\nautomatically update when they change</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nQuery for all actions using signal-based query\nThis allows the component to collect all the action components and\nautomatically update when they change\n",
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "<p>Component for the actions container of a summary list item</p>\n<p>This component is used as a container for action links in a summary list item.\nIt will collect all the action components and render them appropriately using\ntheir templates. If there is more than one action, they will be rendered as a list\naccording to the GOV.UK Design System specifications.</p>\n<p>The component uses a signal-based query to efficiently track and render child\naction components without manual subscription management.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-summary-list-actions&gt;\n  &lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;name&quot;&gt;\n    Change\n  &lt;/ngx-govuk-summary-list-action&gt;\n&lt;/ngx-govuk-summary-list-actions&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">With multiple actions:\n```html\n&lt;ngx-govuk-summary-list-actions&gt;\n  &lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;contact details&quot;&gt;\n    Change\n  &lt;/ngx-govuk-summary-list-action&gt;\n  &lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;contact details&quot;&gt;\n    Remove\n  &lt;/ngx-govuk-summary-list-action&gt;\n&lt;/ngx-govuk-summary-list-actions&gt;</code></pre></div>",
            "rawdescription": "\n\nComponent for the actions container of a summary list item\n\nThis component is used as a container for action links in a summary list item.\nIt will collect all the action components and render them appropriately using\ntheir templates. If there is more than one action, they will be rendered as a list\naccording to the GOV.UK Design System specifications.\n\nThe component uses a signal-based query to efficiently track and render child\naction components without manual subscription management.\n\n```html\n```html\n<ngx-govuk-summary-list-actions>\n  <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"name\">\n    Change\n  </ngx-govuk-summary-list-action>\n</ngx-govuk-summary-list-actions>\n```\n```\nWith multiple actions:\n```html\n<ngx-govuk-summary-list-actions>\n  <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"contact details\">\n    Change\n  </ngx-govuk-summary-list-action>\n  <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"contact details\">\n    Remove\n  </ngx-govuk-summary-list-action>\n</ngx-govuk-summary-list-actions>\n```\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  contentChildren,\r\n} from '@angular/core';\r\nimport { GovUKSummaryListActionComponent } from './summary-list-action.component';\r\n\r\n/**\r\n * Component for the actions container of a summary list item\r\n *\r\n * This component is used as a container for action links in a summary list item.\r\n * It will collect all the action components and render them appropriately using\r\n * their templates. If there is more than one action, they will be rendered as a list\r\n * according to the GOV.UK Design System specifications.\r\n *\r\n * The component uses a signal-based query to efficiently track and render child\r\n * action components without manual subscription management.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-summary-list-actions>\r\n *   <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"name\">\r\n *     Change\r\n *   </ngx-govuk-summary-list-action>\r\n * </ngx-govuk-summary-list-actions>\r\n * ```\r\n *\r\n * With multiple actions:\r\n * ```html\r\n * <ngx-govuk-summary-list-actions>\r\n *   <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"contact details\">\r\n *     Change\r\n *   </ngx-govuk-summary-list-action>\r\n *   <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"contact details\">\r\n *     Remove\r\n *   </ngx-govuk-summary-list-action>\r\n * </ngx-govuk-summary-list-actions>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-summary-list-actions',\r\n  imports: [NgTemplateOutlet],\r\n  templateUrl: './summary-list-actions.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSummaryListActionsComponent {\r\n  /**\r\n   * Query for all actions using signal-based query\r\n   * This allows the component to collect all the action components and\r\n   * automatically update when they change\r\n   */\r\n  readonly actions = contentChildren(GovUKSummaryListActionComponent);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (actions().length === 1) {\r\n  <ng-template [ngTemplateOutlet]=\"actions()[0].actionTemplate()\" />\r\n} @else if (actions().length > 1) {\r\n  <ul class=\"govuk-summary-list__actions-list\">\r\n    @for (action of actions(); track action) {\r\n      <li class=\"govuk-summary-list__actions-list-item\">\r\n        <ng-template [ngTemplateOutlet]=\"action.actionTemplate()\" />\r\n      </li>\r\n    }\r\n  </ul>\r\n}\r\n"
        },
        {
            "name": "GovUKSummaryListCardActionsComponent",
            "id": "component-GovUKSummaryListCardActionsComponent-fe2a1b2989dee5fcfba47227eeef565683a121ab2f3742940a97bdd4bc4f6a7fd52d80523fc9611939a932695bca56d8cddeac014c462f010ba8aed5ed395cfe",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-card-actions.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-summary-list-card-actions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./summary-list-card-actions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actions",
                    "defaultValue": "contentChildren(GovUKSummaryListActionComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all actions using signal-based query\nThis allows the component to collect all the action components and\nmake them available to the parent card component for rendering</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nQuery for all actions using signal-based query\nThis allows the component to collect all the action components and\nmake them available to the parent card component for rendering\n",
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Component for actions in a summary list card</p>\n<p>This component is used as a container for action links in a summary list card header.\nIt projects the action components directly but also collects them using a signal-based\nquery to make them available to the parent card component for rendering in the card header.</p>\n<p>The signal-based query ensures that the parent component always has an up-to-date list\nof actions without requiring manual subscription management.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-summary-list-card-actions&gt;\n  &lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;of University of Gloucestershire&quot;&gt;\n    Delete choice\n  &lt;/ngx-govuk-summary-list-action&gt;\n  &lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;from University of Gloucestershire&quot;&gt;\n    Withdraw\n  &lt;/ngx-govuk-summary-list-action&gt;\n&lt;/ngx-govuk-summary-list-card-actions&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nComponent for actions in a summary list card\n\nThis component is used as a container for action links in a summary list card header.\nIt projects the action components directly but also collects them using a signal-based\nquery to make them available to the parent card component for rendering in the card header.\n\nThe signal-based query ensures that the parent component always has an up-to-date list\nof actions without requiring manual subscription management.\n\n```html\n```html\n<ngx-govuk-summary-list-card-actions>\n  <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"of University of Gloucestershire\">\n    Delete choice\n  </ngx-govuk-summary-list-action>\n  <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"from University of Gloucestershire\">\n    Withdraw\n  </ngx-govuk-summary-list-action>\n</ngx-govuk-summary-list-card-actions>\n```\n```",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  contentChildren,\r\n} from '@angular/core';\r\nimport { GovUKSummaryListActionComponent } from './summary-list-action.component';\r\n\r\n/**\r\n * Component for actions in a summary list card\r\n *\r\n * This component is used as a container for action links in a summary list card header.\r\n * It projects the action components directly but also collects them using a signal-based\r\n * query to make them available to the parent card component for rendering in the card header.\r\n *\r\n * The signal-based query ensures that the parent component always has an up-to-date list\r\n * of actions without requiring manual subscription management.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-summary-list-card-actions>\r\n *   <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"of University of Gloucestershire\">\r\n *     Delete choice\r\n *   </ngx-govuk-summary-list-action>\r\n *   <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"from University of Gloucestershire\">\r\n *     Withdraw\r\n *   </ngx-govuk-summary-list-action>\r\n * </ngx-govuk-summary-list-card-actions>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-summary-list-card-actions',\r\n  templateUrl: './summary-list-card-actions.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSummaryListCardActionsComponent {\r\n  /**\r\n   * Query for all actions using signal-based query\r\n   * This allows the component to collect all the action components and\r\n   * make them available to the parent card component for rendering\r\n   */\r\n  readonly actions = contentChildren(GovUKSummaryListActionComponent);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content select=\"ngx-govuk-summary-list-action\" />\r\n"
        },
        {
            "name": "GovUKSummaryListCardComponent",
            "id": "component-GovUKSummaryListCardComponent-a572592e5968884dd9dcd60f6c8a10416cb5539c3905a13aa94da7f7c9a92692ea2fc6690b72455180d1b957e3c2660d3657c2aa8492ea33414d0f6be61f66c3",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-summary-list-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./summary-list-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The title to display in the card header\nRequired for all summary cards</p>\n",
                    "line": 46,
                    "rawdescription": "\n\nThe title to display in the card header\nRequired for all summary cards\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardActions",
                    "defaultValue": "contentChild(GovUKSummaryListCardActionsComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Reference to the actions component if provided\nUses signal-based content query to automatically update\nwhen the content changes</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nReference to the actions component if provided\nUses signal-based content query to automatically update\nwhen the content changes\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The title to display in the card header\nRequired for all summary cards</p>\n",
                    "line": 46,
                    "rawdescription": "\n\nThe title to display in the card header\nRequired for all summary cards\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "<p>Component for displaying a summary list in a card format</p>\n<p>This component wraps a summary list in a card with a title and optional actions.\nIt implements the GOV.UK summary card component according to the design system.</p>\n<p>When actions are provided via a GovUKSummaryListCardActionsComponent, they are\nrendered in the card header. The component uses a signal-based query to access\nthe action components and their templates for rendering.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-summary-list-card title=&quot;University of Gloucestershire&quot;&gt;\n  &lt;ngx-govuk-summary-list-card-actions&gt;\n    &lt;ngx-govuk-summary-list-action href=&quot;#&quot; visuallyHiddenText=&quot;of University of Gloucestershire&quot;&gt;\n      Delete choice\n    &lt;/ngx-govuk-summary-list-action&gt;\n  &lt;/ngx-govuk-summary-list-card-actions&gt;\n  &lt;ngx-govuk-summary-list&gt;\n    &lt;ngx-govuk-summary-list-item key=&quot;Course&quot; value=&quot;English (3DMD)&quot;&gt;&lt;/ngx-govuk-summary-list-item&gt;\n    &lt;ngx-govuk-summary-list-item key=&quot;Location&quot; value=&quot;School name, Road, City, SW1 1AA&quot;&gt;&lt;/ngx-govuk-summary-list-item&gt;\n  &lt;/ngx-govuk-summary-list&gt;\n&lt;/ngx-govuk-summary-list-card&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nComponent for displaying a summary list in a card format\n\nThis component wraps a summary list in a card with a title and optional actions.\nIt implements the GOV.UK summary card component according to the design system.\n\nWhen actions are provided via a GovUKSummaryListCardActionsComponent, they are\nrendered in the card header. The component uses a signal-based query to access\nthe action components and their templates for rendering.\n\n```html\n```html\n<ngx-govuk-summary-list-card title=\"University of Gloucestershire\">\n  <ngx-govuk-summary-list-card-actions>\n    <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"of University of Gloucestershire\">\n      Delete choice\n    </ngx-govuk-summary-list-action>\n  </ngx-govuk-summary-list-card-actions>\n  <ngx-govuk-summary-list>\n    <ngx-govuk-summary-list-item key=\"Course\" value=\"English (3DMD)\"></ngx-govuk-summary-list-item>\n    <ngx-govuk-summary-list-item key=\"Location\" value=\"School name, Road, City, SW1 1AA\"></ngx-govuk-summary-list-item>\n  </ngx-govuk-summary-list>\n</ngx-govuk-summary-list-card>\n```\n```",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  contentChild,\r\n  input,\r\n} from '@angular/core';\r\nimport { GovUKSummaryListCardActionsComponent } from './summary-list-card-actions.component';\r\n\r\n/**\r\n * Component for displaying a summary list in a card format\r\n *\r\n * This component wraps a summary list in a card with a title and optional actions.\r\n * It implements the GOV.UK summary card component according to the design system.\r\n *\r\n * When actions are provided via a GovUKSummaryListCardActionsComponent, they are\r\n * rendered in the card header. The component uses a signal-based query to access\r\n * the action components and their templates for rendering.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-summary-list-card title=\"University of Gloucestershire\">\r\n *   <ngx-govuk-summary-list-card-actions>\r\n *     <ngx-govuk-summary-list-action href=\"#\" visuallyHiddenText=\"of University of Gloucestershire\">\r\n *       Delete choice\r\n *     </ngx-govuk-summary-list-action>\r\n *   </ngx-govuk-summary-list-card-actions>\r\n *   <ngx-govuk-summary-list>\r\n *     <ngx-govuk-summary-list-item key=\"Course\" value=\"English (3DMD)\"></ngx-govuk-summary-list-item>\r\n *     <ngx-govuk-summary-list-item key=\"Location\" value=\"School name, Road, City, SW1 1AA\"></ngx-govuk-summary-list-item>\r\n *   </ngx-govuk-summary-list>\r\n * </ngx-govuk-summary-list-card>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-summary-list-card',\r\n  imports: [NgTemplateOutlet],\r\n  templateUrl: './summary-list-card.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSummaryListCardComponent {\r\n  /**\r\n   * The title to display in the card header\r\n   * Required for all summary cards\r\n   */\r\n  readonly title = input.required<string>();\r\n\r\n  /**\r\n   * Reference to the actions component if provided\r\n   * Uses signal-based content query to automatically update\r\n   * when the content changes\r\n   */\r\n  readonly cardActions = contentChild(GovUKSummaryListCardActionsComponent);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-summary-card\">\r\n  <div class=\"govuk-summary-card__title-wrapper\">\r\n    <h2 class=\"govuk-summary-card__title\">{{ title() }}</h2>\r\n    @if (cardActions()) {\r\n      <ul class=\"govuk-summary-card__actions\">\r\n        @for (action of cardActions()?.actions(); track action) {\r\n          <li class=\"govuk-summary-card__action\">\r\n            <ng-template [ngTemplateOutlet]=\"action.actionTemplate()\" />\r\n          </li>\r\n        }\r\n      </ul>\r\n    }\r\n  </div>\r\n  <div class=\"govuk-summary-card__content\">\r\n    <ng-content select=\"ngx-govuk-summary-list\" />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "GovUKSummaryListComponent",
            "id": "component-GovUKSummaryListComponent-18ef59f77c5d799d241514fd97ae276e44b962cc6ab98bd4c8dbc8d13c6c3aef50788b659adf4d0cd1ed7c61d9aa9a68aa1e0624d437e2a6b1bf32cb2118790a",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-summary-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./summary-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "noBorder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Whether to render the summary list without a border</p>\n",
                    "line": 55,
                    "rawdescription": "\n\nWhether to render the summary list without a border\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "listItems",
                    "defaultValue": "contentChildren(GovUKSummaryListItemComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all summary list items using signal-based query</p>\n",
                    "line": 60,
                    "rawdescription": "\n\nQuery for all summary list items using signal-based query\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "noBorder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Whether to render the summary list without a border</p>\n",
                    "line": 55,
                    "rawdescription": "\n\nWhether to render the summary list without a border\n",
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "<p>Component for displaying a GOV.UK summary list</p>\n<p>A summary list is used to summarize information, for example, a user&#39;s responses\nat the end of a form.</p>\n<p>This component implements the GOV.UK summary list component.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-summary-list&gt;\n  &lt;ngx-govuk-summary-list-item key=&quot;Name&quot;&gt;\n    &lt;ng-template ngxGovUkSummaryListValue&gt;\n      Sarah Philips\n    &lt;/ng-template&gt;\n    &lt;ngx-govuk-summary-list-actions&gt;\n      &lt;ngx-govuk-summary-list-action href=&quot;#&quot; text=&quot;Change&quot; visuallyHiddenText=&quot;name&quot;&gt;&lt;/ngx-govuk-summary-list-action&gt;\n    &lt;/ngx-govuk-summary-list-actions&gt;\n  &lt;/ngx-govuk-summary-list-item&gt;\n&lt;/ngx-govuk-summary-list&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">With card:\n```html\n&lt;ngx-govuk-summary-list-card title=&quot;University of Gloucestershire&quot;&gt;\n  &lt;ngx-govuk-summary-list-card-actions&gt;\n    &lt;ngx-govuk-summary-list-action href=&quot;#&quot; text=&quot;Delete choice&quot; visuallyHiddenText=&quot;of University of Gloucestershire&quot;&gt;&lt;/ngx-govuk-summary-list-action&gt;\n  &lt;/ngx-govuk-summary-list-card-actions&gt;\n  &lt;ngx-govuk-summary-list&gt;\n    &lt;ngx-govuk-summary-list-item key=&quot;Course&quot; value=&quot;English (3DMD)&quot;&gt;&lt;/ngx-govuk-summary-list-item&gt;\n    &lt;ngx-govuk-summary-list-item key=&quot;Location&quot; value=&quot;School name, Road, City, SW1 1AA&quot;&gt;&lt;/ngx-govuk-summary-list-item&gt;\n  &lt;/ngx-govuk-summary-list&gt;\n&lt;/ngx-govuk-summary-list-card&gt;</code></pre></div>",
            "rawdescription": "\n\nComponent for displaying a GOV.UK summary list\n\nA summary list is used to summarize information, for example, a user's responses\nat the end of a form.\n\nThis component implements the GOV.UK summary list component.\n\n```html\n```html\n<ngx-govuk-summary-list>\n  <ngx-govuk-summary-list-item key=\"Name\">\n    <ng-template ngxGovUkSummaryListValue>\n      Sarah Philips\n    </ng-template>\n    <ngx-govuk-summary-list-actions>\n      <ngx-govuk-summary-list-action href=\"#\" text=\"Change\" visuallyHiddenText=\"name\"></ngx-govuk-summary-list-action>\n    </ngx-govuk-summary-list-actions>\n  </ngx-govuk-summary-list-item>\n</ngx-govuk-summary-list>\n```\n```\nWith card:\n```html\n<ngx-govuk-summary-list-card title=\"University of Gloucestershire\">\n  <ngx-govuk-summary-list-card-actions>\n    <ngx-govuk-summary-list-action href=\"#\" text=\"Delete choice\" visuallyHiddenText=\"of University of Gloucestershire\"></ngx-govuk-summary-list-action>\n  </ngx-govuk-summary-list-card-actions>\n  <ngx-govuk-summary-list>\n    <ngx-govuk-summary-list-item key=\"Course\" value=\"English (3DMD)\"></ngx-govuk-summary-list-item>\n    <ngx-govuk-summary-list-item key=\"Location\" value=\"School name, Road, City, SW1 1AA\"></ngx-govuk-summary-list-item>\n  </ngx-govuk-summary-list>\n</ngx-govuk-summary-list-card>\n```\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  contentChildren,\r\n  input,\r\n} from '@angular/core';\r\nimport { GovUKSummaryListItemComponent } from './summary-list-item.component';\r\n\r\n/**\r\n * Component for displaying a GOV.UK summary list\r\n *\r\n * A summary list is used to summarize information, for example, a user's responses\r\n * at the end of a form.\r\n *\r\n * This component implements the GOV.UK summary list component.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-summary-list>\r\n *   <ngx-govuk-summary-list-item key=\"Name\">\r\n *     <ng-template ngxGovUkSummaryListValue>\r\n *       Sarah Philips\r\n *     </ng-template>\r\n *     <ngx-govuk-summary-list-actions>\r\n *       <ngx-govuk-summary-list-action href=\"#\" text=\"Change\" visuallyHiddenText=\"name\"></ngx-govuk-summary-list-action>\r\n *     </ngx-govuk-summary-list-actions>\r\n *   </ngx-govuk-summary-list-item>\r\n * </ngx-govuk-summary-list>\r\n * ```\r\n *\r\n * With card:\r\n * ```html\r\n * <ngx-govuk-summary-list-card title=\"University of Gloucestershire\">\r\n *   <ngx-govuk-summary-list-card-actions>\r\n *     <ngx-govuk-summary-list-action href=\"#\" text=\"Delete choice\" visuallyHiddenText=\"of University of Gloucestershire\"></ngx-govuk-summary-list-action>\r\n *   </ngx-govuk-summary-list-card-actions>\r\n *   <ngx-govuk-summary-list>\r\n *     <ngx-govuk-summary-list-item key=\"Course\" value=\"English (3DMD)\"></ngx-govuk-summary-list-item>\r\n *     <ngx-govuk-summary-list-item key=\"Location\" value=\"School name, Road, City, SW1 1AA\"></ngx-govuk-summary-list-item>\r\n *   </ngx-govuk-summary-list>\r\n * </ngx-govuk-summary-list-card>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-summary-list',\r\n  imports: [NgTemplateOutlet],\r\n  templateUrl: './summary-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSummaryListComponent {\r\n  /**\r\n   * Whether to render the summary list without a border\r\n   */\r\n  readonly noBorder = input<boolean>(false);\r\n\r\n  /**\r\n   * Query for all summary list items using signal-based query\r\n   */\r\n  readonly listItems = contentChildren(GovUKSummaryListItemComponent);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<dl\r\n  class=\"govuk-summary-list\"\r\n  [class.govuk-summary-list--no-border]=\"noBorder()\"\r\n>\r\n  @for (item of listItems(); track item) {\r\n    <ng-template [ngTemplateOutlet]=\"item.itemTemplate()\" />\r\n  }\r\n</dl>\r\n"
        },
        {
            "name": "GovUKSummaryListItemComponent",
            "id": "component-GovUKSummaryListItemComponent-f78b4d5bfeed841038f142fedb3f4b33be2c7836057fc0cd2201070f9099d7a9aea8042d8c1be5b992be1ede0aa73403f032d7e39be3f6e9b72e0e581d919160",
            "file": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-summary-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./summary-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The key to display in the summary list item\nRequired for all summary list items</p>\n",
                    "line": 42,
                    "rawdescription": "\n\nThe key to display in the summary list item\nRequired for all summary list items\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actions",
                    "defaultValue": "contentChild(GovUKSummaryListActionsComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Reference to the actions component if provided\nAllows for actions to be specified as content</p>\n",
                    "line": 60,
                    "rawdescription": "\n\nReference to the actions component if provided\nAllows for actions to be specified as content\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "itemTemplate",
                    "defaultValue": "viewChild.required<TemplateRef<unknown>>('itemTemplate')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Template reference for the summary list item\nThis is used by the parent component for rendering</p>\n",
                    "line": 66,
                    "rawdescription": "\n\nTemplate reference for the summary list item\nThis is used by the parent component for rendering\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>The key to display in the summary list item\nRequired for all summary list items</p>\n",
                    "line": 42,
                    "rawdescription": "\n\nThe key to display in the summary list item\nRequired for all summary list items\n",
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "value",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Optional simple text value to display\nOnly used if no value template is provided</p>\n",
                    "line": 48,
                    "rawdescription": "\n\nOptional simple text value to display\nOnly used if no value template is provided\n",
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "valueTemplate",
                    "defaultValue": "contentChild(GovUKSummaryListValueDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Reference to the value directive if provided\nAllows for complex HTML content in the value</p>\n",
                    "line": 54,
                    "rawdescription": "\n\nReference to the value directive if provided\nAllows for complex HTML content in the value\n",
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "<p>Component for an individual item in a summary list</p>\n<p>This component represents a single row in a summary list with a key, value, and optional actions.\nThe value and actions can be either provided as inputs or as content via directives.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-summary-list-item key=&quot;Name&quot;&gt;\n  &lt;ng-template ngxGovUkSummaryListValue&gt;\n    Sarah Philips\n  &lt;/ng-template&gt;\n  &lt;ngx-govuk-summary-list-actions&gt;\n    &lt;ngx-govuk-summary-list-action href=&quot;#&quot; text=&quot;Change&quot; visuallyHiddenText=&quot;name&quot;&gt;&lt;/ngx-govuk-summary-list-action&gt;\n  &lt;/ngx-govuk-summary-list-actions&gt;\n&lt;/ngx-govuk-summary-list-item&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nComponent for an individual item in a summary list\n\nThis component represents a single row in a summary list with a key, value, and optional actions.\nThe value and actions can be either provided as inputs or as content via directives.\n\n```html\n```html\n<ngx-govuk-summary-list-item key=\"Name\">\n  <ng-template ngxGovUkSummaryListValue>\n    Sarah Philips\n  </ng-template>\n  <ngx-govuk-summary-list-actions>\n    <ngx-govuk-summary-list-action href=\"#\" text=\"Change\" visuallyHiddenText=\"name\"></ngx-govuk-summary-list-action>\n  </ngx-govuk-summary-list-actions>\n</ngx-govuk-summary-list-item>\n```\n```",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  TemplateRef,\r\n  contentChild,\r\n  input,\r\n  viewChild,\r\n} from '@angular/core';\r\nimport { GovUKSummaryListActionsComponent } from './summary-list-actions.component';\r\nimport { GovUKSummaryListValueDirective } from './summary-list-value.directive';\r\n\r\n/**\r\n * Component for an individual item in a summary list\r\n *\r\n * This component represents a single row in a summary list with a key, value, and optional actions.\r\n * The value and actions can be either provided as inputs or as content via directives.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-summary-list-item key=\"Name\">\r\n *   <ng-template ngxGovUkSummaryListValue>\r\n *     Sarah Philips\r\n *   </ng-template>\r\n *   <ngx-govuk-summary-list-actions>\r\n *     <ngx-govuk-summary-list-action href=\"#\" text=\"Change\" visuallyHiddenText=\"name\"></ngx-govuk-summary-list-action>\r\n *   </ngx-govuk-summary-list-actions>\r\n * </ngx-govuk-summary-list-item>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngx-govuk-summary-list-item',\r\n  imports: [NgTemplateOutlet],\r\n  templateUrl: './summary-list-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKSummaryListItemComponent {\r\n  /**\r\n   * The key to display in the summary list item\r\n   * Required for all summary list items\r\n   */\r\n  readonly key = input.required<string>();\r\n\r\n  /**\r\n   * Optional simple text value to display\r\n   * Only used if no value template is provided\r\n   */\r\n  readonly value = input<string>('');\r\n\r\n  /**\r\n   * Reference to the value directive if provided\r\n   * Allows for complex HTML content in the value\r\n   */\r\n  readonly valueTemplate = contentChild(GovUKSummaryListValueDirective);\r\n\r\n  /**\r\n   * Reference to the actions component if provided\r\n   * Allows for actions to be specified as content\r\n   */\r\n  readonly actions = contentChild(GovUKSummaryListActionsComponent);\r\n\r\n  /**\r\n   * Template reference for the summary list item\r\n   * This is used by the parent component for rendering\r\n   */\r\n  readonly itemTemplate =\r\n    viewChild.required<TemplateRef<unknown>>('itemTemplate');\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-template #itemTemplate>\r\n  <div\r\n    class=\"govuk-summary-list__row\"\r\n    [class.govuk-summary-list__row--no-actions]=\"!actions()\"\r\n  >\r\n    <dt class=\"govuk-summary-list__key\">\r\n      {{ key() }}\r\n    </dt>\r\n    <dd class=\"govuk-summary-list__value\">\r\n      @let valueTpl = valueTemplate();\r\n      @if (valueTpl) {\r\n        @if (valueTpl.templateRef) {\r\n          <ng-template [ngTemplateOutlet]=\"valueTpl.templateRef\" />\r\n        }\r\n      } @else {\r\n        {{ value() }}\r\n      }\r\n    </dd>\r\n    @if (actions()) {\r\n      <dd class=\"govuk-summary-list__actions\">\r\n        <ng-content select=\"ngx-govuk-summary-list-actions\" />\r\n      </dd>\r\n    }\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "GovUKTabComponent",
            "id": "component-GovUKTabComponent-3c026f8e4b3e8fdbb51fefce6d58eb689429f70f549f6560154b5c1bcd0b6d7970d503ab2091ca5357ab38362e5365c117ab0f4bdbb47525c71a1a0fe0fba8ab",
            "file": "libs/ngx-govuk-frontend/tabs/src/lib/tab/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-tab",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "tabContent",
                    "defaultValue": "viewChild.required<TemplateRef<unknown>>('tabContent')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  TemplateRef,\n  viewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-tab',\n  templateUrl: './tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKTabComponent {\n  readonly id = input.required<string>();\n  readonly title = input.required<string>();\n\n  readonly tabContent = viewChild.required<TemplateRef<unknown>>('tabContent');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-template #tabContent><ng-content /></ng-template>\n"
        },
        {
            "name": "GovUKTableComponent",
            "id": "component-GovUKTableComponent-d75f5626615d86cda3cad3a6c83ce2b5a2b5295358b85754c236fad9aca8beaab4bc1c7ee18995f5bc7f1ddb70ab1e60a3cc633b4a4dade9e3d8426dfbb1ed82",
            "file": "libs/ngx-govuk-frontend/table/src/lib/table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "caption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "small",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "caption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "columnKeys",
                    "defaultValue": "computed(() =>\n    this.columns().map((column) => column.key),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "columns",
                    "defaultValue": "input.required<GovUKTableColumn[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "input.required<unknown[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "small",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CdkTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkTableModule } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n} from '@angular/core';\n\nexport type GovUKTableColumn = {\n  header: string;\n  key: string;\n  isRowHeader?: boolean;\n  isNumeric?: boolean;\n  customClass?: string;\n};\n\n@Component({\n    selector: 'ngx-govuk-table',\n    imports: [CdkTableModule],\n    templateUrl: './table.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKTableComponent {\n  readonly columns = input.required<GovUKTableColumn[]>();\n  readonly dataSource = input.required<unknown[]>();\n\n  readonly caption = input<string>();\n  readonly small = input(false);\n\n  readonly columnKeys = computed(() =>\n    this.columns().map((column) => column.key),\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<table\n  cdk-table\n  [dataSource]=\"dataSource()\"\n  class=\"govuk-table\"\n  [class.govuk-table--small-text-until-tablet]=\"small()\"\n>\n  @if (caption()) {\n    <caption class=\"govuk-table__caption govuk-table__caption--m\">\n      {{\n        caption()\n      }}\n    </caption>\n  }\n\n  @for (column of columns(); track column.key) {\n    <ng-container [cdkColumnDef]=\"column.key\">\n      <th\n        cdk-header-cell\n        *cdkHeaderCellDef\n        class=\"govuk-table__header\"\n        [class.govuk-table__header--numeric]=\"column.isNumeric\"\n        [class]=\"column.customClass\"\n        scope=\"col\"\n      >\n        {{ column.header }}\n      </th>\n\n      <ng-container *cdkCellDef=\"let item\">\n        @if (column.isRowHeader) {\n          <th cdk-cell class=\"govuk-table__header\" scope=\"row\">\n            {{ item[column.key] }}\n          </th>\n        } @else {\n          <td\n            cdk-cell\n            class=\"govuk-table__cell\"\n            [class.govuk-table__cell--numeric]=\"column.isNumeric\"\n          >\n            {{ item[column.key] }}\n          </td>\n        }\n      </ng-container>\n    </ng-container>\n  }\n\n  <tr\n    cdk-header-row\n    *cdkHeaderRowDef=\"columnKeys()\"\n    class=\"govuk-table__row\"\n  ></tr>\n\n  <tr\n    cdk-row\n    *cdkRowDef=\"let row; columns: columnKeys()\"\n    class=\"govuk-table__row\"\n  ></tr>\n</table>\n"
        },
        {
            "name": "GovUKTabsComponent",
            "id": "component-GovUKTabsComponent-8a47d4d5a1733de528364223aa35989e0163a1cfe59e6d9a46e5e99a8cffd5ad67cc35fee59210a9a4cb0c2521274ced739f399fa1ebe23bbdbb04a3b6152ce5",
            "file": "libs/ngx-govuk-frontend/tabs/src/lib/tabs/tabs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-tabs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "tabs",
                    "defaultValue": "contentChildren(GovUKTabComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgTemplateOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n  input,\n  model,\n} from '@angular/core';\nimport { GovUKTabComponent } from '../tab/tab.component';\n\n@Component({\n    selector: 'ngx-govuk-tabs',\n    imports: [NgTemplateOutlet],\n    templateUrl: './tabs.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKTabsComponent {\n  readonly title = input.required<string>();\n\n  readonly tabs = contentChildren(GovUKTabComponent);\n\n  readonly activeTab = model(0);\n\n  selectTab(index: number, event: Event): void {\n    event.preventDefault();\n    this.activeTab.set(index);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-tabs\">\n  <h2 class=\"govuk-tabs__title\">Contents</h2>\n  <ul class=\"govuk-tabs__list\" role=\"tablist\">\n    @for (tab of tabs(); track tab.id) {\n      <li\n        class=\"govuk-tabs__list-item\"\n        [class.govuk-tabs__list-item--selected]=\"$index === activeTab()\"\n        role=\"presentation\"\n      >\n        <a\n          class=\"govuk-tabs__tab\"\n          (click)=\"selectTab($index, $event)\"\n          href=\"#\"\n          role=\"tab\"\n        >\n          {{ tab.title() }}\n        </a>\n      </li>\n    }\n  </ul>\n\n  @for (tab of tabs(); track tab.id) {\n    <div\n      class=\"govuk-tabs__panel\"\n      [class.govuk-tabs__panel--hidden]=\"$index !== activeTab()\"\n      role=\"tabpanel\"\n    >\n      <ng-container [ngTemplateOutlet]=\"tab.tabContent()\" />\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "GovUKTagComponent",
            "id": "component-GovUKTagComponent-eacb828e4b30e3a41b06646bee58cb825d7a5971a48544e3835f8f532ac00be1d6574b78d315fec2089faec4a077201853d3d6bda60f73ee174d0902bb5cfd14",
            "file": "libs/ngx-govuk-frontend/tag/src/lib/tag.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-tag",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "extraClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "computed(\n    () => `${this.colorClasses[this.color()]} ${this.extraClasses()}`\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "color",
                    "defaultValue": "input<GovUKTagColor>('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "colorClasses",
                    "defaultValue": "{\n    grey: 'govuk-tag--grey',\n    green: 'govuk-tag--green',\n    turquoise: 'govuk-tag--turquoise',\n    blue: 'govuk-tag--blue',\n    'light-blue': 'govuk-tag--light-blue',\n    purple: 'govuk-tag--purple',\n    pink: 'govuk-tag--pink',\n    red: 'govuk-tag--red',\n    orange: 'govuk-tag--orange',\n    yellow: 'govuk-tag--yellow',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<GovUKTagColor | string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "extraClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n} from '@angular/core';\n\nexport type GovUKTagColor =\n  | 'grey'\n  | 'green'\n  | 'turquoise'\n  | 'blue'\n  | 'light-blue'\n  | 'purple'\n  | 'pink'\n  | 'red'\n  | 'orange'\n  | 'yellow';\n\n@Component({\n    selector: 'ngx-govuk-tag',\n    imports: [NgClass],\n    templateUrl: './tag.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GovUKTagComponent {\n  color = input<GovUKTagColor>('blue');\n  extraClasses = input<string>();\n\n  readonly classes = computed(\n    () => `${this.colorClasses[this.color()]} ${this.extraClasses()}`\n  );\n\n  private readonly colorClasses: Record<GovUKTagColor, string> = {\n    grey: 'govuk-tag--grey',\n    green: 'govuk-tag--green',\n    turquoise: 'govuk-tag--turquoise',\n    blue: 'govuk-tag--blue',\n    'light-blue': 'govuk-tag--light-blue',\n    purple: 'govuk-tag--purple',\n    pink: 'govuk-tag--pink',\n    red: 'govuk-tag--red',\n    orange: 'govuk-tag--orange',\n    yellow: 'govuk-tag--yellow',\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<strong class=\"govuk-tag\" [ngClass]=\"classes()\">\n  <ng-content></ng-content>\n</strong>\n"
        },
        {
            "name": "GovUKTaskListComponent",
            "id": "component-GovUKTaskListComponent-619ec9e186c2b5bbfa6498295d53f15ce9323f64198afaf42ebeff26df9598b89e59360ffef084d36af32bdd63bf07a0d28a8d161da9ec2aada2abff7a66db09",
            "file": "libs/ngx-govuk-frontend/task-list/src/lib/task-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-task-list",
            "styleUrls": [],
            "styles": [
                "\n      a {\n        cursor: pointer;\n      }\n    "
            ],
            "templateUrl": [
                "./task-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "taskItems",
                    "defaultValue": "contentChildren(GovUKTaskListItemDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Query for all task list item directives using signal-based query\nThis allows the component to iterate through the child task list items</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nQuery for all task list item directives using signal-based query\nThis allows the component to iterate through the child task list items\n",
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "GovUKTagComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "<p>Component for displaying a GOV.UK task list</p>\n<p>A task list helps users understand:</p>\n<ul>\n<li>the tasks they need to complete</li>\n<li>the order they need to complete tasks in</li>\n<li>when they have completed a task</li>\n</ul>\n<p>This component implements the GOV.UK task list pattern.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-task-list&gt;\n  &lt;ngx-govuk-task-list-item\n    [title]=&quot;&#39;Complete task&#39;&quot;\n    [href]=&quot;&#39;/task-url&#39;&quot;\n    [statusText]=&quot;&#39;Completed&#39;&quot;\n  &gt;&lt;/ngx-govuk-task-list-item&gt;\n&lt;/ngx-govuk-task-list&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nComponent for displaying a GOV.UK task list\n\nA task list helps users understand:\n- the tasks they need to complete\n- the order they need to complete tasks in\n- when they have completed a task\n\nThis component implements the GOV.UK task list pattern.\n\n```html\n```html\n<ngx-govuk-task-list>\n  <ngx-govuk-task-list-item\n    [title]=\"'Complete task'\"\n    [href]=\"'/task-url'\"\n    [statusText]=\"'Completed'\"\n  ></ngx-govuk-task-list-item>\n</ngx-govuk-task-list>\n```\n```",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  contentChildren,\r\n} from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { GovUKTagComponent } from 'ngx-govuk-frontend/tag';\r\nimport { GovUKTaskListItemDirective } from './task-list-item.directive';\r\n\r\n/**\r\n * Component for displaying a GOV.UK task list\r\n *\r\n * A task list helps users understand:\r\n * - the tasks they need to complete\r\n * - the order they need to complete tasks in\r\n * - when they have completed a task\r\n *\r\n * This component implements the GOV.UK task list pattern.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-task-list>\r\n *   <ngx-govuk-task-list-item\r\n *     [title]=\"'Complete task'\"\r\n *     [href]=\"'/task-url'\"\r\n *     [statusText]=\"'Completed'\"\r\n *   ></ngx-govuk-task-list-item>\r\n * </ngx-govuk-task-list>\r\n * ```\r\n */\r\n\r\n@Component({\r\n  selector: 'ngx-govuk-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  imports: [GovUKTagComponent, RouterLink],\r\n  styles: [\r\n    `\r\n      a {\r\n        cursor: pointer;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GovUKTaskListComponent {\r\n  /**\r\n   * Query for all task list item directives using signal-based query\r\n   * This allows the component to iterate through the child task list items\r\n   */\r\n  readonly taskItems = contentChildren(GovUKTaskListItemDirective);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      a {\n        cursor: pointer;\n      }\n    \n",
            "extends": [],
            "templateData": "<ul class=\"govuk-task-list\">\r\n  @for (item of taskItems(); track item) {\r\n    <li\r\n      class=\"govuk-task-list__item\"\r\n      [class.govuk-task-list__item--with-link]=\"!item.noLink()\"\r\n    >\r\n      <div class=\"govuk-task-list__name-and-hint\">\r\n        @if (item.noLink()) {\r\n          <span>{{ item.title() }}</span>\r\n        } @else {\r\n          <a\r\n            class=\"govuk-link govuk-task-list__link\"\r\n            [attr.href]=\"item.href() ? item.href() : null\"\r\n            [routerLink]=\"item.routerLink()\"\r\n          >\r\n            {{ item.title() }}\r\n          </a>\r\n        }\r\n\r\n        @if (item.hint()) {\r\n          <div class=\"govuk-task-list__hint\">\r\n            {{ item.hint() }}\r\n          </div>\r\n        }\r\n      </div>\r\n      <div class=\"govuk-task-list__status\">\r\n        @let tagColor = item.tagColor();\r\n        @if (tagColor) {\r\n          <ngx-govuk-tag [color]=\"tagColor\">\r\n            {{ item.statusText() }}\r\n          </ngx-govuk-tag>\r\n        } @else {\r\n          {{ item.statusText() }}\r\n        }\r\n      </div>\r\n    </li>\r\n  }\r\n</ul>\r\n"
        },
        {
            "name": "GovUKTextareaComponent",
            "id": "component-GovUKTextareaComponent-8d9c0c539556dc2efe53e7d2445584b0398483231d6b369b3b2cab5b21551a2c3d6a45875817680f1cff54266324548a4c34544f40347c7585da06f4fdb59d36",
            "file": "libs/ngx-govuk-frontend/textarea/src/lib/textarea.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                },
                {
                    "name": "GovUKCommonFormInputDirective",
                    "inputs": [],
                    "outputs": []
                }
            ],
            "inputsClass": [
                {
                    "name": "rows",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCharacterCount",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "characterCountMessage",
                    "defaultValue": "computed(() => {\r\n    const remaining = this.remainingCharacters();\r\n\r\n    if (this.maxLength() === null || remaining === null) {\r\n      return null;\r\n    }\r\n\r\n    if (remaining < 0) {\r\n      const overLimit = Math.abs(remaining);\r\n      return `You have ${overLimit} ${overLimit === 1 ? 'character' : 'characters'} too many`;\r\n    }\r\n\r\n    return `You have ${remaining} ${remaining === 1 ? 'character' : 'characters'} remaining`;\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "commonFormInput",
                    "defaultValue": "inject(GovUKCommonFormInputDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "currentLength",
                    "defaultValue": "signal(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "maxLength",
                    "defaultValue": "input<number | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "remainingCharacters",
                    "defaultValue": "computed(() => {\r\n    const maxLength = this.maxLength();\r\n    return maxLength === null ? null : maxLength - this.currentLength();\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "rows",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCharacterCount",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "<p>A textarea component that follows the GOV.UK Design System guidelines.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-textarea\n  formControlName=&quot;detail&quot;\n  inputId=&quot;detail&quot;\n  [rows]=&quot;5&quot;\n&gt;&lt;/ngx-govuk-textarea&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">```html\n```html\n&lt;ngx-govuk-textarea\n  formControlName=&quot;detail&quot;\n  inputId=&quot;detail&quot;\n  [rows]=&quot;5&quot;\n  [maxLength]=&quot;200&quot;\n  [showCharacterCount]=&quot;true&quot;\n&gt;&lt;/ngx-govuk-textarea&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nA textarea component that follows the GOV.UK Design System guidelines.\n\n```html\n```html\n<ngx-govuk-textarea\n  formControlName=\"detail\"\n  inputId=\"detail\"\n  [rows]=\"5\"\n></ngx-govuk-textarea>\n```\n```\n```html\n```html\n<ngx-govuk-textarea\n  formControlName=\"detail\"\n  inputId=\"detail\"\n  [rows]=\"5\"\n  [maxLength]=\"200\"\n  [showCharacterCount]=\"true\"\n></ngx-govuk-textarea>\n```\n```\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  DestroyRef,\r\n  inject,\r\n  input,\r\n  OnInit,\r\n  signal,\r\n  WritableSignal,\r\n} from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  GovUKCommonFormInputDirective,\r\n  injectNgControl,\r\n  inputCommonInputs,\r\n  ValueAccessorDirective,\r\n} from 'ngx-govuk-frontend/form-utils';\r\n\r\n/**\r\n * A textarea component that follows the GOV.UK Design System guidelines.\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-textarea\r\n *   formControlName=\"detail\"\r\n *   inputId=\"detail\"\r\n *   [rows]=\"5\"\r\n * ></ngx-govuk-textarea>\r\n * ```\r\n *\r\n * @example\r\n * ```html\r\n * <ngx-govuk-textarea\r\n *   formControlName=\"detail\"\r\n *   inputId=\"detail\"\r\n *   [rows]=\"5\"\r\n *   [maxLength]=\"200\"\r\n *   [showCharacterCount]=\"true\"\r\n * ></ngx-govuk-textarea>\r\n * ```\r\n *\r\n * @property {string} autocomplete - HTML autocomplete attribute value\r\n * @property {string} extraClasses - Additional CSS classes to apply to the textarea\r\n * @property {string} inputId - Required. The ID attribute for the input element.\r\n * @property {number} rows - Number of visible text rows for the textarea. Defaults to 2.\r\n * @property {number} maxLength - Optional. Maximum number of characters allowed in the textarea.\r\n * @property {boolean} showCharacterCount - Optional. Whether to show the character count. Defaults to false.\r\n */\r\n@Component({\n    selector: 'ngx-govuk-textarea',\n    imports: [NgClass, ReactiveFormsModule],\n    templateUrl: './textarea.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\r\nexport class GovUKTextareaComponent implements OnInit {\r\n  readonly ngControl = injectNgControl();\r\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\r\n\r\n  private readonly destroyRef = inject(DestroyRef);\r\n\r\n  readonly rows = input(2);\r\n  readonly maxLength = input<number | null>(null);\r\n  readonly showCharacterCount = input(false);\r\n\r\n  private readonly currentLength: WritableSignal<number> = signal(0);\r\n  private readonly remainingCharacters = computed(() => {\r\n    const maxLength = this.maxLength();\r\n    return maxLength === null ? null : maxLength - this.currentLength();\r\n  });\r\n\r\n  readonly characterCountMessage = computed(() => {\r\n    const remaining = this.remainingCharacters();\r\n\r\n    if (this.maxLength() === null || remaining === null) {\r\n      return null;\r\n    }\r\n\r\n    if (remaining < 0) {\r\n      const overLimit = Math.abs(remaining);\r\n      return `You have ${overLimit} ${overLimit === 1 ? 'character' : 'characters'} too many`;\r\n    }\r\n\r\n    return `You have ${remaining} ${remaining === 1 ? 'character' : 'characters'} remaining`;\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.ngControl.valueChanges\r\n      ?.pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe((value) => this.currentLength.set(value.length));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [class.govuk-character-count]=\"showCharacterCount()\">\r\n  <div class=\"govuk-input__wrapper\">\r\n    <textarea\r\n      class=\"govuk-textarea\"\r\n      [class.govuk-textarea--error]=\"ngControl.touched && ngControl.errors\"\r\n      [class.govuk-js-character-count]=\"showCharacterCount()\"\r\n      [ngClass]=\"commonFormInput.extraClasses()\"\r\n      [formControl]=\"ngControl.control\"\r\n      [attr.id]=\"commonFormInput.inputId() ? commonFormInput.inputId() : null\"\r\n      [attr.autocomplete]=\"\r\n        commonFormInput.autocomplete() ? commonFormInput.autocomplete() : null\r\n      \"\r\n      [attr.rows]=\"rows()\"\r\n      [attr.maxlength]=\"maxLength()\"\r\n      [attr.aria-describedby]=\"\r\n        showCharacterCount() && commonFormInput.inputId()\r\n          ? commonFormInput.inputId() + '-info'\r\n          : null\r\n      \"\r\n    ></textarea>\r\n  </div>\r\n\r\n  @if (showCharacterCount() && maxLength()) {\r\n    <div\r\n      [attr.id]=\"\r\n        commonFormInput.inputId() ? commonFormInput.inputId() + '-info' : null\r\n      \"\r\n      class=\"govuk-hint govuk-character-count__message\"\r\n      [attr.aria-live]=\"'polite'\"\r\n    >\r\n      {{ characterCountMessage() }}\r\n    </div>\r\n  }\r\n</div>\r\n"
        },
        {
            "name": "GovUKTextInputComponent",
            "id": "component-GovUKTextInputComponent-a554c2545848daca8eaa577e1c4935e87440d8b94b176581de9d892aa160b93b4a07a14c0a01b18ba9d0302ebc5dae1e1ae19cdf16cfa7160d3cdc9844804523",
            "file": "libs/ngx-govuk-frontend/text-input/src/lib/text-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-text-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "ValueAccessorDirective"
                },
                {
                    "name": "GovUKCommonFormInputDirective",
                    "inputs": [],
                    "outputs": []
                }
            ],
            "inputsClass": [
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonFormInput",
                    "defaultValue": "inject(GovUKCommonFormInputDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "ngControl",
                    "defaultValue": "injectNgControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "<p>A form input component that follows the GOV.UK Design System styling and behavior.</p>\n<p>This component provides a text input field with optional features like autocomplete, prefixes, and suffixes.\nIt integrates with Angular&#39;s form controls and supports accessibility features.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```html\n&lt;ngx-govuk-text-input\n  formControlName=&quot;firstName&quot;\n  inputId=&quot;first-name&quot;\n  autocomplete=&quot;given-name&quot;\n&gt;&lt;/ngx-govuk-text-input&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
            "rawdescription": "\n\nA form input component that follows the GOV.UK Design System styling and behavior.\n\nThis component provides a text input field with optional features like autocomplete, prefixes, and suffixes.\nIt integrates with Angular's form controls and supports accessibility features.\n\n```html\n```html\n<ngx-govuk-text-input\n  formControlName=\"firstName\"\n  inputId=\"first-name\"\n  autocomplete=\"given-name\"\n></ngx-govuk-text-input>\n```\n```\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  GovUKCommonFormInputDirective,\n  ValueAccessorDirective,\n  injectNgControl,\n  inputCommonInputs,\n} from 'ngx-govuk-frontend/form-utils';\n\n/**\n * A form input component that follows the GOV.UK Design System styling and behavior.\n *\n * This component provides a text input field with optional features like autocomplete, prefixes, and suffixes.\n * It integrates with Angular's form controls and supports accessibility features.\n *\n * @example\n * ```html\n * <ngx-govuk-text-input\n *   formControlName=\"firstName\"\n *   inputId=\"first-name\"\n *   autocomplete=\"given-name\"\n * ></ngx-govuk-text-input>\n * ```\n *\n * @property {string} autocomplete - Optional. The HTML autocomplete attribute value. Defaults to 'off'.\n * @property {string} extraClasses - Optional. Additional CSS classes to apply to the input element.\n * @property {string} inputId - Optional. The ID attribute for the input element.\n * @property {string} prefix - Optional. Text or symbol displayed before the input field (e.g., '£').\n * @property {string} suffix - Optional. Text or symbol displayed after the input field (e.g., 'per day').\n */\n@Component({\n    selector: 'ngx-govuk-text-input',\n    imports: [NgClass, ReactiveFormsModule],\n    templateUrl: './text-input.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [\n        ValueAccessorDirective,\n        { directive: GovUKCommonFormInputDirective, inputs: inputCommonInputs },\n    ]\n})\nexport class GovUKTextInputComponent {\n  readonly ngControl = injectNgControl();\n  readonly commonFormInput = inject(GovUKCommonFormInputDirective);\n\n  readonly prefix = input<string>();\n  readonly suffix = input<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-input__wrapper\">\n  @if (prefix()) {\n    <div class=\"govuk-input__prefix\" aria-hidden=\"true\">{{ prefix() }}</div>\n  }\n\n  <input\n    class=\"govuk-input\"\n    [ngClass]=\"commonFormInput.extraClasses()\"\n    [class.govuk-input--error]=\"ngControl.touched && ngControl.errors\"\n    [attr.id]=\"commonFormInput.inputId() ? commonFormInput.inputId() : null\"\n    [attr.autocomplete]=\"\n      commonFormInput.autocomplete() ? commonFormInput.autocomplete() : null\n    \"\n    type=\"text\"\n    [formControl]=\"ngControl.control\"\n  />\n\n  @if (suffix()) {\n    <div class=\"govuk-input__suffix\" aria-hidden=\"true\">{{ suffix() }}</div>\n  }\n</div>\n"
        },
        {
            "name": "GovUKWarningTextComponent",
            "id": "component-GovUKWarningTextComponent-e9243fdf631410db7d91053ca64fe4e76ae2a60adaa885087a79de6e3e512dc43f46ff59a44fb919ca55c7a31bb5a500e8ad618d797350488b7ae83a2dff0690",
            "file": "libs/ngx-govuk-frontend/warning-text/src/lib/warning-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-warning-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./warning-text.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-warning-text',\n  templateUrl: './warning-text.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GovUKWarningTextComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-warning-text\">\n  <span class=\"govuk-warning-text__icon\" aria-hidden=\"true\">!</span>\n  <strong class=\"govuk-warning-text__text\">\n    <span class=\"govuk-visually-hidden\">Warning</span>\n    <ng-content></ng-content>\n  </strong>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "inputCommonInputs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk-frontend/form-utils/src/lib/common-input.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['autocomplete', 'extraClasses', 'inputId']"
            }
        ],
        "functions": [
            {
                "name": "injectNgControl",
                "file": "libs/ngx-govuk-frontend/form-utils/src/lib/inject-control.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Injects and validates the NgControl instance for form control components.</p>\n",
                "args": [],
                "jsdoctags": [
                    {
                        "tagName": {
                            "pos": 222,
                            "end": 229,
                            "kind": 80,
                            "id": 0,
                            "flags": 16777216,
                            "transformFlags": 0,
                            "escapedText": "returns"
                        },
                        "comment": "<p>The injected NgControl instance.</p>\n",
                        "returnType": ""
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "GovUKButtonColorType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"warning\" | \"inverse\"",
                "file": "libs/ngx-govuk-frontend/button/src/lib/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>The color type for GovUK buttons</p>\n",
                "kind": 192
            },
            {
                "name": "GovUKPhase",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"alpha\" | \"beta\"",
                "file": "libs/ngx-govuk-frontend/phase-banner/src/lib/phase-banner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "GovUKTableColumn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/ngx-govuk-frontend/table/src/lib/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "GovUKTagColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"grey\" | \"green\" | \"turquoise\" | \"blue\" | \"light-blue\" | \"purple\" | \"pink\" | \"red\" | \"orange\" | \"yellow\"",
                "file": "libs/ngx-govuk-frontend/tag/src/lib/tag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "PaginationMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"block\" | \"list\"",
                "file": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Pagination mode - defines layout and behavior</p>\n",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/ngx-govuk-frontend/form-utils/src/lib/common-input.directive.ts": [
                {
                    "name": "inputCommonInputs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk-frontend/form-utils/src/lib/common-input.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['autocomplete', 'extraClasses', 'inputId']"
                }
            ]
        },
        "groupedFunctions": {
            "libs/ngx-govuk-frontend/form-utils/src/lib/inject-control.ts": [
                {
                    "name": "injectNgControl",
                    "file": "libs/ngx-govuk-frontend/form-utils/src/lib/inject-control.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Injects and validates the NgControl instance for form control components.</p>\n",
                    "args": [],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 222,
                                "end": 229,
                                "kind": 80,
                                "id": 0,
                                "flags": 16777216,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The injected NgControl instance.</p>\n",
                            "returnType": ""
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/ngx-govuk-frontend/button/src/lib/button/button.component.ts": [
                {
                    "name": "GovUKButtonColorType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"warning\" | \"inverse\"",
                    "file": "libs/ngx-govuk-frontend/button/src/lib/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>The color type for GovUK buttons</p>\n",
                    "kind": 192
                }
            ],
            "libs/ngx-govuk-frontend/phase-banner/src/lib/phase-banner.component.ts": [
                {
                    "name": "GovUKPhase",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"alpha\" | \"beta\"",
                    "file": "libs/ngx-govuk-frontend/phase-banner/src/lib/phase-banner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "libs/ngx-govuk-frontend/table/src/lib/table.component.ts": [
                {
                    "name": "GovUKTableColumn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/ngx-govuk-frontend/table/src/lib/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/ngx-govuk-frontend/tag/src/lib/tag.component.ts": [
                {
                    "name": "GovUKTagColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"grey\" | \"green\" | \"turquoise\" | \"blue\" | \"light-blue\" | \"purple\" | \"pink\" | \"red\" | \"orange\" | \"yellow\"",
                    "file": "libs/ngx-govuk-frontend/tag/src/lib/tag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts": [
                {
                    "name": "PaginationMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"block\" | \"list\"",
                    "file": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Pagination mode - defines layout and behavior</p>\n",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 37,
        "status": "medium",
        "files": [
            {
                "filePath": "libs/ngx-govuk-frontend/accordion/src/lib/accordion-item/accordion-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKAccordionItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/accordion/src/lib/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKAccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/back-link/src/lib/back-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKBackLinkComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/breadcrumbs/src/lib/breadcrumb/breadcrumb.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKBreadcrumbDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/breadcrumbs/src/lib/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKBreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/button/src/lib/button-group/button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKButtonGroupComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/button/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKButtonComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/button/src/lib/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GovUKButtonColorType",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/checkbox/src/lib/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/cookie-banner/src/lib/cookie-banner/cookie-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKCookieBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/cookie-banner/src/lib/cookie-confirmation/cookie-confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKCookieConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/date-input/src/lib/date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKDateInputComponent",
                "coveragePercent": 18,
                "coverageCount": "3/16",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/date-input/src/lib/date-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DateInputParts",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/details/src/lib/details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/error-summary/src/lib/error-summary-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKErrorSummaryItemDirective",
                "coveragePercent": 100,
                "coverageCount": "5/5",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/error-summary/src/lib/error-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKErrorSummaryComponent",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/fieldset/src/lib/fieldset.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFieldsetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/file-upload/src/lib/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFileUploadComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterLinkComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer-links.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterLinksComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer-meta.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterMetaComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer-navigation-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterNavigationItemComponent",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer-navigation-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterNavigationSectionComponent",
                "coveragePercent": 100,
                "coverageCount": "9/9",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterNavigationComponent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/footer/src/lib/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFooterComponent",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/form-group/src/lib/form-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKFormGroupComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/form-utils/src/lib/common-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKCommonFormInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/form-utils/src/lib/common-input.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "inputCommonInputs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/form-utils/src/lib/inject-control.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "injectNgControl",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/form-utils/src/lib/value-accessor.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ValueAccessorDirective",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/header/src/lib/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/inset-text/src/lib/inset-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKInsetTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/notification-banner/src/lib/notification-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKNotificationBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKPaginationComponent",
                "coveragePercent": 100,
                "coverageCount": "28/28",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageItem",
                "coveragePercent": 100,
                "coverageCount": "6/6",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/pagination/src/lib/pagination.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "PaginationMode",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/panel/src/lib/panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/password-input/src/lib/password-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKPasswordInputComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/phase-banner/src/lib/phase-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKPhaseBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/phase-banner/src/lib/phase-banner.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GovUKPhase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/radio/src/lib/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKRadioGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/radio/src/lib/radio-option.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKRadioOptionDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/select/src/lib/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/select/src/lib/select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GovUKSelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/service-navigation/src/lib/item/navigation-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKServiceNavigationItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/service-navigation/src/lib/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKServiceNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/skip-link/src/lib/skip-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSkipLinkComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSummaryListActionComponent",
                "coveragePercent": 100,
                "coverageCount": "8/8",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-actions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSummaryListActionsComponent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-card-actions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSummaryListCardActionsComponent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSummaryListCardComponent",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSummaryListItemComponent",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list-value.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKSummaryListValueDirective",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/summary-list/src/lib/summary-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKSummaryListComponent",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/table/src/lib/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/table/src/lib/table.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GovUKTableColumn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/tabs/src/lib/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/tabs/src/lib/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/tag/src/lib/tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/tag/src/lib/tag.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GovUKTagColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/task-list/src/lib/task-list-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GovUKTaskListItemDirective",
                "coveragePercent": 100,
                "coverageCount": "14/14",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/task-list/src/lib/task-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTaskListComponent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/text-input/src/lib/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTextInputComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/textarea/src/lib/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKTextareaComponent",
                "coveragePercent": 7,
                "coverageCount": "1/13",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk-frontend/warning-text/src/lib/warning-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GovUKWarningTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}